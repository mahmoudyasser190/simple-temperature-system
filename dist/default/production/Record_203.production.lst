

Microchip MPLAB XC8 Assembler V2.41 build 20230208172133 
                                                                                               Sat Sep 09 18:09:16 2023

Microchip MPLAB XC8 C Compiler v2.41 (Free license) build 20230208172133 Og1 
     1                           	processor	18F4620
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	idataCOMRAM,global,class=CODE,delta=1,noexec
     6                           	psect	idataBANK0,global,class=CODE,delta=1,noexec
     7                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1,noexec
     8                           	psect	nvBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
     9                           	psect	cinit,global,reloc=2,class=CODE,delta=1
    10                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    11                           	psect	dataCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    12                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    13                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    14                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    15                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    16                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    17                           	psect	text0,global,reloc=2,class=CODE,delta=1
    18                           	psect	text1,global,reloc=2,class=CODE,delta=1
    19                           	psect	text2,global,reloc=2,class=CODE,delta=1
    20                           	psect	text3,global,reloc=2,class=CODE,delta=1
    21                           	psect	text4,global,reloc=2,class=CODE,delta=1
    22                           	psect	text5,global,reloc=2,class=CODE,delta=1
    23                           	psect	text6,global,reloc=2,class=CODE,delta=1
    24                           	psect	text7,global,reloc=2,class=CODE,delta=1
    25                           	psect	text8,global,reloc=2,class=CODE,delta=1,group=3
    26                           	psect	text9,global,reloc=2,class=CODE,delta=1,group=1
    27                           	psect	text10,global,reloc=2,class=CODE,delta=1,group=1
    28                           	psect	text11,global,reloc=2,class=CODE,delta=1,group=1
    29                           	psect	text12,global,reloc=2,class=CODE,delta=1,group=1
    30                           	psect	text13,global,reloc=2,class=CODE,delta=1,group=3
    31                           	psect	text14,global,reloc=2,class=CODE,delta=1,group=3
    32                           	psect	text15,global,reloc=2,class=CODE,delta=1,group=3
    33                           	psect	text16,global,reloc=2,class=CODE,delta=1,group=3
    34                           	psect	text17,global,reloc=2,class=CODE,delta=1,group=2
    35                           	psect	text18,global,reloc=2,class=CODE,delta=1,group=2
    36                           	psect	text19,global,reloc=2,class=CODE,delta=1,group=3
    37                           	psect	text20,global,reloc=2,class=CODE,delta=1
    38                           	psect	text21,global,reloc=2,class=CODE,delta=1
    39                           	psect	text22,global,reloc=2,class=CODE,delta=1
    40                           	psect	text23,global,reloc=2,class=CODE,delta=1
    41                           	psect	text24,global,reloc=2,class=CODE,delta=1
    42                           	psect	text25,global,reloc=2,class=CODE,delta=1
    43                           	psect	text26,global,reloc=2,class=CODE,delta=1
    44                           	psect	text27,global,reloc=2,class=CODE,delta=1
    45                           	psect	text28,global,reloc=2,class=CODE,delta=1
    46                           	psect	text29,global,reloc=2,class=CODE,delta=1
    47                           	psect	text30,global,reloc=2,class=CODE,delta=1,inline
    48                           	psect	text31,global,reloc=2,class=CODE,delta=1,inline
    49                           	psect	text32,global,reloc=2,class=CODE,delta=1,group=2
    50                           	psect	text33,global,reloc=2,class=CODE,delta=1,group=2
    51                           	psect	text34,global,reloc=2,class=CODE,delta=1,group=2
    52                           	psect	text35,global,reloc=2,class=CODE,delta=1,group=2
    53                           	psect	text36,global,reloc=2,class=CODE,delta=1
    54                           	psect	text37,global,reloc=2,class=CODE,delta=1
    55                           	psect	text38,global,reloc=2,class=CODE,delta=1
    56                           	psect	text39,global,reloc=2,class=CODE,delta=1,inline
    57                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    58                           	psect	intcode_body,global,reloc=2,class=CODE,delta=1
    59                           	psect	text41,global,reloc=2,class=CODE,delta=1
    60                           	psect	text42,global,reloc=2,class=CODE,delta=1
    61                           	psect	text43,global,reloc=2,class=CODE,delta=1
    62                           	psect	text44,global,reloc=2,class=CODE,delta=1
    63                           	psect	text45,global,reloc=2,class=CODE,delta=1
    64                           	psect	text46,global,reloc=2,class=CODE,delta=1
    65                           	psect	text47,global,reloc=2,class=CODE,delta=1
    66                           	psect	text48,global,reloc=2,class=CODE,delta=1
    67                           	psect	text49,global,reloc=2,class=CODE,delta=1
    68                           	psect	text50,global,reloc=2,class=CODE,delta=1
    69                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    70                           	psect	text51,global,reloc=2,class=CODE,delta=1
    71                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    72                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    73                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=1,noexec
    74                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    75   000000                     
    76                           ; Generated 09/02/2023 GMT
    77                           ; 
    78                           ; Copyright Â© 2023, Microchip Technology Inc. and its subsidiaries ("Microchip")
    79                           ; All rights reserved.
    80                           ; 
    81                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    82                           ; 
    83                           ; Redistribution and use in source and binary forms, with or without modification, are
    84                           ; permitted provided that the following conditions are met:
    85                           ; 
    86                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    87                           ;        conditions and the following disclaimer.
    88                           ; 
    89                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    90                           ;        of conditions and the following disclaimer in the documentation and/or other
    91                           ;        materials provided with the distribution. Publication is not required when
    92                           ;        this file is used in an embedded application.
    93                           ; 
    94                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    95                           ;        software without specific prior written permission.
    96                           ; 
    97                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    98                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    99                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
   100                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
   101                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
   102                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
   103                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
   104                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
   105                           ; 
   106                           ; 
   107                           ; Code-generator required, PIC18F4620 Definitions
   108                           ; 
   109                           ; SFR Addresses
   110   000000                     
   111                           	psect	idataCOMRAM
   112   0032A0                     __pidataCOMRAM:
   113                           	callstack 0
   114                           
   115                           ;initializer for _RB7_Flag
   116   0032A0  01                 	db	1
   117                           
   118                           ;initializer for _RB6_Flag
   119   0032A1  01                 	db	1
   120                           
   121                           ;initializer for _RB5_Flag
   122   0032A2  01                 	db	1
   123                           
   124                           ;initializer for _RB4_Flag
   125   0032A3  01                 	db	1
   126                           
   127                           	psect	idataBANK0
   128   0030AA                     __pidataBANK0:
   129                           	callstack 0
   130                           
   131                           ;initializer for _port_registers
   132   0030AA  80                 	db	128
   133   0030AB  0F                 	db	15
   134   0030AC  81                 	db	129
   135   0030AD  0F                 	db	15
   136   0030AE  82                 	db	130
   137   0030AF  0F                 	db	15
   138   0030B0  83                 	db	131
   139   0030B1  0F                 	db	15
   140   0030B2  84                 	db	132
   141   0030B3  0F                 	db	15
   142                           
   143                           ;initializer for _lat_registers
   144   0030B4  89                 	db	137
   145   0030B5  0F                 	db	15
   146   0030B6  8A                 	db	138
   147   0030B7  0F                 	db	15
   148   0030B8  8B                 	db	139
   149   0030B9  0F                 	db	15
   150   0030BA  8C                 	db	140
   151   0030BB  0F                 	db	15
   152   0030BC  8D                 	db	141
   153   0030BD  0F                 	db	15
   154                           
   155                           ;initializer for _tris_registers
   156   0030BE  92                 	db	146
   157   0030BF  0F                 	db	15
   158   0030C0  93                 	db	147
   159   0030C1  0F                 	db	15
   160   0030C2  94                 	db	148
   161   0030C3  0F                 	db	15
   162   0030C4  95                 	db	149
   163   0030C5  0F                 	db	15
   164   0030C6  96                 	db	150
   165   0030C7  0F                 	db	15
   166                           
   167                           ;initializer for _keypad_obj
   168   0030C8  02                 	db	2
   169   0030C9  0A                 	db	10
   170   0030CA  12                 	db	18
   171   0030CB  1A                 	db	26
   172   0030CC  62                 	db	98
   173   0030CD  6A                 	db	106
   174   0030CE  72                 	db	114
   175   0030CF  7A                 	db	122
   176                           
   177                           ;initializer for _lcd
   178   0030D0  03                 	db	3
   179   0030D1  0B                 	db	11
   180   0030D2  02                 	db	2
   181   0030D3  0A                 	db	10
   182   0030D4  12                 	db	18
   183   0030D5  1A                 	db	26
   184   0030D6  22                 	db	34
   185   0030D7  2A                 	db	42
   186   0030D8  32                 	db	50
   187   0030D9  3A                 	db	58
   188                           
   189                           ;initializer for _adc1
   190   0030DA  54                 	db	low _adc_defaultinterrupthandler
   191   0030DB  31                 	db	high _adc_defaultinterrupthandler
   192   0030DC  00                 	db	0
   193   0030DD  05                 	db	5
   194   0030DE  05                 	db	5
   195   0030DF  00                 	db	0
   196   0030E0  02                 	db	2
   197                           
   198                           ;initializer for _dc_motor_2
   199   0030E1  23                 	db	35
   200   0030E2  2B                 	db	43
   201                           
   202                           ;initializer for _dc_motor_1
   203   0030E3  13                 	db	19
   204   0030E4  1B                 	db	27
   205                           
   206                           	psect	smallconst
   207   001000                     __psmallconst:
   208                           	callstack 0
   209   001000  00                 	db	0
   210   001001                     _btn_values:
   211                           	callstack 0
   212   001001  37                 	db	55
   213   001002  38                 	db	56
   214   001003  39                 	db	57
   215   001004  2F                 	db	47
   216   001005  34                 	db	52
   217   001006  35                 	db	53
   218   001007  36                 	db	54
   219   001008  2A                 	db	42
   220   001009  31                 	db	49
   221   00100A  32                 	db	50
   222   00100B  33                 	db	51
   223   00100C  2D                 	db	45
   224   00100D  23                 	db	35
   225   00100E  30                 	db	48
   226   00100F  3D                 	db	61
   227   001010  2B                 	db	43
   228   001011                     __end_of_btn_values:
   229                           	callstack 0
   230   000000                     _INTCON2bits	set	4081
   231   000000                     _EECON2	set	4007
   232   000000                     _ADCON1bits	set	4033
   233   000000                     _ADRESL	set	4035
   234   000000                     _ADRESH	set	4036
   235   000000                     _INTCONbits	set	4082
   236   000000                     _TRISD	set	3989
   237   000000                     _TRISC	set	3988
   238   000000                     _TRISB	set	3987
   239   000000                     _TRISE	set	3990
   240   001011                     STR_4:
   241   001011  41                 	db	65	;'A'
   242   001012  44                 	db	68	;'D'
   243   001013  43                 	db	67	;'C'
   244   001014  20                 	db	32
   245   001015  54                 	db	84	;'T'
   246   001016  45                 	db	69	;'E'
   247   001017  53                 	db	83	;'S'
   248   001018  54                 	db	84	;'T'
   249   001019  00                 	db	0
   250   00101A                     STR_5:
   251   00101A  54                 	db	84	;'T'
   252   00101B  45                 	db	69	;'E'
   253   00101C  4D                 	db	77	;'M'
   254   00101D  50                 	db	80	;'P'
   255   00101E  31                 	db	49	;'1'
   256   00101F  3A                 	db	58	;':'
   257   001020  00                 	db	0
   258   001021                     STR_6:
   259   001021  54                 	db	84	;'T'
   260   001022  45                 	db	69	;'E'
   261   001023  4D                 	db	77	;'M'
   262   001024  50                 	db	80	;'P'
   263   001025  32                 	db	50	;'2'
   264   001026  3A                 	db	58	;':'
   265   001027  00                 	db	0
   266   001028                     STR_1:
   267   001028  25                 	db	37
   268   001029  69                 	db	105	;'i'
   269   00102A  00                 	db	0
   270   00102B  00                 	db	0	; dummy byte at the end
   271   000000                     
   272                           	psect	nvBANK0
   273   0000FB                     __pnvBANK0:
   274                           	callstack 0
   275   0000FB                     _ret:
   276                           	callstack 0
   277   0000FB                     	ds	1
   278   000000                     _PORTBbits	set	3969
   279   000000                     _PIE1bits	set	3997
   280   000000                     _ADCON2bits	set	4032
   281   000000                     _ADCON0bits	set	4034
   282   000000                     _PORTE	set	3972
   283   000000                     _PORTD	set	3971
   284   000000                     _PORTC	set	3970
   285   000000                     _PORTB	set	3969
   286   000000                     _PORTA	set	3968
   287   000000                     _LATA	set	3977
   288   000000                     _TRISA	set	3986
   289   000000                     _EECON1bits	set	4006
   290   000000                     _EEDATA	set	4008
   291   000000                     _EEADR	set	4009
   292   000000                     _EEADRH	set	4010
   293   000000                     _PIR1bits	set	3998
   294   000000                     _INTCON3bits	set	4080
   295   000000                     _LATE	set	3981
   296   000000                     _LATD	set	3980
   297   000000                     _LATC	set	3979
   298   000000                     _LATB	set	3978
   299                           
   300                           ; #config settings
   301                           
   302                           	psect	cinit
   303   002D9E                     __pcinit:
   304                           	callstack 0
   305   002D9E                     start_initialization:
   306                           	callstack 0
   307   002D9E                     __initialization:
   308                           	callstack 0
   309                           
   310                           ; Initialize objects allocated to BANK0 (59 bytes)
   311                           ; load TBLPTR registers with __pidataBANK0
   312   002D9E  0EAA               	movlw	low __pidataBANK0
   313   002DA0  6EF6               	movwf	tblptrl,c
   314   002DA2  0E30               	movlw	high __pidataBANK0
   315   002DA4  6EF7               	movwf	tblptrh,c
   316   002DA6  0E00               	movlw	low (__pidataBANK0 shr (0+16))
   317   002DA8  6EF8               	movwf	tblptru,c
   318   002DAA  EE00  F080         	lfsr	0,__pdataBANK0
   319   002DAE  EE10 F03B          	lfsr	1,59
   320   002DB2                     copy_data0:
   321   002DB2  0009               	tblrd		*+
   322   002DB4  CFF5 FFEE          	movff	tablat,postinc0
   323   002DB8  50E5               	movf	postdec1,w,c
   324   002DBA  50E1               	movf	fsr1l,w,c
   325   002DBC  E1FA               	bnz	copy_data0
   326                           
   327                           ; Initialize objects allocated to COMRAM (4 bytes)
   328                           ; load TBLPTR registers with __pidataCOMRAM
   329   002DBE  0EA0               	movlw	low __pidataCOMRAM
   330   002DC0  6EF6               	movwf	tblptrl,c
   331   002DC2  0E32               	movlw	high __pidataCOMRAM
   332   002DC4  6EF7               	movwf	tblptrh,c
   333   002DC6  0E00               	movlw	low (__pidataCOMRAM shr (0+16))
   334   002DC8  6EF8               	movwf	tblptru,c
   335   002DCA  EE00  F06F         	lfsr	0,__pdataCOMRAM
   336   002DCE  EE10 F004          	lfsr	1,4
   337   002DD2                     copy_data1:
   338   002DD2  0009               	tblrd		*+
   339   002DD4  CFF5 FFEE          	movff	tablat,postinc0
   340   002DD8  50E5               	movf	postdec1,w,c
   341   002DDA  50E1               	movf	fsr1l,w,c
   342   002DDC  E1FA               	bnz	copy_data1
   343                           
   344                           ; Clear objects allocated to BANK1 (32 bytes)
   345   002DDE  EE01  F000         	lfsr	0,__pbssBANK1
   346   002DE2  0E20               	movlw	32
   347   002DE4                     clear_0:
   348   002DE4  6AEE               	clrf	postinc0,c
   349   002DE6  06E8               	decf	wreg,f,c
   350   002DE8  E1FD               	bnz	clear_0
   351                           
   352                           ; Clear objects allocated to BANK0 (52 bytes)
   353   002DEA  EE00  F0BB         	lfsr	0,__pbssBANK0
   354   002DEE  0E34               	movlw	52
   355   002DF0                     clear_1:
   356   002DF0  6AEE               	clrf	postinc0,c
   357   002DF2  06E8               	decf	wreg,f,c
   358   002DF4  E1FD               	bnz	clear_1
   359                           
   360                           ; Clear objects allocated to COMRAM (12 bytes)
   361   002DF6  EE00  F063         	lfsr	0,__pbssCOMRAM
   362   002DFA  0E0C               	movlw	12
   363   002DFC                     clear_2:
   364   002DFC  6AEE               	clrf	postinc0,c
   365   002DFE  06E8               	decf	wreg,f,c
   366   002E00  E1FD               	bnz	clear_2
   367   002E02                     end_of_initialization:
   368                           	callstack 0
   369   002E02                     __end_of__initialization:
   370                           	callstack 0
   371   002E02  9073               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   372   002E04  9273               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   373   002E06  0100               	movlb	0
   374   002E08  EF8E  F00B         	goto	_main	;jump to C main() function
   375                           
   376                           	psect	bssCOMRAM
   377   000063                     __pbssCOMRAM:
   378                           	callstack 0
   379   000063                     _lm35_res_cel_2:
   380                           	callstack 0
   381   000063                     	ds	2
   382   000065                     _lm35_res_cel_1:
   383                           	callstack 0
   384   000065                     	ds	2
   385   000067                     _adc_flag:
   386                           	callstack 0
   387   000067                     	ds	1
   388   000068                     relay_turn_off@F3052:
   389                           	callstack 0
   390   000068                     	ds	1
   391   000069                     relay_turn_on@F3047:
   392                           	callstack 0
   393   000069                     	ds	1
   394   00006A                     relay_initialize@F3042:
   395                           	callstack 0
   396   00006A                     	ds	1
   397   00006B                     led_turn_toggle@F3063:
   398                           	callstack 0
   399   00006B                     	ds	1
   400   00006C                     led_turn_off@F3058:
   401                           	callstack 0
   402   00006C                     	ds	1
   403   00006D                     led_turn_on@F3053:
   404                           	callstack 0
   405   00006D                     	ds	1
   406   00006E                     led_initialize@F3048:
   407                           	callstack 0
   408   00006E                     	ds	1
   409                           
   410                           	psect	dataCOMRAM
   411   00006F                     __pdataCOMRAM:
   412                           	callstack 0
   413   00006F                     _RB7_Flag:
   414                           	callstack 0
   415   00006F                     	ds	1
   416   000070                     _RB6_Flag:
   417                           	callstack 0
   418   000070                     	ds	1
   419   000071                     _RB5_Flag:
   420                           	callstack 0
   421   000071                     	ds	1
   422   000072                     _RB4_Flag:
   423                           	callstack 0
   424   000072                     	ds	1
   425                           
   426                           	psect	bssBANK0
   427   0000BB                     __pbssBANK0:
   428                           	callstack 0
   429   0000BB                     	ds	6
   430   0000C1                     _width:
   431                           	callstack 0
   432   0000C1                     	ds	2
   433   0000C3                     _prec:
   434                           	callstack 0
   435   0000C3                     	ds	2
   436   0000C5                     _RB7_InterruptHandler_LOW:
   437                           	callstack 0
   438   0000C5                     	ds	2
   439   0000C7                     _RB7_InterruptHandler_HIGH:
   440                           	callstack 0
   441   0000C7                     	ds	2
   442   0000C9                     _RB6_InterruptHandler_LOW:
   443                           	callstack 0
   444   0000C9                     	ds	2
   445   0000CB                     _RB6_InterruptHandler_HIGH:
   446                           	callstack 0
   447   0000CB                     	ds	2
   448   0000CD                     _RB5_InterruptHandler_LOW:
   449                           	callstack 0
   450   0000CD                     	ds	2
   451   0000CF                     _RB5_InterruptHandler_HIGH:
   452                           	callstack 0
   453   0000CF                     	ds	2
   454   0000D1                     _RB4_InterruptHandler_LOW:
   455                           	callstack 0
   456   0000D1                     	ds	2
   457   0000D3                     _RB4_InterruptHandler_HIGH:
   458                           	callstack 0
   459   0000D3                     	ds	2
   460   0000D5                     _INT2_InterruptHandler:
   461                           	callstack 0
   462   0000D5                     	ds	2
   463   0000D7                     _INT1_InterruptHandler:
   464                           	callstack 0
   465   0000D7                     	ds	2
   466   0000D9                     _INT0_InterruptHandler:
   467                           	callstack 0
   468   0000D9                     	ds	2
   469   0000DB                     _ADC_InterruptHandler:
   470                           	callstack 0
   471   0000DB                     	ds	2
   472   0000DD                     _flags:
   473                           	callstack 0
   474   0000DD                     	ds	1
   475   0000DE                     _adc_req:
   476                           	callstack 0
   477   0000DE                     	ds	1
   478   0000DF                     _adc_rss_txt_2:
   479                           	callstack 0
   480   0000DF                     	ds	6
   481   0000E5                     _adc_rss_txt_1:
   482                           	callstack 0
   483   0000E5                     	ds	6
   484   0000EB                     _adc_res_2:
   485                           	callstack 0
   486   0000EB                     	ds	2
   487   0000ED                     _adc_res_1:
   488                           	callstack 0
   489   0000ED                     	ds	2
   490                           
   491                           	psect	dataBANK0
   492   000080                     __pdataBANK0:
   493                           	callstack 0
   494   000080                     _port_registers:
   495                           	callstack 0
   496   000080                     	ds	10
   497   00008A                     _lat_registers:
   498                           	callstack 0
   499   00008A                     	ds	10
   500   000094                     _tris_registers:
   501                           	callstack 0
   502   000094                     	ds	10
   503   00009E                     _keypad_obj:
   504                           	callstack 0
   505   00009E                     	ds	8
   506   0000A6                     _lcd:
   507                           	callstack 0
   508   0000A6                     	ds	10
   509   0000B0                     _adc1:
   510                           	callstack 0
   511   0000B0                     	ds	7
   512   0000B7                     _dc_motor_2:
   513                           	callstack 0
   514   0000B7                     	ds	2
   515   0000B9                     _dc_motor_1:
   516                           	callstack 0
   517   0000B9                     	ds	2
   518                           
   519                           	psect	bssBANK1
   520   000100                     __pbssBANK1:
   521                           	callstack 0
   522   000100                     _dbuf:
   523                           	callstack 0
   524   000100                     	ds	32
   525                           
   526                           	psect	cstackBANK0
   527   0000EF                     __pcstackBANK0:
   528                           	callstack 0
   529   0000EF                     convert_uint16_to_string@value:
   530                           	callstack 0
   531                           
   532                           ; 2 bytes @ 0x0
   533   0000EF                     	ds	2
   534   0000F1                     convert_uint16_to_string@str:
   535                           	callstack 0
   536                           
   537                           ; 2 bytes @ 0x2
   538   0000F1                     	ds	2
   539   0000F3                     convert_uint16_to_string@Temp_String:
   540                           	callstack 0
   541                           
   542                           ; 6 bytes @ 0x4
   543   0000F3                     	ds	6
   544   0000F9                     convert_uint16_to_string@ret:
   545                           	callstack 0
   546                           
   547                           ; 1 bytes @ 0xA
   548   0000F9                     	ds	1
   549   0000FA                     convert_uint16_to_string@DataCounter:
   550                           	callstack 0
   551                           
   552                           ; 1 bytes @ 0xB
   553   0000FA                     	ds	1
   554                           
   555                           	psect	cstackCOMRAM
   556   000001                     __pcstackCOMRAM:
   557                           	callstack 0
   558   000001                     RB4_ISR@RB4_Source:
   559                           	callstack 0
   560   000001                     RB5_ISR@RB5_Source:
   561                           	callstack 0
   562   000001                     RB6_ISR@RB6_Source:
   563                           	callstack 0
   564   000001                     RB7_ISR@RB7_Source:
   565                           	callstack 0
   566   000001                     ADC_get_conversion_result@adc:
   567                           	callstack 0
   568                           
   569                           ; 2 bytes @ 0x0
   570   000001                     	ds	2
   571   000003                     ADC_get_conversion_result@conversion_result:
   572                           	callstack 0
   573                           
   574                           ; 2 bytes @ 0x2
   575   000003                     	ds	2
   576   000005                     ??_ADC_get_conversion_result:
   577                           
   578                           ; 1 bytes @ 0x4
   579   000005                     	ds	3
   580   000008                     ADC_get_conversion_result@ret:
   581                           	callstack 0
   582                           
   583                           ; 1 bytes @ 0x7
   584   000008                     	ds	1
   585   000009                     ??_InterruptManager:
   586                           
   587                           ; 1 bytes @ 0x8
   588   000009                     	ds	4
   589   00000D                     ??_adc_input_channel_port_configuration:
   590   00000D                     ?___awdiv:
   591                           	callstack 0
   592   00000D                     ?___awmod:
   593                           	callstack 0
   594   00000D                     ?___lwdiv:
   595                           	callstack 0
   596   00000D                     ?___xxtofl:
   597                           	callstack 0
   598   00000D                     ADC_START_CONVERSION@adc:
   599                           	callstack 0
   600   00000D                     adc_select_format@adc:
   601                           	callstack 0
   602   00000D                     configure_the_voltage_reference@adc:
   603                           	callstack 0
   604   00000D                     gpio_pin_direction_intialize@_pin_config:
   605                           	callstack 0
   606   00000D                     gpio_pin_write_logic@_pin_config:
   607                           	callstack 0
   608   00000D                     ___awdiv@dividend:
   609                           	callstack 0
   610   00000D                     ___awmod@dividend:
   611                           	callstack 0
   612   00000D                     ___lwdiv@dividend:
   613                           	callstack 0
   614   00000D                     memset@dest:
   615                           	callstack 0
   616   00000D                     fputc@c:
   617                           	callstack 0
   618   00000D                     ___xxtofl@val:
   619                           	callstack 0
   620                           
   621                           ; 4 bytes @ 0xC
   622   00000D                     	ds	2
   623   00000F                     ??_gpio_pin_direction_intialize:
   624   00000F                     ??_adc_select_format:
   625   00000F                     ??_configure_the_voltage_reference:
   626   00000F                     adc_input_channel_port_configuration@channel:
   627                           	callstack 0
   628   00000F                     gpio_pin_write_logic@logic:
   629                           	callstack 0
   630   00000F                     ___awdiv@divisor:
   631                           	callstack 0
   632   00000F                     ___awmod@divisor:
   633                           	callstack 0
   634   00000F                     ___lwdiv@divisor:
   635                           	callstack 0
   636   00000F                     memset@c:
   637                           	callstack 0
   638   00000F                     fputc@fp:
   639                           	callstack 0
   640                           
   641                           ; 2 bytes @ 0xE
   642   00000F                     	ds	1
   643   000010                     ??_gpio_pin_write_logic:
   644   000010                     ADC_SELECT_CHANNEL@adc:
   645                           	callstack 0
   646                           
   647                           ; 2 bytes @ 0xF
   648   000010                     	ds	1
   649   000011                     ??_fputc:
   650   000011                     ??___xxtofl:
   651   000011                     ___awdiv@counter:
   652                           	callstack 0
   653   000011                     ___awmod@counter:
   654                           	callstack 0
   655   000011                     ADC_INIT@adc:
   656                           	callstack 0
   657   000011                     ___lwdiv@quotient:
   658                           	callstack 0
   659   000011                     memset@n:
   660                           	callstack 0
   661                           
   662                           ; 2 bytes @ 0x10
   663   000011                     	ds	1
   664   000012                     ADC_SELECT_CHANNEL@channel:
   665                           	callstack 0
   666   000012                     ___awdiv@sign:
   667                           	callstack 0
   668   000012                     ___awmod@sign:
   669                           	callstack 0
   670                           
   671                           ; 1 bytes @ 0x11
   672   000012                     	ds	1
   673   000013                     ??_memset:
   674   000013                     ??_ADC_INIT:
   675   000013                     ??_ADC_SELECT_CHANNEL:
   676   000013                     ?_abs:
   677                           	callstack 0
   678   000013                     ___lwdiv@counter:
   679                           	callstack 0
   680   000013                     ___awdiv@quotient:
   681                           	callstack 0
   682   000013                     abs@a:
   683                           	callstack 0
   684                           
   685                           ; 2 bytes @ 0x12
   686   000013                     	ds	1
   687   000014                     ADC_INIT@ret:
   688                           	callstack 0
   689   000014                     ADC_get_conversion_interrupt@adc:
   690                           	callstack 0
   691                           
   692                           ; 2 bytes @ 0x13
   693   000014                     	ds	1
   694   000015                     ??_abs:
   695   000015                     gpio_pin_direction_intialize@ret:
   696                           	callstack 0
   697   000015                     ___xxtofl@sign:
   698                           	callstack 0
   699   000015                     memset@k:
   700                           	callstack 0
   701                           
   702                           ; 2 bytes @ 0x14
   703   000015                     	ds	1
   704   000016                     ADC_get_conversion_interrupt@channel:
   705                           	callstack 0
   706   000016                     gpio_pin_write_logic@ret:
   707                           	callstack 0
   708   000016                     ___xxtofl@exp:
   709                           	callstack 0
   710   000016                     fputs@s:
   711                           	callstack 0
   712                           
   713                           ; 2 bytes @ 0x15
   714   000016                     	ds	1
   715   000017                     ADC_get_conversion_interrupt@coversion_status:
   716                           	callstack 0
   717   000017                     lcd_8bit_send_enable_signal@lcd:
   718                           	callstack 0
   719   000017                     dc_motor_move_right@_dc_motor:
   720                           	callstack 0
   721   000017                     dc_motor_stop@_dc_motor:
   722                           	callstack 0
   723   000017                     gpio_pin_intialize@_pin_config:
   724                           	callstack 0
   725   000017                     memset@s:
   726                           	callstack 0
   727   000017                     ___xxtofl@arg:
   728                           	callstack 0
   729                           
   730                           ; 4 bytes @ 0x16
   731   000017                     	ds	1
   732   000018                     fputs@fp:
   733                           	callstack 0
   734                           
   735                           ; 2 bytes @ 0x17
   736   000018                     	ds	1
   737   000019                     ??_gpio_pin_intialize:
   738   000019                     lcd_8bit_send_enable_signal@ret:
   739                           	callstack 0
   740   000019                     dc_motor_move_right@ret:
   741                           	callstack 0
   742   000019                     dc_motor_stop@ret:
   743                           	callstack 0
   744                           
   745                           ; 1 bytes @ 0x18
   746   000019                     	ds	1
   747   00001A                     gpio_pin_intialize@ret:
   748                           	callstack 0
   749   00001A                     fputs@c:
   750                           	callstack 0
   751   00001A                     lcd_8bit_send_command@lcd:
   752                           	callstack 0
   753   00001A                     lcd_8bit_send_char_data@lcd:
   754                           	callstack 0
   755                           
   756                           ; 2 bytes @ 0x19
   757   00001A                     	ds	1
   758   00001B                     ?___flmul:
   759                           	callstack 0
   760   00001B                     dc_motor_initialize@_dc_motor:
   761                           	callstack 0
   762   00001B                     fputs@i:
   763                           	callstack 0
   764   00001B                     ___flmul@b:
   765                           	callstack 0
   766                           
   767                           ; 4 bytes @ 0x1A
   768   00001B                     	ds	1
   769   00001C                     lcd_8bit_send_command@command:
   770                           	callstack 0
   771   00001C                     lcd_8bit_send_char_data@data:
   772                           	callstack 0
   773                           
   774                           ; 1 bytes @ 0x1B
   775   00001C                     	ds	1
   776   00001D                     ??_lcd_8bit_send_command:
   777   00001D                     ??_lcd_8bit_send_char_data:
   778   00001D                     dc_motor_initialize@ret:
   779                           	callstack 0
   780   00001D                     pad@fp:
   781                           	callstack 0
   782                           
   783                           ; 2 bytes @ 0x1C
   784   00001D                     	ds	2
   785   00001F                     pad@buf:
   786                           	callstack 0
   787   00001F                     ___flmul@a:
   788                           	callstack 0
   789                           
   790                           ; 4 bytes @ 0x1E
   791   00001F                     	ds	2
   792   000021                     lcd_8bit_send_command@ret:
   793                           	callstack 0
   794   000021                     lcd_8bit_send_char_data@ret:
   795                           	callstack 0
   796   000021                     pad@p:
   797                           	callstack 0
   798                           
   799                           ; 2 bytes @ 0x20
   800   000021                     	ds	1
   801   000022                     lcd_8bit_send_command@l_pin_counter:
   802                           	callstack 0
   803   000022                     lcd_8bit_send_char_data@l_pin_counter:
   804                           	callstack 0
   805                           
   806                           ; 1 bytes @ 0x21
   807   000022                     	ds	1
   808   000023                     ??___flmul:
   809   000023                     ??_pad:
   810   000023                     lcd_8bit_intialize@lcd:
   811                           	callstack 0
   812   000023                     lcd_8bit_send_string@lcd:
   813                           	callstack 0
   814   000023                     lcd_8bit_set_cursor@lcd:
   815                           	callstack 0
   816                           
   817                           ; 2 bytes @ 0x22
   818   000023                     	ds	1
   819   000024                     pad@i:
   820                           	callstack 0
   821                           
   822                           ; 2 bytes @ 0x23
   823   000024                     	ds	1
   824   000025                     ??_lcd_8bit_intialize:
   825   000025                     lcd_8bit_set_cursor@row:
   826                           	callstack 0
   827   000025                     lcd_8bit_send_string@str:
   828                           	callstack 0
   829                           
   830                           ; 2 bytes @ 0x24
   831   000025                     	ds	1
   832   000026                     lcd_8bit_set_cursor@coulmn:
   833                           	callstack 0
   834   000026                     pad@w:
   835                           	callstack 0
   836                           
   837                           ; 2 bytes @ 0x25
   838   000026                     	ds	1
   839   000027                     ??_lcd_8bit_set_cursor:
   840   000027                     lcd_8bit_intialize@l_data_pins_counter:
   841                           	callstack 0
   842   000027                     lcd_8bit_send_string@ret:
   843                           	callstack 0
   844   000027                     ___flmul@sign:
   845                           	callstack 0
   846                           
   847                           ; 1 bytes @ 0x26
   848   000027                     	ds	1
   849   000028                     lcd_8bit_intialize@ret:
   850                           	callstack 0
   851   000028                     dtoa@fp:
   852                           	callstack 0
   853   000028                     ___flmul@grs:
   854                           	callstack 0
   855                           
   856                           ; 4 bytes @ 0x27
   857   000028                     	ds	1
   858   000029                     lcd_8bit_set_cursor@ret:
   859                           	callstack 0
   860                           
   861                           ; 1 bytes @ 0x28
   862   000029                     	ds	1
   863   00002A                     lcd_8bit_send_string_pos@lcd:
   864                           	callstack 0
   865   00002A                     dtoa@d:
   866                           	callstack 0
   867                           
   868                           ; 2 bytes @ 0x29
   869   00002A                     	ds	2
   870   00002C                     lcd_8bit_send_string_pos@row:
   871                           	callstack 0
   872   00002C                     ___flmul@aexp:
   873                           	callstack 0
   874   00002C                     _dtoa$2546:
   875                           	callstack 0
   876                           
   877                           ; 2 bytes @ 0x2B
   878   00002C                     	ds	1
   879   00002D                     lcd_8bit_send_string_pos@column:
   880                           	callstack 0
   881   00002D                     ___flmul@bexp:
   882                           	callstack 0
   883                           
   884                           ; 1 bytes @ 0x2C
   885   00002D                     	ds	1
   886   00002E                     lcd_8bit_send_string_pos@str:
   887                           	callstack 0
   888   00002E                     dtoa@p:
   889                           	callstack 0
   890   00002E                     ___flmul@prod:
   891                           	callstack 0
   892                           
   893                           ; 4 bytes @ 0x2D
   894   00002E                     	ds	2
   895   000030                     lcd_8bit_send_string_pos@ret:
   896                           	callstack 0
   897   000030                     dtoa@w:
   898                           	callstack 0
   899                           
   900                           ; 2 bytes @ 0x2F
   901   000030                     	ds	2
   902   000032                     dtoa@s:
   903                           	callstack 0
   904   000032                     ___flmul@temp:
   905                           	callstack 0
   906                           
   907                           ; 2 bytes @ 0x31
   908   000032                     	ds	1
   909   000033                     dtoa@i:
   910                           	callstack 0
   911                           
   912                           ; 2 bytes @ 0x32
   913   000033                     	ds	1
   914   000034                     ?___fltol:
   915                           	callstack 0
   916   000034                     ___fltol@f1:
   917                           	callstack 0
   918                           
   919                           ; 4 bytes @ 0x33
   920   000034                     	ds	1
   921   000035                     vfpfcnvrt@fp:
   922                           	callstack 0
   923                           
   924                           ; 2 bytes @ 0x34
   925   000035                     	ds	2
   926   000037                     vfpfcnvrt@fmt:
   927                           	callstack 0
   928                           
   929                           ; 2 bytes @ 0x36
   930   000037                     	ds	1
   931   000038                     ??___fltol:
   932                           
   933                           ; 1 bytes @ 0x37
   934   000038                     	ds	1
   935   000039                     vfpfcnvrt@ap:
   936                           	callstack 0
   937                           
   938                           ; 2 bytes @ 0x38
   939   000039                     	ds	2
   940   00003B                     ??_vfpfcnvrt:
   941                           
   942                           ; 1 bytes @ 0x3A
   943   00003B                     	ds	1
   944   00003C                     ___fltol@sign1:
   945                           	callstack 0
   946                           
   947                           ; 1 bytes @ 0x3B
   948   00003C                     	ds	1
   949   00003D                     ___fltol@exp1:
   950                           	callstack 0
   951   00003D                     vfpfcnvrt@convarg:
   952                           	callstack 0
   953                           
   954                           ; 4 bytes @ 0x3C
   955   00003D                     	ds	4
   956   000041                     vfpfcnvrt@cp:
   957                           	callstack 0
   958                           
   959                           ; 2 bytes @ 0x40
   960   000041                     	ds	2
   961   000043                     ?_vfprintf:
   962                           	callstack 0
   963   000043                     vfprintf@fp:
   964                           	callstack 0
   965                           
   966                           ; 2 bytes @ 0x42
   967   000043                     	ds	2
   968   000045                     vfprintf@fmt:
   969                           	callstack 0
   970                           
   971                           ; 2 bytes @ 0x44
   972   000045                     	ds	2
   973   000047                     vfprintf@ap:
   974                           	callstack 0
   975                           
   976                           ; 2 bytes @ 0x46
   977   000047                     	ds	2
   978   000049                     vfprintf@cfmt:
   979                           	callstack 0
   980                           
   981                           ; 2 bytes @ 0x48
   982   000049                     	ds	2
   983   00004B                     ?_sprintf:
   984                           	callstack 0
   985   00004B                     sprintf@s:
   986                           	callstack 0
   987                           
   988                           ; 2 bytes @ 0x4A
   989   00004B                     	ds	2
   990   00004D                     sprintf@fmt:
   991                           	callstack 0
   992                           
   993                           ; 2 bytes @ 0x4C
   994   00004D                     	ds	6
   995   000053                     sprintf@ap:
   996                           	callstack 0
   997                           
   998                           ; 2 bytes @ 0x52
   999   000053                     	ds	2
  1000   000055                     sprintf@f:
  1001                           	callstack 0
  1002                           
  1003                           ; 12 bytes @ 0x54
  1004   000055                     	ds	12
  1005   000061                     ??_main:
  1006                           
  1007                           ; 1 bytes @ 0x60
  1008   000061                     	ds	2
  1009                           
  1010 ;;
  1011 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
  1012 ;;
  1013 ;; *************** function _main *****************
  1014 ;; Defined at:
  1015 ;;		line 43 in file "application.c"
  1016 ;; Parameters:    Size  Location     Type
  1017 ;;		None
  1018 ;; Auto vars:     Size  Location     Type
  1019 ;;		None
  1020 ;; Return value:  Size  Location     Type
  1021 ;;                  2  964[None  ] int 
  1022 ;; Registers used:
  1023 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1024 ;; Tracked objects:
  1025 ;;		On entry : 0/0
  1026 ;;		On exit  : 0/0
  1027 ;;		Unchanged: 0/0
  1028 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1029 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1030 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1031 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1032 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1033 ;;Total ram usage:        2 bytes
  1034 ;; Hardware stack levels required when called: 13
  1035 ;; This function calls:
  1036 ;;		_ADC_get_conversion_interrupt
  1037 ;;		___flmul
  1038 ;;		___fltol
  1039 ;;		___lwdiv
  1040 ;;		___xxtofl
  1041 ;;		_application_intialize
  1042 ;;		_convert_uint16_to_string
  1043 ;;		_dc_motor_move_right
  1044 ;;		_dc_motor_stop
  1045 ;;		_lcd_8bit_send_command
  1046 ;;		_lcd_8bit_send_string_pos
  1047 ;; This function is called by:
  1048 ;;		Startup code after reset
  1049 ;; This function uses a non-reentrant model
  1050 ;;
  1051                           
  1052                           	psect	text0
  1053   00171C                     __ptext0:
  1054                           	callstack 0
  1055   00171C                     _main:
  1056                           	callstack 18
  1057   00171C                     
  1058                           ;application.c: 45:     application_intialize();
  1059   00171C  EC47  F019         	call	_application_intialize	;wreg free
  1060   001720                     
  1061                           ;application.c: 46:     ret=lcd_8bit_send_string_pos(&lcd,1,7,"ADC TEST");
  1062   001720  0EA6               	movlw	low _lcd
  1063   001722  6E2A               	movwf	lcd_8bit_send_string_pos@lcd^0,c
  1064   001724  0E00               	movlw	high _lcd
  1065   001726  6E2B               	movwf	(lcd_8bit_send_string_pos@lcd+1)^0,c
  1066   001728  0E01               	movlw	1
  1067   00172A  6E2C               	movwf	lcd_8bit_send_string_pos@row^0,c
  1068   00172C  0E07               	movlw	7
  1069   00172E  6E2D               	movwf	lcd_8bit_send_string_pos@column^0,c
  1070   001730  0E11               	movlw	low STR_4
  1071   001732  6E2E               	movwf	lcd_8bit_send_string_pos@str^0,c
  1072   001734  0E10               	movlw	high STR_4
  1073   001736  6E2F               	movwf	(lcd_8bit_send_string_pos@str+1)^0,c
  1074   001738  EC8A  F017         	call	_lcd_8bit_send_string_pos	;wreg free
  1075   00173C  0100               	movlb	0	; () banked
  1076   00173E  6FFB               	movwf	_ret& (0+255),b
  1077   001740                     
  1078                           ; BSR set to: 0
  1079                           ;application.c: 47:     _delay((unsigned long)((2000)*(4000000UL/4000.0)));
  1080   001740  0E0B               	movlw	11
  1081   001742  6E62               	movwf	(??_main+1)^0,c
  1082   001744  0E26               	movlw	38
  1083   001746  6E61               	movwf	??_main^0,c
  1084   001748  0E5E               	movlw	94
  1085   00174A                     u5757:
  1086   00174A  2EE8               	decfsz	wreg,f,c
  1087   00174C  D7FE               	bra	u5757
  1088   00174E  2E61               	decfsz	??_main^0,f,c
  1089   001750  D7FC               	bra	u5757
  1090   001752  2E62               	decfsz	(??_main+1)^0,f,c
  1091   001754  D7FA               	bra	u5757
  1092   001756                     
  1093                           ;application.c: 48:     ret=lcd_8bit_send_command(&lcd,0X01);
  1094   001756  0EA6               	movlw	low _lcd
  1095   001758  6E1A               	movwf	lcd_8bit_send_command@lcd^0,c
  1096   00175A  0E00               	movlw	high _lcd
  1097   00175C  6E1B               	movwf	(lcd_8bit_send_command@lcd+1)^0,c
  1098   00175E  0E01               	movlw	1
  1099   001760  6E1C               	movwf	lcd_8bit_send_command@command^0,c
  1100   001762  EC58  F015         	call	_lcd_8bit_send_command	;wreg free
  1101   001766  0100               	movlb	0	; () banked
  1102   001768  6FFB               	movwf	_ret& (0+255),b
  1103   00176A                     
  1104                           ; BSR set to: 0
  1105                           ;application.c: 49:     ret=lcd_8bit_send_string_pos(&lcd,1,1,"TEMP1:");
  1106   00176A  0EA6               	movlw	low _lcd
  1107   00176C  6E2A               	movwf	lcd_8bit_send_string_pos@lcd^0,c
  1108   00176E  0E00               	movlw	high _lcd
  1109   001770  6E2B               	movwf	(lcd_8bit_send_string_pos@lcd+1)^0,c
  1110   001772  0E01               	movlw	1
  1111   001774  6E2C               	movwf	lcd_8bit_send_string_pos@row^0,c
  1112   001776  0E01               	movlw	1
  1113   001778  6E2D               	movwf	lcd_8bit_send_string_pos@column^0,c
  1114   00177A  0E1A               	movlw	low STR_5
  1115   00177C  6E2E               	movwf	lcd_8bit_send_string_pos@str^0,c
  1116   00177E  0E10               	movlw	high STR_5
  1117   001780  6E2F               	movwf	(lcd_8bit_send_string_pos@str+1)^0,c
  1118   001782  EC8A  F017         	call	_lcd_8bit_send_string_pos	;wreg free
  1119   001786  0100               	movlb	0	; () banked
  1120   001788  6FFB               	movwf	_ret& (0+255),b
  1121   00178A                     
  1122                           ; BSR set to: 0
  1123                           ;application.c: 50:     ret=lcd_8bit_send_string_pos(&lcd,2,1,"TEMP2:");
  1124   00178A  0EA6               	movlw	low _lcd
  1125   00178C  6E2A               	movwf	lcd_8bit_send_string_pos@lcd^0,c
  1126   00178E  0E00               	movlw	high _lcd
  1127   001790  6E2B               	movwf	(lcd_8bit_send_string_pos@lcd+1)^0,c
  1128   001792  0E02               	movlw	2
  1129   001794  6E2C               	movwf	lcd_8bit_send_string_pos@row^0,c
  1130   001796  0E01               	movlw	1
  1131   001798  6E2D               	movwf	lcd_8bit_send_string_pos@column^0,c
  1132   00179A  0E21               	movlw	low STR_6
  1133   00179C  6E2E               	movwf	lcd_8bit_send_string_pos@str^0,c
  1134   00179E  0E10               	movlw	high STR_6
  1135   0017A0  6E2F               	movwf	(lcd_8bit_send_string_pos@str+1)^0,c
  1136   0017A2  EC8A  F017         	call	_lcd_8bit_send_string_pos	;wreg free
  1137   0017A6  0100               	movlb	0	; () banked
  1138   0017A8  6FFB               	movwf	_ret& (0+255),b
  1139   0017AA                     l6348:
  1140                           
  1141                           ; BSR set to: 0
  1142                           ;application.c: 54:     {;application.c: 55:         ret=ADC_get_conversion_interrupt(&a
      +                          dc1,ADC_CHANNEL_AN0);
  1143   0017AA  0EB0               	movlw	low _adc1
  1144   0017AC  6E14               	movwf	ADC_get_conversion_interrupt@adc^0,c
  1145   0017AE  0E00               	movlw	high _adc1
  1146   0017B0  6E15               	movwf	(ADC_get_conversion_interrupt@adc+1)^0,c
  1147   0017B2  0E00               	movlw	0
  1148   0017B4  6E16               	movwf	ADC_get_conversion_interrupt@channel^0,c
  1149   0017B6  EC73  F018         	call	_ADC_get_conversion_interrupt	;wreg free
  1150   0017BA  0100               	movlb	0	; () banked
  1151   0017BC  6FFB               	movwf	_ret& (0+255),b
  1152   0017BE                     
  1153                           ; BSR set to: 0
  1154                           ;application.c: 56:         ret=ADC_get_conversion_interrupt(&adc1,ADC_CHANNEL_AN1);
  1155   0017BE  0EB0               	movlw	low _adc1
  1156   0017C0  6E14               	movwf	ADC_get_conversion_interrupt@adc^0,c
  1157   0017C2  0E00               	movlw	high _adc1
  1158   0017C4  6E15               	movwf	(ADC_get_conversion_interrupt@adc+1)^0,c
  1159   0017C6  0E01               	movlw	1
  1160   0017C8  6E16               	movwf	ADC_get_conversion_interrupt@channel^0,c
  1161   0017CA  EC73  F018         	call	_ADC_get_conversion_interrupt	;wreg free
  1162   0017CE  0100               	movlb	0	; () banked
  1163   0017D0  6FFB               	movwf	_ret& (0+255),b
  1164   0017D2                     
  1165                           ; BSR set to: 0
  1166                           ;application.c: 58:         lm35_res_cel_1=adc_res_1 * 4.88f;
  1167   0017D2  0EF6               	movlw	246
  1168   0017D4  6E1F               	movwf	___flmul@a^0,c
  1169   0017D6  0E28               	movlw	40
  1170   0017D8  6E20               	movwf	(___flmul@a+1)^0,c
  1171   0017DA  0E9C               	movlw	156
  1172   0017DC  6E21               	movwf	(___flmul@a+2)^0,c
  1173   0017DE  0E40               	movlw	64
  1174   0017E0  6E22               	movwf	(___flmul@a+3)^0,c
  1175   0017E2  C0ED  F00D         	movff	_adc_res_1,___xxtofl@val
  1176   0017E6  C0EE  F00E         	movff	_adc_res_1+1,___xxtofl@val+1
  1177   0017EA  6A0F               	clrf	(___xxtofl@val+2)^0,c
  1178   0017EC  6A10               	clrf	(___xxtofl@val+3)^0,c
  1179   0017EE  0E00               	movlw	0
  1180   0017F0  ECCE  F00C         	call	___xxtofl
  1181   0017F4  C00D  F01B         	movff	?___xxtofl,___flmul@b
  1182   0017F8  C00E  F01C         	movff	?___xxtofl+1,___flmul@b+1
  1183   0017FC  C00F  F01D         	movff	?___xxtofl+2,___flmul@b+2
  1184   001800  C010  F01E         	movff	?___xxtofl+3,___flmul@b+3
  1185   001804  EC16  F008         	call	___flmul	;wreg free
  1186   001808  C01B  F034         	movff	?___flmul,___fltol@f1
  1187   00180C  C01C  F035         	movff	?___flmul+1,___fltol@f1+1
  1188   001810  C01D  F036         	movff	?___flmul+2,___fltol@f1+2
  1189   001814  C01E  F037         	movff	?___flmul+3,___fltol@f1+3
  1190   001818  EC92  F011         	call	___fltol	;wreg free
  1191   00181C  C034  F065         	movff	?___fltol,_lm35_res_cel_1
  1192   001820  C035  F066         	movff	?___fltol+1,_lm35_res_cel_1+1
  1193   001824                     
  1194                           ;application.c: 59:         lm35_res_cel_2=adc_res_2 * 4.88f;
  1195   001824  0EF6               	movlw	246
  1196   001826  6E1F               	movwf	___flmul@a^0,c
  1197   001828  0E28               	movlw	40
  1198   00182A  6E20               	movwf	(___flmul@a+1)^0,c
  1199   00182C  0E9C               	movlw	156
  1200   00182E  6E21               	movwf	(___flmul@a+2)^0,c
  1201   001830  0E40               	movlw	64
  1202   001832  6E22               	movwf	(___flmul@a+3)^0,c
  1203   001834  C0EB  F00D         	movff	_adc_res_2,___xxtofl@val
  1204   001838  C0EC  F00E         	movff	_adc_res_2+1,___xxtofl@val+1
  1205   00183C  6A0F               	clrf	(___xxtofl@val+2)^0,c
  1206   00183E  6A10               	clrf	(___xxtofl@val+3)^0,c
  1207   001840  0E00               	movlw	0
  1208   001842  ECCE  F00C         	call	___xxtofl
  1209   001846  C00D  F01B         	movff	?___xxtofl,___flmul@b
  1210   00184A  C00E  F01C         	movff	?___xxtofl+1,___flmul@b+1
  1211   00184E  C00F  F01D         	movff	?___xxtofl+2,___flmul@b+2
  1212   001852  C010  F01E         	movff	?___xxtofl+3,___flmul@b+3
  1213   001856  EC16  F008         	call	___flmul	;wreg free
  1214   00185A  C01B  F034         	movff	?___flmul,___fltol@f1
  1215   00185E  C01C  F035         	movff	?___flmul+1,___fltol@f1+1
  1216   001862  C01D  F036         	movff	?___flmul+2,___fltol@f1+2
  1217   001866  C01E  F037         	movff	?___flmul+3,___fltol@f1+3
  1218   00186A  EC92  F011         	call	___fltol	;wreg free
  1219   00186E  C034  F063         	movff	?___fltol,_lm35_res_cel_2
  1220   001872  C035  F064         	movff	?___fltol+1,_lm35_res_cel_2+1
  1221   001876                     
  1222                           ;application.c: 61:         lm35_res_cel_1/=10;
  1223   001876  C065  F00D         	movff	_lm35_res_cel_1,___lwdiv@dividend
  1224   00187A  C066  F00E         	movff	_lm35_res_cel_1+1,___lwdiv@dividend+1
  1225   00187E  0E00               	movlw	0
  1226   001880  6E10               	movwf	(___lwdiv@divisor+1)^0,c
  1227   001882  0E0A               	movlw	10
  1228   001884  6E0F               	movwf	___lwdiv@divisor^0,c
  1229   001886  EC5D  F016         	call	___lwdiv	;wreg free
  1230   00188A  C00D  F065         	movff	?___lwdiv,_lm35_res_cel_1
  1231   00188E  C00E  F066         	movff	?___lwdiv+1,_lm35_res_cel_1+1
  1232   001892                     
  1233                           ;application.c: 62:         lm35_res_cel_2/=10;
  1234   001892  C063  F00D         	movff	_lm35_res_cel_2,___lwdiv@dividend
  1235   001896  C064  F00E         	movff	_lm35_res_cel_2+1,___lwdiv@dividend+1
  1236   00189A  0E00               	movlw	0
  1237   00189C  6E10               	movwf	(___lwdiv@divisor+1)^0,c
  1238   00189E  0E0A               	movlw	10
  1239   0018A0  6E0F               	movwf	___lwdiv@divisor^0,c
  1240   0018A2  EC5D  F016         	call	___lwdiv	;wreg free
  1241   0018A6  C00D  F063         	movff	?___lwdiv,_lm35_res_cel_2
  1242   0018AA  C00E  F064         	movff	?___lwdiv+1,_lm35_res_cel_2+1
  1243   0018AE                     
  1244                           ;application.c: 64:         ret=convert_uint16_to_string(lm35_res_cel_1,adc_rss_txt_1);
  1245   0018AE  C065  F0EF         	movff	_lm35_res_cel_1,convert_uint16_to_string@value
  1246   0018B2  C066  F0F0         	movff	_lm35_res_cel_1+1,convert_uint16_to_string@value+1
  1247   0018B6  0EE5               	movlw	low _adc_rss_txt_1
  1248   0018B8  0100               	movlb	0	; () banked
  1249   0018BA  6FF1               	movwf	convert_uint16_to_string@str& (0+255),b
  1250   0018BC  0E00               	movlw	high _adc_rss_txt_1
  1251   0018BE  6FF2               	movwf	(convert_uint16_to_string@str+1)& (0+255),b
  1252   0018C0  ECB5  F013         	call	_convert_uint16_to_string	;wreg free
  1253   0018C4  0100               	movlb	0	; () banked
  1254   0018C6  6FFB               	movwf	_ret& (0+255),b
  1255   0018C8                     
  1256                           ; BSR set to: 0
  1257                           ;application.c: 65:         ret=convert_uint16_to_string(lm35_res_cel_2,adc_rss_txt_2);
  1258   0018C8  C063  F0EF         	movff	_lm35_res_cel_2,convert_uint16_to_string@value
  1259   0018CC  C064  F0F0         	movff	_lm35_res_cel_2+1,convert_uint16_to_string@value+1
  1260   0018D0  0EDF               	movlw	low _adc_rss_txt_2
  1261   0018D2  6FF1               	movwf	convert_uint16_to_string@str& (0+255),b
  1262   0018D4  0E00               	movlw	high _adc_rss_txt_2
  1263   0018D6  6FF2               	movwf	(convert_uint16_to_string@str+1)& (0+255),b
  1264   0018D8  ECB5  F013         	call	_convert_uint16_to_string	;wreg free
  1265   0018DC  0100               	movlb	0	; () banked
  1266   0018DE  6FFB               	movwf	_ret& (0+255),b
  1267   0018E0                     
  1268                           ; BSR set to: 0
  1269                           ;application.c: 69:         ret=lcd_8bit_send_string_pos(&lcd,1,7,adc_rss_txt_1);
  1270   0018E0  0EA6               	movlw	low _lcd
  1271   0018E2  6E2A               	movwf	lcd_8bit_send_string_pos@lcd^0,c
  1272   0018E4  0E00               	movlw	high _lcd
  1273   0018E6  6E2B               	movwf	(lcd_8bit_send_string_pos@lcd+1)^0,c
  1274   0018E8  0E01               	movlw	1
  1275   0018EA  6E2C               	movwf	lcd_8bit_send_string_pos@row^0,c
  1276   0018EC  0E07               	movlw	7
  1277   0018EE  6E2D               	movwf	lcd_8bit_send_string_pos@column^0,c
  1278   0018F0  0EE5               	movlw	low _adc_rss_txt_1
  1279   0018F2  6E2E               	movwf	lcd_8bit_send_string_pos@str^0,c
  1280   0018F4  0E00               	movlw	high _adc_rss_txt_1
  1281   0018F6  6E2F               	movwf	(lcd_8bit_send_string_pos@str+1)^0,c
  1282   0018F8  EC8A  F017         	call	_lcd_8bit_send_string_pos	;wreg free
  1283   0018FC  0100               	movlb	0	; () banked
  1284   0018FE  6FFB               	movwf	_ret& (0+255),b
  1285   001900                     
  1286                           ; BSR set to: 0
  1287                           ;application.c: 70:         ret=lcd_8bit_send_string_pos(&lcd,2,7,adc_rss_txt_2);
  1288   001900  0EA6               	movlw	low _lcd
  1289   001902  6E2A               	movwf	lcd_8bit_send_string_pos@lcd^0,c
  1290   001904  0E00               	movlw	high _lcd
  1291   001906  6E2B               	movwf	(lcd_8bit_send_string_pos@lcd+1)^0,c
  1292   001908  0E02               	movlw	2
  1293   00190A  6E2C               	movwf	lcd_8bit_send_string_pos@row^0,c
  1294   00190C  0E07               	movlw	7
  1295   00190E  6E2D               	movwf	lcd_8bit_send_string_pos@column^0,c
  1296   001910  0EDF               	movlw	low _adc_rss_txt_2
  1297   001912  6E2E               	movwf	lcd_8bit_send_string_pos@str^0,c
  1298   001914  0E00               	movlw	high _adc_rss_txt_2
  1299   001916  6E2F               	movwf	(lcd_8bit_send_string_pos@str+1)^0,c
  1300   001918  EC8A  F017         	call	_lcd_8bit_send_string_pos	;wreg free
  1301   00191C  0100               	movlb	0	; () banked
  1302   00191E  6FFB               	movwf	_ret& (0+255),b
  1303   001920                     
  1304                           ; BSR set to: 0
  1305                           ;application.c: 72:         if(lm35_res_cel_1>30)
  1306   001920  5066               	movf	(_lm35_res_cel_1+1)^0,w,c
  1307   001922  E109               	bnz	u5730
  1308   001924  0E1F               	movlw	31
  1309   001926  5C65               	subwf	_lm35_res_cel_1^0,w,c
  1310   001928  A0D8               	btfss	status,0,c
  1311   00192A  EF99  F00C         	goto	u5731
  1312   00192E  EF9B  F00C         	goto	u5730
  1313   001932                     u5731:
  1314   001932  EFA5  F00C         	goto	l6372
  1315   001936                     u5730:
  1316   001936                     
  1317                           ; BSR set to: 0
  1318                           ;application.c: 73:         {;application.c: 74:             ret=dc_motor_move_right(&dc
      +                          _motor_1);
  1319   001936  0EB9               	movlw	low _dc_motor_1
  1320   001938  6E17               	movwf	dc_motor_move_right@_dc_motor^0,c
  1321   00193A  0E00               	movlw	high _dc_motor_1
  1322   00193C  6E18               	movwf	(dc_motor_move_right@_dc_motor+1)^0,c
  1323   00193E  ECD1  F017         	call	_dc_motor_move_right	;wreg free
  1324   001942  0100               	movlb	0	; () banked
  1325   001944  6FFB               	movwf	_ret& (0+255),b
  1326                           
  1327                           ;application.c: 75:         }
  1328   001946  EFAD  F00C         	goto	l6374
  1329   00194A                     l6372:
  1330                           
  1331                           ; BSR set to: 0
  1332                           ;application.c: 77:         {;application.c: 78:             ret=dc_motor_stop(&dc_motor
      +                          _1);
  1333   00194A  0EB9               	movlw	low _dc_motor_1
  1334   00194C  6E17               	movwf	dc_motor_stop@_dc_motor^0,c
  1335   00194E  0E00               	movlw	high _dc_motor_1
  1336   001950  6E18               	movwf	(dc_motor_stop@_dc_motor+1)^0,c
  1337   001952  ECAE  F017         	call	_dc_motor_stop	;wreg free
  1338   001956  0100               	movlb	0	; () banked
  1339   001958  6FFB               	movwf	_ret& (0+255),b
  1340   00195A                     l6374:
  1341                           
  1342                           ; BSR set to: 0
  1343                           ;application.c: 80:         if(lm35_res_cel_2<5)
  1344   00195A  5064               	movf	(_lm35_res_cel_2+1)^0,w,c
  1345   00195C  E107               	bnz	u5741
  1346   00195E  0E05               	movlw	5
  1347   001960  5C63               	subwf	_lm35_res_cel_2^0,w,c
  1348   001962  B0D8               	btfsc	status,0,c
  1349   001964  EFB6  F00C         	goto	u5741
  1350   001968  EFB8  F00C         	goto	u5740
  1351   00196C                     u5741:
  1352   00196C  EFC2  F00C         	goto	l6378
  1353   001970                     u5740:
  1354   001970                     
  1355                           ; BSR set to: 0
  1356                           ;application.c: 81:         {;application.c: 82:             ret=dc_motor_move_right(&dc
      +                          _motor_2);
  1357   001970  0EB7               	movlw	low _dc_motor_2
  1358   001972  6E17               	movwf	dc_motor_move_right@_dc_motor^0,c
  1359   001974  0E00               	movlw	high _dc_motor_2
  1360   001976  6E18               	movwf	(dc_motor_move_right@_dc_motor+1)^0,c
  1361   001978  ECD1  F017         	call	_dc_motor_move_right	;wreg free
  1362   00197C  0100               	movlb	0	; () banked
  1363   00197E  6FFB               	movwf	_ret& (0+255),b
  1364                           
  1365                           ;application.c: 83:         }
  1366   001980  EFD5  F00B         	goto	l6348
  1367   001984                     l6378:
  1368                           
  1369                           ; BSR set to: 0
  1370                           ;application.c: 85:         {;application.c: 86:             ret=dc_motor_stop(&dc_motor
      +                          _2);
  1371   001984  0EB7               	movlw	low _dc_motor_2
  1372   001986  6E17               	movwf	dc_motor_stop@_dc_motor^0,c
  1373   001988  0E00               	movlw	high _dc_motor_2
  1374   00198A  6E18               	movwf	(dc_motor_stop@_dc_motor+1)^0,c
  1375   00198C  ECAE  F017         	call	_dc_motor_stop	;wreg free
  1376   001990  0100               	movlb	0	; () banked
  1377   001992  6FFB               	movwf	_ret& (0+255),b
  1378   001994  EFD5  F00B         	goto	l6348
  1379   001998  EF07  F000         	goto	start
  1380   00199C                     __end_of_main:
  1381                           	callstack 0
  1382                           
  1383 ;; *************** function _lcd_8bit_send_string_pos *****************
  1384 ;; Defined at:
  1385 ;;		line 350 in file "ECU_Layer/Chr_LCD/ecu_chr_lcd.c"
  1386 ;; Parameters:    Size  Location     Type
  1387 ;;  lcd             2   41[COMRAM] PTR const struct .
  1388 ;;		 -> lcd(10), 
  1389 ;;  row             1   43[COMRAM] unsigned char 
  1390 ;;  column          1   44[COMRAM] unsigned char 
  1391 ;;  str             2   45[COMRAM] PTR unsigned char 
  1392 ;;		 -> adc_rss_txt_2(6), adc_rss_txt_1(6), STR_6(7), STR_5(7), 
  1393 ;;		 -> STR_4(9), 
  1394 ;; Auto vars:     Size  Location     Type
  1395 ;;  ret             1   47[COMRAM] unsigned char 
  1396 ;; Return value:  Size  Location     Type
  1397 ;;                  1    wreg      unsigned char 
  1398 ;; Registers used:
  1399 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1400 ;; Tracked objects:
  1401 ;;		On entry : 0/0
  1402 ;;		On exit  : 0/0
  1403 ;;		Unchanged: 0/0
  1404 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1405 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1406 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1407 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1408 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1409 ;;Total ram usage:        7 bytes
  1410 ;; Hardware stack levels used: 1
  1411 ;; Hardware stack levels required when called: 8
  1412 ;; This function calls:
  1413 ;;		_lcd_8bit_send_string
  1414 ;;		_lcd_8bit_set_cursor
  1415 ;; This function is called by:
  1416 ;;		_main
  1417 ;; This function uses a non-reentrant model
  1418 ;;
  1419                           
  1420                           	psect	text1
  1421   002F14                     __ptext1:
  1422                           	callstack 0
  1423   002F14                     _lcd_8bit_send_string_pos:
  1424                           	callstack 22
  1425   002F14                     
  1426                           ;ECU_Layer/Chr_LCD/ecu_chr_lcd.c: 352:     if(((void*)0) == lcd){
  1427   002F14  502A               	movf	lcd_8bit_send_string_pos@lcd^0,w,c
  1428   002F16  102B               	iorwf	(lcd_8bit_send_string_pos@lcd+1)^0,w,c
  1429   002F18  A4D8               	btfss	status,2,c
  1430   002F1A  EF91  F017         	goto	u3571
  1431   002F1E  EF93  F017         	goto	u3570
  1432   002F22                     u3571:
  1433   002F22  EF97  F017         	goto	l4646
  1434   002F26                     u3570:
  1435   002F26                     
  1436                           ;ECU_Layer/Chr_LCD/ecu_chr_lcd.c: 353:         ret = (Std_ReturnType)0x00;
  1437   002F26  0E00               	movlw	0
  1438   002F28  6E30               	movwf	lcd_8bit_send_string_pos@ret^0,c
  1439                           
  1440                           ;ECU_Layer/Chr_LCD/ecu_chr_lcd.c: 354:     }
  1441   002F2A  EFAC  F017         	goto	l4650
  1442   002F2E                     l4646:
  1443   002F2E  C02A  F023         	movff	lcd_8bit_send_string_pos@lcd,lcd_8bit_set_cursor@lcd
  1444   002F32  C02B  F024         	movff	lcd_8bit_send_string_pos@lcd+1,lcd_8bit_set_cursor@lcd+1
  1445   002F36  C02C  F025         	movff	lcd_8bit_send_string_pos@row,lcd_8bit_set_cursor@row
  1446   002F3A  C02D  F026         	movff	lcd_8bit_send_string_pos@column,lcd_8bit_set_cursor@coulmn
  1447   002F3E  EC6B  F014         	call	_lcd_8bit_set_cursor	;wreg free
  1448   002F42                     
  1449                           ;ECU_Layer/Chr_LCD/ecu_chr_lcd.c: 357:         ret = lcd_8bit_send_string(lcd, str);
  1450   002F42  C02A  F023         	movff	lcd_8bit_send_string_pos@lcd,lcd_8bit_send_string@lcd
  1451   002F46  C02B  F024         	movff	lcd_8bit_send_string_pos@lcd+1,lcd_8bit_send_string@lcd+1
  1452   002F4A  C02E  F025         	movff	lcd_8bit_send_string_pos@str,lcd_8bit_send_string@str
  1453   002F4E  C02F  F026         	movff	lcd_8bit_send_string_pos@str+1,lcd_8bit_send_string@str+1
  1454   002F52  ECA0  F015         	call	_lcd_8bit_send_string	;wreg free
  1455   002F56  6E30               	movwf	lcd_8bit_send_string_pos@ret^0,c
  1456   002F58                     l4650:
  1457                           
  1458                           ;ECU_Layer/Chr_LCD/ecu_chr_lcd.c: 359:     return ret;
  1459   002F58  5030               	movf	lcd_8bit_send_string_pos@ret^0,w,c
  1460   002F5A  0012               	return		;funcret
  1461   002F5C                     __end_of_lcd_8bit_send_string_pos:
  1462                           	callstack 0
  1463                           
  1464 ;; *************** function _lcd_8bit_set_cursor *****************
  1465 ;; Defined at:
  1466 ;;		line 513 in file "ECU_Layer/Chr_LCD/ecu_chr_lcd.c"
  1467 ;; Parameters:    Size  Location     Type
  1468 ;;  lcd             2   34[COMRAM] PTR const struct .
  1469 ;;		 -> lcd(10), 
  1470 ;;  row             1   36[COMRAM] unsigned char 
  1471 ;;  coulmn          1   37[COMRAM] unsigned char 
  1472 ;; Auto vars:     Size  Location     Type
  1473 ;;  ret             1   40[COMRAM] unsigned char 
  1474 ;; Return value:  Size  Location     Type
  1475 ;;                  1    wreg      unsigned char 
  1476 ;; Registers used:
  1477 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  1478 ;; Tracked objects:
  1479 ;;		On entry : 0/0
  1480 ;;		On exit  : 0/0
  1481 ;;		Unchanged: 0/0
  1482 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1483 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1484 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1485 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1486 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1487 ;;Total ram usage:        7 bytes
  1488 ;; Hardware stack levels used: 1
  1489 ;; Hardware stack levels required when called: 7
  1490 ;; This function calls:
  1491 ;;		_lcd_8bit_send_command
  1492 ;; This function is called by:
  1493 ;;		_lcd_8bit_send_string_pos
  1494 ;;		_lcd_8bit_send_char_data_pos
  1495 ;; This function uses a non-reentrant model
  1496 ;;
  1497                           
  1498                           	psect	text2
  1499   0028D6                     __ptext2:
  1500                           	callstack 0
  1501   0028D6                     _lcd_8bit_set_cursor:
  1502                           	callstack 22
  1503   0028D6                     
  1504                           ;ECU_Layer/Chr_LCD/ecu_chr_lcd.c: 514:     Std_ReturnType ret = (Std_ReturnType)0x01;
  1505   0028D6  0E01               	movlw	1
  1506   0028D8  6E29               	movwf	lcd_8bit_set_cursor@ret^0,c
  1507   0028DA                     
  1508                           ;ECU_Layer/Chr_LCD/ecu_chr_lcd.c: 515:     coulmn--;
  1509   0028DA  0626               	decf	lcd_8bit_set_cursor@coulmn^0,f,c
  1510                           
  1511                           ;ECU_Layer/Chr_LCD/ecu_chr_lcd.c: 516:     switch(row){
  1512   0028DC  EFA0  F014         	goto	l4468
  1513   0028E0                     l4460:
  1514   0028E0  C023  F01A         	movff	lcd_8bit_set_cursor@lcd,lcd_8bit_send_command@lcd
  1515   0028E4  C024  F01B         	movff	lcd_8bit_set_cursor@lcd+1,lcd_8bit_send_command@lcd+1
  1516   0028E8  5026               	movf	lcd_8bit_set_cursor@coulmn^0,w,c
  1517   0028EA  0F80               	addlw	128
  1518   0028EC  6E1C               	movwf	lcd_8bit_send_command@command^0,c
  1519   0028EE  EC58  F015         	call	_lcd_8bit_send_command	;wreg free
  1520   0028F2  6E29               	movwf	lcd_8bit_set_cursor@ret^0,c
  1521   0028F4  EFBD  F014         	goto	l4470
  1522   0028F8                     l4462:
  1523   0028F8  C023  F01A         	movff	lcd_8bit_set_cursor@lcd,lcd_8bit_send_command@lcd
  1524   0028FC  C024  F01B         	movff	lcd_8bit_set_cursor@lcd+1,lcd_8bit_send_command@lcd+1
  1525   002900  5026               	movf	lcd_8bit_set_cursor@coulmn^0,w,c
  1526   002902  0FC0               	addlw	192
  1527   002904  6E1C               	movwf	lcd_8bit_send_command@command^0,c
  1528   002906  EC58  F015         	call	_lcd_8bit_send_command	;wreg free
  1529   00290A  6E29               	movwf	lcd_8bit_set_cursor@ret^0,c
  1530   00290C  EFBD  F014         	goto	l4470
  1531   002910                     l4464:
  1532   002910  C023  F01A         	movff	lcd_8bit_set_cursor@lcd,lcd_8bit_send_command@lcd
  1533   002914  C024  F01B         	movff	lcd_8bit_set_cursor@lcd+1,lcd_8bit_send_command@lcd+1
  1534   002918  5026               	movf	lcd_8bit_set_cursor@coulmn^0,w,c
  1535   00291A  0F94               	addlw	148
  1536   00291C  6E1C               	movwf	lcd_8bit_send_command@command^0,c
  1537   00291E  EC58  F015         	call	_lcd_8bit_send_command	;wreg free
  1538   002922  6E29               	movwf	lcd_8bit_set_cursor@ret^0,c
  1539   002924  EFBD  F014         	goto	l4470
  1540   002928                     l4466:
  1541   002928  C023  F01A         	movff	lcd_8bit_set_cursor@lcd,lcd_8bit_send_command@lcd
  1542   00292C  C024  F01B         	movff	lcd_8bit_set_cursor@lcd+1,lcd_8bit_send_command@lcd+1
  1543   002930  5026               	movf	lcd_8bit_set_cursor@coulmn^0,w,c
  1544   002932  0FD4               	addlw	212
  1545   002934  6E1C               	movwf	lcd_8bit_send_command@command^0,c
  1546   002936  EC58  F015         	call	_lcd_8bit_send_command	;wreg free
  1547   00293A  6E29               	movwf	lcd_8bit_set_cursor@ret^0,c
  1548   00293C  EFBD  F014         	goto	l4470
  1549   002940                     l4468:
  1550   002940  5025               	movf	lcd_8bit_set_cursor@row^0,w,c
  1551   002942  6E27               	movwf	??_lcd_8bit_set_cursor^0,c
  1552   002944  6A28               	clrf	(??_lcd_8bit_set_cursor+1)^0,c
  1553                           
  1554                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1555                           ; Switch size 1, requested type "simple"
  1556                           ; Number of cases is 1, Range of values is 0 to 0
  1557                           ; switch strategies available:
  1558                           ; Name         Instructions Cycles
  1559                           ; simple_byte            4     3 (average)
  1560                           ;	Chosen strategy is simple_byte
  1561   002946  5028               	movf	(??_lcd_8bit_set_cursor+1)^0,w,c
  1562   002948  0A00               	xorlw	0	; case 0
  1563   00294A  B4D8               	btfsc	status,2,c
  1564   00294C  EFAA  F014         	goto	l6520
  1565   002950  EFBD  F014         	goto	l4470
  1566   002954                     l6520:
  1567                           
  1568                           ; Switch size 1, requested type "simple"
  1569                           ; Number of cases is 4, Range of values is 1 to 4
  1570                           ; switch strategies available:
  1571                           ; Name         Instructions Cycles
  1572                           ; simple_byte           13     7 (average)
  1573                           ;	Chosen strategy is simple_byte
  1574   002954  5027               	movf	??_lcd_8bit_set_cursor^0,w,c
  1575   002956  0A01               	xorlw	1	; case 1
  1576   002958  B4D8               	btfsc	status,2,c
  1577   00295A  EF70  F014         	goto	l4460
  1578   00295E  0A03               	xorlw	3	; case 2
  1579   002960  B4D8               	btfsc	status,2,c
  1580   002962  EF7C  F014         	goto	l4462
  1581   002966  0A01               	xorlw	1	; case 3
  1582   002968  B4D8               	btfsc	status,2,c
  1583   00296A  EF88  F014         	goto	l4464
  1584   00296E  0A07               	xorlw	7	; case 4
  1585   002970  B4D8               	btfsc	status,2,c
  1586   002972  EF94  F014         	goto	l4466
  1587   002976  EFBD  F014         	goto	l4470
  1588   00297A                     l4470:
  1589                           
  1590                           ;ECU_Layer/Chr_LCD/ecu_chr_lcd.c: 523:     return ret;
  1591   00297A  5029               	movf	lcd_8bit_set_cursor@ret^0,w,c
  1592   00297C  0012               	return		;funcret
  1593   00297E                     __end_of_lcd_8bit_set_cursor:
  1594                           	callstack 0
  1595                           
  1596 ;; *************** function _lcd_8bit_send_string *****************
  1597 ;; Defined at:
  1598 ;;		line 327 in file "ECU_Layer/Chr_LCD/ecu_chr_lcd.c"
  1599 ;; Parameters:    Size  Location     Type
  1600 ;;  lcd             2   34[COMRAM] PTR const struct .
  1601 ;;		 -> lcd(10), 
  1602 ;;  str             2   36[COMRAM] PTR unsigned char 
  1603 ;;		 -> adc_rss_txt_2(6), adc_rss_txt_1(6), STR_6(7), STR_5(7), 
  1604 ;;		 -> STR_4(9), 
  1605 ;; Auto vars:     Size  Location     Type
  1606 ;;  ret             1   38[COMRAM] unsigned char 
  1607 ;; Return value:  Size  Location     Type
  1608 ;;                  1    wreg      unsigned char 
  1609 ;; Registers used:
  1610 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1611 ;; Tracked objects:
  1612 ;;		On entry : 0/0
  1613 ;;		On exit  : 0/0
  1614 ;;		Unchanged: 0/0
  1615 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1616 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1617 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1618 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1619 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1620 ;;Total ram usage:        5 bytes
  1621 ;; Hardware stack levels used: 1
  1622 ;; Hardware stack levels required when called: 7
  1623 ;; This function calls:
  1624 ;;		_lcd_8bit_send_char_data
  1625 ;; This function is called by:
  1626 ;;		_lcd_8bit_send_string_pos
  1627 ;; This function uses a non-reentrant model
  1628 ;;
  1629                           
  1630                           	psect	text3
  1631   002B40                     __ptext3:
  1632                           	callstack 0
  1633   002B40                     _lcd_8bit_send_string:
  1634                           	callstack 22
  1635   002B40                     
  1636                           ;ECU_Layer/Chr_LCD/ecu_chr_lcd.c: 328:     Std_ReturnType ret = (Std_ReturnType)0x01;
  1637   002B40  0E01               	movlw	1
  1638   002B42  6E27               	movwf	lcd_8bit_send_string@ret^0,c
  1639   002B44                     
  1640                           ;ECU_Layer/Chr_LCD/ecu_chr_lcd.c: 329:     if(((void*)0) == lcd){
  1641   002B44  5023               	movf	lcd_8bit_send_string@lcd^0,w,c
  1642   002B46  1024               	iorwf	(lcd_8bit_send_string@lcd+1)^0,w,c
  1643   002B48  A4D8               	btfss	status,2,c
  1644   002B4A  EFA9  F015         	goto	u3421
  1645   002B4E  EFAB  F015         	goto	u3420
  1646   002B52                     u3421:
  1647   002B52  EFCA  F015         	goto	l4488
  1648   002B56                     u3420:
  1649   002B56                     
  1650                           ;ECU_Layer/Chr_LCD/ecu_chr_lcd.c: 330:         ret = (Std_ReturnType)0x00;
  1651   002B56  0E00               	movlw	0
  1652   002B58  6E27               	movwf	lcd_8bit_send_string@ret^0,c
  1653                           
  1654                           ;ECU_Layer/Chr_LCD/ecu_chr_lcd.c: 331:     }
  1655   002B5A  EFE3  F015         	goto	l4490
  1656   002B5E                     l4484:
  1657                           
  1658                           ;ECU_Layer/Chr_LCD/ecu_chr_lcd.c: 334:             ret = lcd_8bit_send_char_data(lcd, *s
      +                          tr++);
  1659   002B5E  C023  F01A         	movff	lcd_8bit_send_string@lcd,lcd_8bit_send_char_data@lcd
  1660   002B62  C024  F01B         	movff	lcd_8bit_send_string@lcd+1,lcd_8bit_send_char_data@lcd+1
  1661   002B66  C025  FFF6         	movff	lcd_8bit_send_string@str,tblptrl
  1662   002B6A  C026  FFF7         	movff	lcd_8bit_send_string@str+1,tblptrh
  1663   002B6E  0E00               	movlw	low (__smallconst shr (0+16))
  1664   002B70  6EF8               	movwf	tblptru,c
  1665   002B72  0E0F               	movlw	(high __ramtop+-1)
  1666   002B74  64F7               	cpfsgt	tblptrh,c
  1667   002B76  D003               	bra	u3437
  1668   002B78  0008               	tblrd		*
  1669   002B7A  50F5               	movf	tablat,w,c
  1670   002B7C  D005               	bra	u3430
  1671   002B7E                     u3437:
  1672   002B7E  CFF6 FFE9          	movff	tblptrl,fsr0l
  1673   002B82  CFF7 FFEA          	movff	tblptrh,fsr0h
  1674   002B86  50EF               	movf	indf0,w,c
  1675   002B88                     u3430:
  1676   002B88  6E1C               	movwf	lcd_8bit_send_char_data@data^0,c
  1677   002B8A  EC10  F015         	call	_lcd_8bit_send_char_data	;wreg free
  1678   002B8E  6E27               	movwf	lcd_8bit_send_string@ret^0,c
  1679   002B90  4A25               	infsnz	lcd_8bit_send_string@str^0,f,c
  1680   002B92  2A26               	incf	(lcd_8bit_send_string@str+1)^0,f,c
  1681   002B94                     l4488:
  1682                           
  1683                           ;ECU_Layer/Chr_LCD/ecu_chr_lcd.c: 333:         while(*str){
  1684   002B94  C025  FFF6         	movff	lcd_8bit_send_string@str,tblptrl
  1685   002B98  C026  FFF7         	movff	lcd_8bit_send_string@str+1,tblptrh
  1686   002B9C  0E00               	movlw	low (__smallconst shr (0+16))
  1687   002B9E  6EF8               	movwf	tblptru,c
  1688   002BA0  0E0F               	movlw	(high __ramtop+-1)
  1689   002BA2  64F7               	cpfsgt	tblptrh,c
  1690   002BA4  D003               	bra	u3447
  1691   002BA6  0008               	tblrd		*
  1692   002BA8  50F5               	movf	tablat,w,c
  1693   002BAA  D005               	bra	u3440
  1694   002BAC                     u3447:
  1695   002BAC  CFF6 FFE9          	movff	tblptrl,fsr0l
  1696   002BB0  CFF7 FFEA          	movff	tblptrh,fsr0h
  1697   002BB4  50EF               	movf	indf0,w,c
  1698   002BB6                     u3440:
  1699   002BB6  0900               	iorlw	0
  1700   002BB8  A4D8               	btfss	status,2,c
  1701   002BBA  EFE1  F015         	goto	u3451
  1702   002BBE  EFE3  F015         	goto	u3450
  1703   002BC2                     u3451:
  1704   002BC2  EFAF  F015         	goto	l4484
  1705   002BC6                     u3450:
  1706   002BC6                     l4490:
  1707                           
  1708                           ;ECU_Layer/Chr_LCD/ecu_chr_lcd.c: 337:     return ret;
  1709   002BC6  5027               	movf	lcd_8bit_send_string@ret^0,w,c
  1710   002BC8  0012               	return		;funcret
  1711   002BCA                     __end_of_lcd_8bit_send_string:
  1712                           	callstack 0
  1713                           
  1714 ;; *************** function _lcd_8bit_send_char_data *****************
  1715 ;; Defined at:
  1716 ;;		line 277 in file "ECU_Layer/Chr_LCD/ecu_chr_lcd.c"
  1717 ;; Parameters:    Size  Location     Type
  1718 ;;  lcd             2   25[COMRAM] PTR const struct .
  1719 ;;		 -> lcd(10), 
  1720 ;;  data            1   27[COMRAM] unsigned char 
  1721 ;; Auto vars:     Size  Location     Type
  1722 ;;  l_pin_counte    1   33[COMRAM] unsigned char 
  1723 ;;  ret             1   32[COMRAM] unsigned char 
  1724 ;; Return value:  Size  Location     Type
  1725 ;;                  1    wreg      unsigned char 
  1726 ;; Registers used:
  1727 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  1728 ;; Tracked objects:
  1729 ;;		On entry : 0/0
  1730 ;;		On exit  : 0/0
  1731 ;;		Unchanged: 0/0
  1732 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1733 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1734 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1735 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1736 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1737 ;;Total ram usage:        9 bytes
  1738 ;; Hardware stack levels used: 1
  1739 ;; Hardware stack levels required when called: 6
  1740 ;; This function calls:
  1741 ;;		_gpio_pin_write_logic
  1742 ;;		_lcd_8bit_send_enable_signal
  1743 ;; This function is called by:
  1744 ;;		_lcd_8bit_send_string
  1745 ;;		_lcd_8bit_send_char_data_pos
  1746 ;;		_lcd_8bit_send_custom_char
  1747 ;; This function uses a non-reentrant model
  1748 ;;
  1749                           
  1750                           	psect	text4
  1751   002A20                     __ptext4:
  1752                           	callstack 0
  1753   002A20                     _lcd_8bit_send_char_data:
  1754                           	callstack 22
  1755   002A20                     
  1756                           ;ECU_Layer/Chr_LCD/ecu_chr_lcd.c: 279:     uint8 l_pin_counter = 0;
  1757   002A20  0E00               	movlw	0
  1758   002A22  6E22               	movwf	lcd_8bit_send_char_data@l_pin_counter^0,c
  1759   002A24                     
  1760                           ;ECU_Layer/Chr_LCD/ecu_chr_lcd.c: 280:     if(((void*)0) == lcd){
  1761   002A24  501A               	movf	lcd_8bit_send_char_data@lcd^0,w,c
  1762   002A26  101B               	iorwf	(lcd_8bit_send_char_data@lcd+1)^0,w,c
  1763   002A28  A4D8               	btfss	status,2,c
  1764   002A2A  EF19  F015         	goto	u3251
  1765   002A2E  EF1B  F015         	goto	u3250
  1766   002A32                     u3251:
  1767   002A32  EF1F  F015         	goto	l4292
  1768   002A36                     u3250:
  1769   002A36                     
  1770                           ;ECU_Layer/Chr_LCD/ecu_chr_lcd.c: 281:         ret = (Std_ReturnType)0x00;
  1771   002A36  0E00               	movlw	0
  1772   002A38  6E21               	movwf	lcd_8bit_send_char_data@ret^0,c
  1773                           
  1774                           ;ECU_Layer/Chr_LCD/ecu_chr_lcd.c: 282:     }
  1775   002A3A  EF56  F015         	goto	l4308
  1776   002A3E                     l4292:
  1777   002A3E  C01A  F00D         	movff	lcd_8bit_send_char_data@lcd,gpio_pin_write_logic@_pin_config
  1778   002A42  C01B  F00E         	movff	lcd_8bit_send_char_data@lcd+1,gpio_pin_write_logic@_pin_config+1
  1779   002A46  0E01               	movlw	1
  1780   002A48  6E0F               	movwf	gpio_pin_write_logic@logic^0,c
  1781   002A4A  ECFC  F010         	call	_gpio_pin_write_logic	;wreg free
  1782   002A4E                     
  1783                           ;ECU_Layer/Chr_LCD/ecu_chr_lcd.c: 288:         for(l_pin_counter=0; l_pin_counter<8; ++l
      +                          _pin_counter){
  1784   002A4E  0E00               	movlw	0
  1785   002A50  6E22               	movwf	lcd_8bit_send_char_data@l_pin_counter^0,c
  1786   002A52                     l4300:
  1787   002A52  5022               	movf	lcd_8bit_send_char_data@l_pin_counter^0,w,c
  1788   002A54  241A               	addwf	lcd_8bit_send_char_data@lcd^0,w,c
  1789   002A56  6E1D               	movwf	??_lcd_8bit_send_char_data^0,c
  1790   002A58  0E00               	movlw	0
  1791   002A5A  201B               	addwfc	(lcd_8bit_send_char_data@lcd+1)^0,w,c
  1792   002A5C  6E1E               	movwf	(??_lcd_8bit_send_char_data+1)^0,c
  1793   002A5E  0E02               	movlw	2
  1794   002A60  241D               	addwf	??_lcd_8bit_send_char_data^0,w,c
  1795   002A62  6E0D               	movwf	gpio_pin_write_logic@_pin_config^0,c
  1796   002A64  0E00               	movlw	0
  1797   002A66  201E               	addwfc	(??_lcd_8bit_send_char_data+1)^0,w,c
  1798   002A68  6E0E               	movwf	(gpio_pin_write_logic@_pin_config+1)^0,c
  1799   002A6A  C022  F01F         	movff	lcd_8bit_send_char_data@l_pin_counter,??_lcd_8bit_send_char_data+2
  1800   002A6E  C01C  F020         	movff	lcd_8bit_send_char_data@data,??_lcd_8bit_send_char_data+3
  1801   002A72  2A1F               	incf	(??_lcd_8bit_send_char_data+2)^0,f,c
  1802   002A74  EF3E  F015         	goto	u3264
  1803   002A78                     u3265:
  1804   002A78  90D8               	bcf	status,0,c
  1805   002A7A  3220               	rrcf	(??_lcd_8bit_send_char_data+3)^0,f,c
  1806   002A7C                     u3264:
  1807   002A7C  2E1F               	decfsz	(??_lcd_8bit_send_char_data+2)^0,f,c
  1808   002A7E  EF3C  F015         	goto	u3265
  1809   002A82  5020               	movf	(??_lcd_8bit_send_char_data+3)^0,w,c
  1810   002A84  0B01               	andlw	1
  1811   002A86  6E0F               	movwf	gpio_pin_write_logic@logic^0,c
  1812   002A88  ECFC  F010         	call	_gpio_pin_write_logic	;wreg free
  1813   002A8C                     
  1814                           ;ECU_Layer/Chr_LCD/ecu_chr_lcd.c: 290:         }
  1815   002A8C  2A22               	incf	lcd_8bit_send_char_data@l_pin_counter^0,f,c
  1816   002A8E  0E07               	movlw	7
  1817   002A90  6422               	cpfsgt	lcd_8bit_send_char_data@l_pin_counter^0,c
  1818   002A92  EF4D  F015         	goto	u3271
  1819   002A96  EF4F  F015         	goto	u3270
  1820   002A9A                     u3271:
  1821   002A9A  EF29  F015         	goto	l4300
  1822   002A9E                     u3270:
  1823   002A9E                     
  1824                           ;ECU_Layer/Chr_LCD/ecu_chr_lcd.c: 292:         ret = lcd_8bit_send_enable_signal(lcd);
  1825   002A9E  C01A  F017         	movff	lcd_8bit_send_char_data@lcd,lcd_8bit_send_enable_signal@lcd
  1826   002AA2  C01B  F018         	movff	lcd_8bit_send_char_data@lcd+1,lcd_8bit_send_enable_signal@lcd+1
  1827   002AA6  EC90  F018         	call	_lcd_8bit_send_enable_signal	;wreg free
  1828   002AAA  6E21               	movwf	lcd_8bit_send_char_data@ret^0,c
  1829   002AAC                     l4308:
  1830                           
  1831                           ;ECU_Layer/Chr_LCD/ecu_chr_lcd.c: 294:     return ret;
  1832   002AAC  5021               	movf	lcd_8bit_send_char_data@ret^0,w,c
  1833   002AAE  0012               	return		;funcret
  1834   002AB0                     __end_of_lcd_8bit_send_char_data:
  1835                           	callstack 0
  1836                           
  1837 ;; *************** function _dc_motor_stop *****************
  1838 ;; Defined at:
  1839 ;;		line 74 in file "ECU_Layer/DC_Motor/ecu_dc_motor.c"
  1840 ;; Parameters:    Size  Location     Type
  1841 ;;  _dc_motor       2   22[COMRAM] PTR const struct .
  1842 ;;		 -> dc_motor_2(2), dc_motor_1(2), 
  1843 ;; Auto vars:     Size  Location     Type
  1844 ;;  ret             1   24[COMRAM] unsigned char 
  1845 ;; Return value:  Size  Location     Type
  1846 ;;                  1    wreg      unsigned char 
  1847 ;; Registers used:
  1848 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  1849 ;; Tracked objects:
  1850 ;;		On entry : 0/0
  1851 ;;		On exit  : 0/0
  1852 ;;		Unchanged: 0/0
  1853 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1854 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1855 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1856 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1857 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1858 ;;Total ram usage:        3 bytes
  1859 ;; Hardware stack levels used: 1
  1860 ;; Hardware stack levels required when called: 5
  1861 ;; This function calls:
  1862 ;;		_gpio_pin_write_logic
  1863 ;; This function is called by:
  1864 ;;		_main
  1865 ;; This function uses a non-reentrant model
  1866 ;;
  1867                           
  1868                           	psect	text5
  1869   002F5C                     __ptext5:
  1870                           	callstack 0
  1871   002F5C                     _dc_motor_stop:
  1872                           	callstack 25
  1873   002F5C                     
  1874                           ;ECU_Layer/DC_Motor/ecu_dc_motor.c: 75:     Std_ReturnType ret = (Std_ReturnType)0x01;
  1875   002F5C  0E01               	movlw	1
  1876   002F5E  6E19               	movwf	dc_motor_stop@ret^0,c
  1877   002F60                     
  1878                           ;ECU_Layer/DC_Motor/ecu_dc_motor.c: 76:     if(((void*)0) == _dc_motor){
  1879   002F60  5017               	movf	dc_motor_stop@_dc_motor^0,w,c
  1880   002F62  1018               	iorwf	(dc_motor_stop@_dc_motor+1)^0,w,c
  1881   002F64  A4D8               	btfss	status,2,c
  1882   002F66  EFB7  F017         	goto	u3621
  1883   002F6A  EFB9  F017         	goto	u3620
  1884   002F6E                     u3621:
  1885   002F6E  EFBD  F017         	goto	l4698
  1886   002F72                     u3620:
  1887   002F72                     
  1888                           ;ECU_Layer/DC_Motor/ecu_dc_motor.c: 77:         ret = (Std_ReturnType)0x00;
  1889   002F72  0E00               	movlw	0
  1890   002F74  6E19               	movwf	dc_motor_stop@ret^0,c
  1891                           
  1892                           ;ECU_Layer/DC_Motor/ecu_dc_motor.c: 78:     }
  1893   002F76  EFCF  F017         	goto	l4700
  1894   002F7A                     l4698:
  1895                           
  1896                           ;ECU_Layer/DC_Motor/ecu_dc_motor.c: 80:         gpio_pin_write_logic(&(_dc_motor->dc_mot
      +                          or_pin[0x00U]), GPIO_LOW);
  1897   002F7A  C017  F00D         	movff	dc_motor_stop@_dc_motor,gpio_pin_write_logic@_pin_config
  1898   002F7E  C018  F00E         	movff	dc_motor_stop@_dc_motor+1,gpio_pin_write_logic@_pin_config+1
  1899   002F82  0E00               	movlw	0
  1900   002F84  6E0F               	movwf	gpio_pin_write_logic@logic^0,c
  1901   002F86  ECFC  F010         	call	_gpio_pin_write_logic	;wreg free
  1902                           
  1903                           ;ECU_Layer/DC_Motor/ecu_dc_motor.c: 81:         gpio_pin_write_logic(&(_dc_motor->dc_mot
      +                          or_pin[0x01U]), GPIO_LOW);
  1904   002F8A  0E01               	movlw	1
  1905   002F8C  2417               	addwf	dc_motor_stop@_dc_motor^0,w,c
  1906   002F8E  6E0D               	movwf	gpio_pin_write_logic@_pin_config^0,c
  1907   002F90  0E00               	movlw	0
  1908   002F92  2018               	addwfc	(dc_motor_stop@_dc_motor+1)^0,w,c
  1909   002F94  6E0E               	movwf	(gpio_pin_write_logic@_pin_config+1)^0,c
  1910   002F96  0E00               	movlw	0
  1911   002F98  6E0F               	movwf	gpio_pin_write_logic@logic^0,c
  1912   002F9A  ECFC  F010         	call	_gpio_pin_write_logic	;wreg free
  1913   002F9E                     l4700:
  1914                           
  1915                           ;ECU_Layer/DC_Motor/ecu_dc_motor.c: 83:     return ret;
  1916   002F9E  5019               	movf	dc_motor_stop@ret^0,w,c
  1917   002FA0  0012               	return		;funcret
  1918   002FA2                     __end_of_dc_motor_stop:
  1919                           	callstack 0
  1920                           
  1921 ;; *************** function _dc_motor_move_right *****************
  1922 ;; Defined at:
  1923 ;;		line 36 in file "ECU_Layer/DC_Motor/ecu_dc_motor.c"
  1924 ;; Parameters:    Size  Location     Type
  1925 ;;  _dc_motor       2   22[COMRAM] PTR const struct .
  1926 ;;		 -> dc_motor_2(2), dc_motor_1(2), 
  1927 ;; Auto vars:     Size  Location     Type
  1928 ;;  ret             1   24[COMRAM] unsigned char 
  1929 ;; Return value:  Size  Location     Type
  1930 ;;                  1    wreg      unsigned char 
  1931 ;; Registers used:
  1932 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  1933 ;; Tracked objects:
  1934 ;;		On entry : 0/0
  1935 ;;		On exit  : 0/0
  1936 ;;		Unchanged: 0/0
  1937 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1938 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1939 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1940 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1941 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1942 ;;Total ram usage:        3 bytes
  1943 ;; Hardware stack levels used: 1
  1944 ;; Hardware stack levels required when called: 5
  1945 ;; This function calls:
  1946 ;;		_gpio_pin_write_logic
  1947 ;; This function is called by:
  1948 ;;		_main
  1949 ;; This function uses a non-reentrant model
  1950 ;;
  1951                           
  1952                           	psect	text6
  1953   002FA2                     __ptext6:
  1954                           	callstack 0
  1955   002FA2                     _dc_motor_move_right:
  1956                           	callstack 25
  1957   002FA2                     
  1958                           ;ECU_Layer/DC_Motor/ecu_dc_motor.c: 37:     Std_ReturnType ret = (Std_ReturnType)0x01;
  1959   002FA2  0E01               	movlw	1
  1960   002FA4  6E19               	movwf	dc_motor_move_right@ret^0,c
  1961   002FA6                     
  1962                           ;ECU_Layer/DC_Motor/ecu_dc_motor.c: 38:     if(((void*)0) == _dc_motor){
  1963   002FA6  5017               	movf	dc_motor_move_right@_dc_motor^0,w,c
  1964   002FA8  1018               	iorwf	(dc_motor_move_right@_dc_motor+1)^0,w,c
  1965   002FAA  A4D8               	btfss	status,2,c
  1966   002FAC  EFDA  F017         	goto	u3611
  1967   002FB0  EFDC  F017         	goto	u3610
  1968   002FB4                     u3611:
  1969   002FB4  EFE0  F017         	goto	l4686
  1970   002FB8                     u3610:
  1971   002FB8                     
  1972                           ;ECU_Layer/DC_Motor/ecu_dc_motor.c: 39:         ret = (Std_ReturnType)0x00;
  1973   002FB8  0E00               	movlw	0
  1974   002FBA  6E19               	movwf	dc_motor_move_right@ret^0,c
  1975                           
  1976                           ;ECU_Layer/DC_Motor/ecu_dc_motor.c: 40:     }
  1977   002FBC  EFF2  F017         	goto	l4688
  1978   002FC0                     l4686:
  1979                           
  1980                           ;ECU_Layer/DC_Motor/ecu_dc_motor.c: 42:         gpio_pin_write_logic(&(_dc_motor->dc_mot
      +                          or_pin[0x00U]), GPIO_HIGH);
  1981   002FC0  C017  F00D         	movff	dc_motor_move_right@_dc_motor,gpio_pin_write_logic@_pin_config
  1982   002FC4  C018  F00E         	movff	dc_motor_move_right@_dc_motor+1,gpio_pin_write_logic@_pin_config+1
  1983   002FC8  0E01               	movlw	1
  1984   002FCA  6E0F               	movwf	gpio_pin_write_logic@logic^0,c
  1985   002FCC  ECFC  F010         	call	_gpio_pin_write_logic	;wreg free
  1986                           
  1987                           ;ECU_Layer/DC_Motor/ecu_dc_motor.c: 43:         gpio_pin_write_logic(&(_dc_motor->dc_mot
      +                          or_pin[0x01U]), GPIO_LOW);
  1988   002FD0  0E01               	movlw	1
  1989   002FD2  2417               	addwf	dc_motor_move_right@_dc_motor^0,w,c
  1990   002FD4  6E0D               	movwf	gpio_pin_write_logic@_pin_config^0,c
  1991   002FD6  0E00               	movlw	0
  1992   002FD8  2018               	addwfc	(dc_motor_move_right@_dc_motor+1)^0,w,c
  1993   002FDA  6E0E               	movwf	(gpio_pin_write_logic@_pin_config+1)^0,c
  1994   002FDC  0E00               	movlw	0
  1995   002FDE  6E0F               	movwf	gpio_pin_write_logic@logic^0,c
  1996   002FE0  ECFC  F010         	call	_gpio_pin_write_logic	;wreg free
  1997   002FE4                     l4688:
  1998                           
  1999                           ;ECU_Layer/DC_Motor/ecu_dc_motor.c: 45:     return ret;
  2000   002FE4  5019               	movf	dc_motor_move_right@ret^0,w,c
  2001   002FE6  0012               	return		;funcret
  2002   002FE8                     __end_of_dc_motor_move_right:
  2003                           	callstack 0
  2004                           
  2005 ;; *************** function _convert_uint16_to_string *****************
  2006 ;; Defined at:
  2007 ;;		line 418 in file "ECU_Layer/Chr_LCD/ecu_chr_lcd.c"
  2008 ;; Parameters:    Size  Location     Type
  2009 ;;  value           2    0[BANK0 ] unsigned short 
  2010 ;;  str             2    2[BANK0 ] PTR unsigned char 
  2011 ;;		 -> adc_rss_txt_2(6), adc_rss_txt_1(6), 
  2012 ;; Auto vars:     Size  Location     Type
  2013 ;;  Temp_String     6    4[BANK0 ] unsigned char [6]
  2014 ;;  DataCounter     1   11[BANK0 ] unsigned char 
  2015 ;;  ret             1   10[BANK0 ] unsigned char 
  2016 ;; Return value:  Size  Location     Type
  2017 ;;                  1    wreg      unsigned char 
  2018 ;; Registers used:
  2019 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  2020 ;; Tracked objects:
  2021 ;;		On entry : 0/0
  2022 ;;		On exit  : 0/0
  2023 ;;		Unchanged: 0/0
  2024 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2025 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2026 ;;      Locals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2027 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2028 ;;      Totals:         0      12       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2029 ;;Total ram usage:       12 bytes
  2030 ;; Hardware stack levels used: 1
  2031 ;; Hardware stack levels required when called: 12
  2032 ;; This function calls:
  2033 ;;		_memset
  2034 ;;		_sprintf
  2035 ;; This function is called by:
  2036 ;;		_main
  2037 ;; This function uses a non-reentrant model
  2038 ;;
  2039                           
  2040                           	psect	text7
  2041   00276A                     __ptext7:
  2042                           	callstack 0
  2043   00276A                     _convert_uint16_to_string:
  2044                           	callstack 18
  2045   00276A                     
  2046                           ;ECU_Layer/Chr_LCD/ecu_chr_lcd.c: 419:     Std_ReturnType ret = (Std_ReturnType)0x01;
  2047   00276A  0E01               	movlw	1
  2048   00276C  0100               	movlb	0	; () banked
  2049   00276E  6FF9               	movwf	convert_uint16_to_string@ret& (0+255),b
  2050   002770                     
  2051                           ; BSR set to: 0
  2052                           ;ECU_Layer/Chr_LCD/ecu_chr_lcd.c: 420:     uint8 Temp_String[6] = {0};
  2053   002770  EE20  F0F3         	lfsr	2,convert_uint16_to_string@Temp_String
  2054   002774  0E05               	movlw	5
  2055   002776                     u5681:
  2056   002776  6ADE               	clrf	postinc2,c
  2057   002778  06E8               	decf	wreg,f,c
  2058   00277A  E2FD               	bc	u5681
  2059   00277C                     
  2060                           ; BSR set to: 0
  2061                           ;ECU_Layer/Chr_LCD/ecu_chr_lcd.c: 421:     uint8 DataCounter = 0;
  2062   00277C  0E00               	movlw	0
  2063   00277E  6FFA               	movwf	convert_uint16_to_string@DataCounter& (0+255),b
  2064   002780                     
  2065                           ; BSR set to: 0
  2066                           ;ECU_Layer/Chr_LCD/ecu_chr_lcd.c: 422:     if(((void*)0) == str){
  2067   002780  51F1               	movf	convert_uint16_to_string@str& (0+255),w,b
  2068   002782  11F2               	iorwf	(convert_uint16_to_string@str+1)& (0+255),w,b
  2069   002784  A4D8               	btfss	status,2,c
  2070   002786  EFC7  F013         	goto	u5691
  2071   00278A  EFC9  F013         	goto	u5690
  2072   00278E                     u5691:
  2073   00278E  EFCD  F013         	goto	l6296
  2074   002792                     u5690:
  2075   002792                     
  2076                           ; BSR set to: 0
  2077                           ;ECU_Layer/Chr_LCD/ecu_chr_lcd.c: 423:         ret = (Std_ReturnType)0x00;
  2078   002792  0E00               	movlw	0
  2079   002794  6FF9               	movwf	convert_uint16_to_string@ret& (0+255),b
  2080                           
  2081                           ;ECU_Layer/Chr_LCD/ecu_chr_lcd.c: 424:     }
  2082   002796  EF11  F014         	goto	l6308
  2083   00279A                     l6296:
  2084                           
  2085                           ; BSR set to: 0
  2086                           ;ECU_Layer/Chr_LCD/ecu_chr_lcd.c: 426:         memset(str, ' ', 5);
  2087   00279A  C0F1  F00D         	movff	convert_uint16_to_string@str,memset@dest
  2088   00279E  C0F2  F00E         	movff	convert_uint16_to_string@str+1,memset@dest+1
  2089   0027A2  0E00               	movlw	0
  2090   0027A4  6E10               	movwf	(memset@c+1)^0,c
  2091   0027A6  0E20               	movlw	32
  2092   0027A8  6E0F               	movwf	memset@c^0,c
  2093   0027AA  0E00               	movlw	0
  2094   0027AC  6E12               	movwf	(memset@n+1)^0,c
  2095   0027AE  0E05               	movlw	5
  2096   0027B0  6E11               	movwf	memset@n^0,c
  2097   0027B2  EC73  F00E         	call	_memset	;wreg free
  2098   0027B6                     
  2099                           ;ECU_Layer/Chr_LCD/ecu_chr_lcd.c: 427:         str[5] = '\0';
  2100   0027B6  0100               	movlb	0	; () banked
  2101   0027B8  EE20 F005          	lfsr	2,5
  2102   0027BC  51F1               	movf	convert_uint16_to_string@str& (0+255),w,b
  2103   0027BE  26D9               	addwf	fsr2l,f,c
  2104   0027C0  51F2               	movf	(convert_uint16_to_string@str+1)& (0+255),w,b
  2105   0027C2  22DA               	addwfc	fsr2h,f,c
  2106   0027C4  6ADF               	clrf	indf2,c
  2107   0027C6                     
  2108                           ; BSR set to: 0
  2109                           ;ECU_Layer/Chr_LCD/ecu_chr_lcd.c: 428:         sprintf((char *)Temp_String, "%i", value)
      +                          ;
  2110   0027C6  0EF3               	movlw	low convert_uint16_to_string@Temp_String
  2111   0027C8  6E4B               	movwf	sprintf@s^0,c
  2112   0027CA  0E00               	movlw	high convert_uint16_to_string@Temp_String
  2113   0027CC  6E4C               	movwf	(sprintf@s+1)^0,c
  2114   0027CE  0E28               	movlw	low STR_1
  2115   0027D0  6E4D               	movwf	sprintf@fmt^0,c
  2116   0027D2  0E10               	movlw	high STR_1
  2117   0027D4  6E4E               	movwf	(sprintf@fmt+1)^0,c
  2118   0027D6  C0EF  F04F         	movff	convert_uint16_to_string@value,?_sprintf+4
  2119   0027DA  C0F0  F050         	movff	convert_uint16_to_string@value+1,?_sprintf+5
  2120   0027DE  EC64  F017         	call	_sprintf	;wreg free
  2121                           
  2122                           ;ECU_Layer/Chr_LCD/ecu_chr_lcd.c: 429:         while(Temp_String[DataCounter] != '\0'){
  2123   0027E2  EF02  F014         	goto	l6306
  2124   0027E6                     l6302:
  2125                           
  2126                           ; BSR set to: 0
  2127                           ;ECU_Layer/Chr_LCD/ecu_chr_lcd.c: 430:             str[DataCounter] = Temp_String[DataCo
      +                          unter];
  2128   0027E6  0EF3               	movlw	low convert_uint16_to_string@Temp_String
  2129   0027E8  25FA               	addwf	convert_uint16_to_string@DataCounter& (0+255),w,b
  2130   0027EA  6ED9               	movwf	fsr2l,c
  2131   0027EC  6ADA               	clrf	fsr2h,c
  2132   0027EE  0E00               	movlw	high convert_uint16_to_string@Temp_String
  2133   0027F0  22DA               	addwfc	fsr2h,f,c
  2134   0027F2  51FA               	movf	convert_uint16_to_string@DataCounter& (0+255),w,b
  2135   0027F4  25F1               	addwf	convert_uint16_to_string@str& (0+255),w,b
  2136   0027F6  6EE1               	movwf	fsr1l,c
  2137   0027F8  0E00               	movlw	0
  2138   0027FA  21F2               	addwfc	(convert_uint16_to_string@str+1)& (0+255),w,b
  2139   0027FC  6EE2               	movwf	fsr1h,c
  2140   0027FE  CFDF FFE7          	movff	indf2,indf1
  2141   002802                     
  2142                           ; BSR set to: 0
  2143                           ;ECU_Layer/Chr_LCD/ecu_chr_lcd.c: 431:             DataCounter++;
  2144   002802  2BFA               	incf	convert_uint16_to_string@DataCounter& (0+255),f,b
  2145   002804                     l6306:
  2146                           
  2147                           ;ECU_Layer/Chr_LCD/ecu_chr_lcd.c: 429:         while(Temp_String[DataCounter] != '\0'){
  2148   002804  0EF3               	movlw	low convert_uint16_to_string@Temp_String
  2149   002806  0100               	movlb	0	; () banked
  2150   002808  25FA               	addwf	convert_uint16_to_string@DataCounter& (0+255),w,b
  2151   00280A  6ED9               	movwf	fsr2l,c
  2152   00280C  6ADA               	clrf	fsr2h,c
  2153   00280E  0E00               	movlw	high convert_uint16_to_string@Temp_String
  2154   002810  22DA               	addwfc	fsr2h,f,c
  2155   002812  50DF               	movf	indf2,w,c
  2156   002814  A4D8               	btfss	status,2,c
  2157   002816  EF0F  F014         	goto	u5701
  2158   00281A  EF11  F014         	goto	u5700
  2159   00281E                     u5701:
  2160   00281E  EFF3  F013         	goto	l6302
  2161   002822                     u5700:
  2162   002822                     l6308:
  2163                           
  2164                           ; BSR set to: 0
  2165                           ;ECU_Layer/Chr_LCD/ecu_chr_lcd.c: 434:     return ret;
  2166   002822  51F9               	movf	convert_uint16_to_string@ret& (0+255),w,b
  2167   002824                     
  2168                           ; BSR set to: 0
  2169   002824  0012               	return		;funcret
  2170   002826                     __end_of_convert_uint16_to_string:
  2171                           	callstack 0
  2172                           
  2173 ;; *************** function _sprintf *****************
  2174 ;; Defined at:
  2175 ;;		line 9 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\nf_sprintf.c"
  2176 ;; Parameters:    Size  Location     Type
  2177 ;;  s               2   74[COMRAM] PTR unsigned char 
  2178 ;;		 -> convert_uint16_to_string@Temp_String(6), 
  2179 ;;  fmt             2   76[COMRAM] PTR const unsigned char 
  2180 ;;		 -> STR_3(3), STR_2(3), STR_1(3), 
  2181 ;; Auto vars:     Size  Location     Type
  2182 ;;  f              12   84[COMRAM] struct _IO_FILE
  2183 ;;  ap              2   82[COMRAM] PTR void [1]
  2184 ;;		 -> ?_sprintf(2), 
  2185 ;;  ret             2    0        int 
  2186 ;; Return value:  Size  Location     Type
  2187 ;;                  2   74[COMRAM] int 
  2188 ;; Registers used:
  2189 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  2190 ;; Tracked objects:
  2191 ;;		On entry : 0/0
  2192 ;;		On exit  : 0/0
  2193 ;;		Unchanged: 0/0
  2194 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2195 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2196 ;;      Locals:        14       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2197 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2198 ;;      Totals:        22       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2199 ;;Total ram usage:       22 bytes
  2200 ;; Hardware stack levels used: 1
  2201 ;; Hardware stack levels required when called: 11
  2202 ;; This function calls:
  2203 ;;		_vfprintf
  2204 ;; This function is called by:
  2205 ;;		_convert_uint16_to_string
  2206 ;;		_convert_uint8_to_string
  2207 ;;		_convert_uint32_to_string
  2208 ;; This function uses a non-reentrant model
  2209 ;;
  2210                           
  2211                           	psect	text8
  2212   002EC8                     __ptext8:
  2213                           	callstack 0
  2214   002EC8                     _sprintf:
  2215                           	callstack 18
  2216   002EC8  0E4F               	movlw	low (?_sprintf+4)
  2217   002ECA  6E53               	movwf	sprintf@ap^0,c
  2218   002ECC  0E00               	movlw	high (?_sprintf+4)
  2219   002ECE  6E54               	movwf	(sprintf@ap+1)^0,c
  2220   002ED0  C04B  F055         	movff	sprintf@s,sprintf@f
  2221   002ED4  C04C  F056         	movff	sprintf@s+1,sprintf@f+1
  2222   002ED8  0E00               	movlw	0
  2223   002EDA  6E59               	movwf	(sprintf@f+4)^0,c
  2224   002EDC  0E00               	movlw	0
  2225   002EDE  6E58               	movwf	(sprintf@f+3)^0,c
  2226   002EE0  0E00               	movlw	0
  2227   002EE2  6E60               	movwf	(sprintf@f+11)^0,c
  2228   002EE4  0E00               	movlw	0
  2229   002EE6  6E5F               	movwf	(sprintf@f+10)^0,c
  2230   002EE8  0E55               	movlw	low sprintf@f
  2231   002EEA  6E43               	movwf	vfprintf@fp^0,c
  2232   002EEC  0E00               	movlw	high sprintf@f
  2233   002EEE  6E44               	movwf	(vfprintf@fp+1)^0,c
  2234   002EF0  C04D  F045         	movff	sprintf@fmt,vfprintf@fmt
  2235   002EF4  C04E  F046         	movff	sprintf@fmt+1,vfprintf@fmt+1
  2236   002EF8  0E53               	movlw	low sprintf@ap
  2237   002EFA  6E47               	movwf	vfprintf@ap^0,c
  2238   002EFC  0E00               	movlw	high sprintf@ap
  2239   002EFE  6E48               	movwf	(vfprintf@ap+1)^0,c
  2240   002F00  EC3C  F017         	call	_vfprintf	;wreg free
  2241   002F04  5058               	movf	(sprintf@f+3)^0,w,c
  2242   002F06  244B               	addwf	sprintf@s^0,w,c
  2243   002F08  6ED9               	movwf	fsr2l,c
  2244   002F0A  5059               	movf	(sprintf@f+4)^0,w,c
  2245   002F0C  204C               	addwfc	(sprintf@s+1)^0,w,c
  2246   002F0E  6EDA               	movwf	fsr2h,c
  2247   002F10  6ADF               	clrf	indf2,c
  2248   002F12  0012               	return		;funcret
  2249   002F14                     __end_of_sprintf:
  2250                           	callstack 0
  2251                           
  2252 ;; *************** function _vfprintf *****************
  2253 ;; Defined at:
  2254 ;;		line 1546 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c"
  2255 ;; Parameters:    Size  Location     Type
  2256 ;;  fp              2   66[COMRAM] PTR struct _IO_FILE
  2257 ;;		 -> sprintf@f(12), 
  2258 ;;  fmt             2   68[COMRAM] PTR const unsigned char 
  2259 ;;		 -> STR_3(3), STR_2(3), STR_1(3), 
  2260 ;;  ap              2   70[COMRAM] PTR PTR void 
  2261 ;;		 -> sprintf@ap(2), 
  2262 ;; Auto vars:     Size  Location     Type
  2263 ;;  cfmt            2   72[COMRAM] PTR unsigned char 
  2264 ;;		 -> STR_3(3), STR_2(3), STR_1(3), 
  2265 ;; Return value:  Size  Location     Type
  2266 ;;                  2   66[COMRAM] int 
  2267 ;; Registers used:
  2268 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  2269 ;; Tracked objects:
  2270 ;;		On entry : 0/0
  2271 ;;		On exit  : 0/0
  2272 ;;		Unchanged: 0/0
  2273 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2274 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2275 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2276 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2277 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2278 ;;Total ram usage:        8 bytes
  2279 ;; Hardware stack levels used: 1
  2280 ;; Hardware stack levels required when called: 10
  2281 ;; This function calls:
  2282 ;;		_vfpfcnvrt
  2283 ;; This function is called by:
  2284 ;;		_sprintf
  2285 ;; This function uses a non-reentrant model
  2286 ;;
  2287                           
  2288                           	psect	text9
  2289   002E78                     __ptext9:
  2290                           	callstack 0
  2291   002E78                     _vfprintf:
  2292                           	callstack 18
  2293   002E78                     
  2294                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 1546: int vfprint
      +                          f(FILE *fp, const char *fmt, va_list ap);C:\Program Files\Microchip\xc8\v2.41\pic\source
      +                          s\c99\common\doprnt.c: 1547: {;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\comm
      +                          on\doprnt.c: 1549:     char *cfmt;;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\
      +                          common\doprnt.c: 1551:     cfmt = (char *)fmt;
  2295   002E78  C045  F049         	movff	vfprintf@fmt,vfprintf@cfmt
  2296   002E7C  C046  F04A         	movff	vfprintf@fmt+1,vfprintf@cfmt+1
  2297                           
  2298                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 1555:     while (
      +                          *cfmt) {
  2299   002E80  EF50  F017         	goto	l6236
  2300   002E84                     l6234:
  2301                           
  2302                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 1559:    vfpfcnvr
      +                          t(fp, &cfmt, ap);
  2303   002E84  C043  F035         	movff	vfprintf@fp,vfpfcnvrt@fp
  2304   002E88  C044  F036         	movff	vfprintf@fp+1,vfpfcnvrt@fp+1
  2305   002E8C  0E49               	movlw	low vfprintf@cfmt
  2306   002E8E  6E37               	movwf	vfpfcnvrt@fmt^0,c
  2307   002E90  0E00               	movlw	high vfprintf@cfmt
  2308   002E92  6E38               	movwf	(vfpfcnvrt@fmt+1)^0,c
  2309   002E94  C047  F039         	movff	vfprintf@ap,vfpfcnvrt@ap
  2310   002E98  C048  F03A         	movff	vfprintf@ap+1,vfpfcnvrt@ap+1
  2311   002E9C  ECD0  F00F         	call	_vfpfcnvrt	;wreg free
  2312   002EA0                     l6236:
  2313                           
  2314                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 1555:     while (
      +                          *cfmt) {
  2315   002EA0  C049  FFF6         	movff	vfprintf@cfmt,tblptrl
  2316   002EA4  C04A  FFF7         	movff	vfprintf@cfmt+1,tblptrh
  2317   002EA8                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  2318   002EA8  6AF8               	clrf	tblptru,c
  2319   002EAA                     	endif
  2320   002EAA                     	if	0	;tblptru may be non-zero
  2321   002EAA                     	endif
  2322   002EAA  0008               	tblrd		*
  2323   002EAC  50F5               	movf	tablat,w,c
  2324   002EAE  0900               	iorlw	0
  2325   002EB0  A4D8               	btfss	status,2,c
  2326   002EB2  EF5D  F017         	goto	u5621
  2327   002EB6  EF5F  F017         	goto	u5620
  2328   002EBA                     u5621:
  2329   002EBA  EF42  F017         	goto	l6234
  2330   002EBE                     u5620:
  2331   002EBE                     
  2332                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 1564:  return 0;
  2333   002EBE  0E00               	movlw	0
  2334   002EC0  6E44               	movwf	(?_vfprintf+1)^0,c
  2335   002EC2  0E00               	movlw	0
  2336   002EC4  6E43               	movwf	?_vfprintf^0,c
  2337   002EC6  0012               	return		;funcret
  2338   002EC8                     __end_of_vfprintf:
  2339                           	callstack 0
  2340                           
  2341 ;; *************** function _vfpfcnvrt *****************
  2342 ;; Defined at:
  2343 ;;		line 1048 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c"
  2344 ;; Parameters:    Size  Location     Type
  2345 ;;  fp              2   52[COMRAM] PTR struct _IO_FILE
  2346 ;;		 -> sprintf@f(12), 
  2347 ;;  fmt             2   54[COMRAM] PTR PTR unsigned char 
  2348 ;;		 -> vfprintf@cfmt(2), 
  2349 ;;  ap              2   56[COMRAM] PTR PTR void 
  2350 ;;		 -> sprintf@ap(2), 
  2351 ;; Auto vars:     Size  Location     Type
  2352 ;;  convarg         4   60[COMRAM] struct .
  2353 ;;  cp              2   64[COMRAM] PTR unsigned char 
  2354 ;;		 -> STR_3(3), STR_2(3), STR_1(3), 
  2355 ;;  i               2    0        int 
  2356 ;;  done            2    0        int 
  2357 ;;  c               1    0        unsigned char 
  2358 ;; Return value:  Size  Location     Type
  2359 ;;                  1    wreg      void 
  2360 ;; Registers used:
  2361 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  2362 ;; Tracked objects:
  2363 ;;		On entry : 0/0
  2364 ;;		On exit  : 0/0
  2365 ;;		Unchanged: 0/0
  2366 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2367 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2368 ;;      Locals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2369 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2370 ;;      Totals:        14       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2371 ;;Total ram usage:       14 bytes
  2372 ;; Hardware stack levels used: 1
  2373 ;; Hardware stack levels required when called: 9
  2374 ;; This function calls:
  2375 ;;		_dtoa
  2376 ;;		_fputc
  2377 ;; This function is called by:
  2378 ;;		_vfprintf
  2379 ;; This function uses a non-reentrant model
  2380 ;;
  2381                           
  2382                           	psect	text10
  2383   001FA0                     __ptext10:
  2384                           	callstack 0
  2385   001FA0                     _vfpfcnvrt:
  2386                           	callstack 18
  2387   001FA0                     
  2388                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 1048: vfpfcnvrt(F
      +                          ILE *fp, char *fmt[], va_list ap);C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\c
      +                          ommon\doprnt.c: 1049: {;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\dopr
      +                          nt.c: 1050:     char c, *cp;;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common
      +                          \doprnt.c: 1051:     int done, i;;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\c
      +                          ommon\doprnt.c: 1059:  } convarg;;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\c
      +                          ommon\doprnt.c: 1062:     if ((*fmt)[0] == '%') {
  2389   001FA0  C037  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2390   001FA4  C038  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2391   001FA8  CFDE FFF6          	movff	postinc2,tblptrl
  2392   001FAC  CFDD FFF7          	movff	postdec2,tblptrh
  2393   001FB0                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  2394   001FB0  6AF8               	clrf	tblptru,c
  2395   001FB2                     	endif
  2396   001FB2                     	if	0	;tblptru may be non-zero
  2397   001FB2                     	endif
  2398   001FB2  0008               	tblrd		*
  2399   001FB4  50F5               	movf	tablat,w,c
  2400   001FB6  0A25               	xorlw	37
  2401   001FB8  A4D8               	btfss	status,2,c
  2402   001FBA  EFE1  F00F         	goto	u5591
  2403   001FBE  EFE3  F00F         	goto	u5590
  2404   001FC2                     u5591:
  2405   001FC2  EF50  F010         	goto	l6226
  2406   001FC6                     u5590:
  2407   001FC6                     
  2408                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 1063:         ++*
      +                          fmt;
  2409   001FC6  C037  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2410   001FCA  C038  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2411   001FCE  2ADE               	incf	postinc2,f,c
  2412   001FD0  0E00               	movlw	0
  2413   001FD2  22DD               	addwfc	postdec2,f,c
  2414   001FD4                     
  2415                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 1065:         fla
      +                          gs = width = 0;
  2416   001FD4  0E00               	movlw	0
  2417   001FD6  0100               	movlb	0	; () banked
  2418   001FD8  6FC2               	movwf	(_width+1)& (0+255),b
  2419   001FDA  0E00               	movlw	0
  2420   001FDC  6FC1               	movwf	_width& (0+255),b
  2421   001FDE  C0C1  F0DD         	movff	_width,_flags
  2422   001FE2                     
  2423                           ; BSR set to: 0
  2424                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 1066:         pre
      +                          c = -1;
  2425   001FE2  69C3               	setf	_prec& (0+255),b
  2426   001FE4  69C4               	setf	(_prec+1)& (0+255),b
  2427   001FE6                     
  2428                           ; BSR set to: 0
  2429                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 1143:   cp = *fmt
      +                          ;
  2430   001FE6  C037  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2431   001FEA  C038  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2432   001FEE  CFDE F041          	movff	postinc2,vfpfcnvrt@cp
  2433   001FF2  CFDD F042          	movff	postdec2,vfpfcnvrt@cp+1
  2434   001FF6                     
  2435                           ; BSR set to: 0
  2436                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 1213:   if (*cp =
      +                          = 'd' || *cp == 'i') {
  2437   001FF6  C041  FFF6         	movff	vfpfcnvrt@cp,tblptrl
  2438   001FFA  C042  FFF7         	movff	vfpfcnvrt@cp+1,tblptrh
  2439   001FFE                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  2440   001FFE  6AF8               	clrf	tblptru,c
  2441   002000                     	endif
  2442   002000                     	if	0	;tblptru may be non-zero
  2443   002000                     	endif
  2444   002000  0008               	tblrd		*
  2445   002002  50F5               	movf	tablat,w,c
  2446   002004  0A64               	xorlw	100
  2447   002006  B4D8               	btfsc	status,2,c
  2448   002008  EF08  F010         	goto	u5601
  2449   00200C  EF0A  F010         	goto	u5600
  2450   002010                     u5601:
  2451   002010  EF19  F010         	goto	l6216
  2452   002014                     u5600:
  2453   002014                     
  2454                           ; BSR set to: 0
  2455   002014  C041  FFF6         	movff	vfpfcnvrt@cp,tblptrl
  2456   002018  C042  FFF7         	movff	vfpfcnvrt@cp+1,tblptrh
  2457   00201C                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  2458   00201C  6AF8               	clrf	tblptru,c
  2459   00201E                     	endif
  2460   00201E                     	if	0	;tblptru may be non-zero
  2461   00201E                     	endif
  2462   00201E  0008               	tblrd		*
  2463   002020  50F5               	movf	tablat,w,c
  2464   002022  0A69               	xorlw	105
  2465   002024  A4D8               	btfss	status,2,c
  2466   002026  EF17  F010         	goto	u5611
  2467   00202A  EF19  F010         	goto	u5610
  2468   00202E                     u5611:
  2469   00202E  EF47  F010         	goto	l6222
  2470   002032                     u5610:
  2471   002032                     l6216:
  2472                           
  2473                           ; BSR set to: 0
  2474                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 1256:    convarg.
      +                          sint = (vfpf_sint_t)(int)(*(int *)__va_arg(*(int **)ap, (int)0));
  2475   002032  C039  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  2476   002036  C03A  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  2477   00203A  CFDF F03B          	movff	indf2,??_vfpfcnvrt
  2478   00203E  0E02               	movlw	2
  2479   002040  26DE               	addwf	postinc2,f,c
  2480   002042  CFDF F03C          	movff	indf2,??_vfpfcnvrt+1
  2481   002046  0E00               	movlw	0
  2482   002048  22DD               	addwfc	postdec2,f,c
  2483   00204A  C03B  FFD9         	movff	??_vfpfcnvrt,fsr2l
  2484   00204E  C03C  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  2485   002052  CFDE F03D          	movff	postinc2,vfpfcnvrt@convarg
  2486   002056  CFDD F03E          	movff	postdec2,vfpfcnvrt@convarg+1
  2487                           
  2488                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 1258:    *fmt = c
      +                          p+1;
  2489   00205A  0E01               	movlw	1
  2490   00205C  2441               	addwf	vfpfcnvrt@cp^0,w,c
  2491   00205E  6E3B               	movwf	??_vfpfcnvrt^0,c
  2492   002060  0E00               	movlw	0
  2493   002062  2042               	addwfc	(vfpfcnvrt@cp+1)^0,w,c
  2494   002064  6E3C               	movwf	(??_vfpfcnvrt+1)^0,c
  2495   002066  C037  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2496   00206A  C038  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2497   00206E  C03B  FFDE         	movff	??_vfpfcnvrt,postinc2
  2498   002072  C03C  FFDD         	movff	??_vfpfcnvrt+1,postdec2
  2499   002076                     
  2500                           ; BSR set to: 0
  2501                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 1259:    return (
      +                          void) dtoa(fp, convarg.sint);;	Return value of _vfpfcnvrt is never used
  2502   002076  C035  F028         	movff	vfpfcnvrt@fp,dtoa@fp
  2503   00207A  C036  F029         	movff	vfpfcnvrt@fp+1,dtoa@fp+1
  2504   00207E  C03D  F02A         	movff	vfpfcnvrt@convarg,dtoa@d
  2505   002082  C03E  F02B         	movff	vfpfcnvrt@convarg+1,dtoa@d+1
  2506   002086  ECA8  F00D         	call	_dtoa	;wreg free
  2507   00208A  EF65  F010         	goto	l1718
  2508   00208E                     l6222:
  2509                           
  2510                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 1535:         ++*
      +                          fmt;
  2511   00208E  C037  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2512   002092  C038  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2513   002096  2ADE               	incf	postinc2,f,c
  2514   002098  0E00               	movlw	0
  2515   00209A  22DD               	addwfc	postdec2,f,c
  2516   00209C  EF65  F010         	goto	l1718
  2517   0020A0                     l6226:
  2518                           
  2519                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 1540:     fputc((
      +                          int)(*fmt)[0], fp);
  2520   0020A0  C037  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2521   0020A4  C038  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2522   0020A8  CFDE FFF6          	movff	postinc2,tblptrl
  2523   0020AC  CFDD FFF7          	movff	postdec2,tblptrh
  2524   0020B0                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  2525   0020B0  6AF8               	clrf	tblptru,c
  2526   0020B2                     	endif
  2527   0020B2                     	if	0	;tblptru may be non-zero
  2528   0020B2                     	endif
  2529   0020B2  0008               	tblrd		*
  2530   0020B4  50F5               	movf	tablat,w,c
  2531   0020B6  6E0D               	movwf	fputc@c^0,c
  2532   0020B8  6A0E               	clrf	(fputc@c+1)^0,c
  2533   0020BA  C035  F00F         	movff	vfpfcnvrt@fp,fputc@fp
  2534   0020BE  C036  F010         	movff	vfpfcnvrt@fp+1,fputc@fp+1
  2535   0020C2  ECEE  F012         	call	_fputc	;wreg free
  2536   0020C6  EF47  F010         	goto	l6222
  2537   0020CA                     l1718:
  2538   0020CA  0012               	return		;funcret
  2539   0020CC                     __end_of_vfpfcnvrt:
  2540                           	callstack 0
  2541                           
  2542 ;; *************** function _dtoa *****************
  2543 ;; Defined at:
  2544 ;;		line 470 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c"
  2545 ;; Parameters:    Size  Location     Type
  2546 ;;  fp              2   39[COMRAM] PTR struct _IO_FILE
  2547 ;;		 -> sprintf@f(12), 
  2548 ;;  d               2   41[COMRAM] int 
  2549 ;; Auto vars:     Size  Location     Type
  2550 ;;  i               2   50[COMRAM] int 
  2551 ;;  w               2   47[COMRAM] int 
  2552 ;;  p               2   45[COMRAM] int 
  2553 ;;  s               1   49[COMRAM] unsigned char 
  2554 ;; Return value:  Size  Location     Type
  2555 ;;                  1    wreg      void 
  2556 ;; Registers used:
  2557 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  2558 ;; Tracked objects:
  2559 ;;		On entry : 0/0
  2560 ;;		On exit  : 0/0
  2561 ;;		Unchanged: 0/0
  2562 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2563 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2564 ;;      Locals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2565 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2566 ;;      Totals:        13       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2567 ;;Total ram usage:       13 bytes
  2568 ;; Hardware stack levels used: 1
  2569 ;; Hardware stack levels required when called: 8
  2570 ;; This function calls:
  2571 ;;		___awdiv
  2572 ;;		___awmod
  2573 ;;		_abs
  2574 ;;		_pad
  2575 ;; This function is called by:
  2576 ;;		_vfpfcnvrt
  2577 ;; This function uses a non-reentrant model
  2578 ;;
  2579                           
  2580                           	psect	text11
  2581   001B50                     __ptext11:
  2582                           	callstack 0
  2583   001B50                     _dtoa:
  2584                           	callstack 18
  2585   001B50                     
  2586                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 470: static void 
      +                          dtoa(FILE *fp, vfpf_sint_t d);C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\commo
      +                          n\doprnt.c: 471: {;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c:
      +                           472:  char s;;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 473
      +                          :     int i, p, w;;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c:
      +                           476:     s = d < 0 ? 1 : 0;
  2587   001B50  BE2B               	btfsc	(dtoa@d+1)^0,7,c
  2588   001B52  EFAD  F00D         	goto	u5491
  2589   001B56  EFB0  F00D         	goto	u5490
  2590   001B5A                     u5491:
  2591   001B5A  0E01               	movlw	1
  2592   001B5C  EFB1  F00D         	goto	u5500
  2593   001B60                     u5490:
  2594   001B60  0E00               	movlw	0
  2595   001B62                     u5500:
  2596   001B62  6E32               	movwf	dtoa@s^0,c
  2597   001B64                     
  2598                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 477:     if (s) {
  2599   001B64  5032               	movf	dtoa@s^0,w,c
  2600   001B66  B4D8               	btfsc	status,2,c
  2601   001B68  EFB8  F00D         	goto	u5511
  2602   001B6C  EFBA  F00D         	goto	u5510
  2603   001B70                     u5511:
  2604   001B70  EFBE  F00D         	goto	l6158
  2605   001B74                     u5510:
  2606   001B74                     
  2607                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 478:         d = 
      +                          -d;
  2608   001B74  6C2A               	negf	dtoa@d^0,c
  2609   001B76  1E2B               	comf	(dtoa@d+1)^0,f,c
  2610   001B78  B0D8               	btfsc	status,0,c
  2611   001B7A  2A2B               	incf	(dtoa@d+1)^0,f,c
  2612   001B7C                     l6158:
  2613                           
  2614                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 487:     p = (0 <
      +                          = prec) ? prec : 1;
  2615   001B7C  0100               	movlb	0	; () banked
  2616   001B7E  BFC4               	btfsc	(_prec+1)& (0+255),7,b
  2617   001B80  EFC6  F00D         	goto	u5520
  2618   001B84  EFC4  F00D         	goto	u5521
  2619   001B88                     u5521:
  2620   001B88  EFCC  F00D         	goto	l1697
  2621   001B8C                     u5520:
  2622   001B8C                     
  2623                           ; BSR set to: 0
  2624   001B8C  0E00               	movlw	0
  2625   001B8E  6E2F               	movwf	(dtoa@p+1)^0,c
  2626   001B90  0E01               	movlw	1
  2627   001B92  6E2E               	movwf	dtoa@p^0,c
  2628   001B94  EFD0  F00D         	goto	l1699
  2629   001B98                     l1697:
  2630                           
  2631                           ; BSR set to: 0
  2632   001B98  C0C3  F02E         	movff	_prec,dtoa@p
  2633   001B9C  C0C4  F02F         	movff	_prec+1,dtoa@p+1
  2634   001BA0                     l1699:
  2635                           
  2636                           ; BSR set to: 0
  2637                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 488:     w = widt
      +                          h;
  2638   001BA0  C0C1  F030         	movff	_width,dtoa@w
  2639   001BA4  C0C2  F031         	movff	_width+1,dtoa@w+1
  2640   001BA8                     
  2641                           ; BSR set to: 0
  2642                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 489:     if (s
  2643   001BA8  5032               	movf	dtoa@s^0,w,c
  2644   001BAA  B4D8               	btfsc	status,2,c
  2645   001BAC  EFDA  F00D         	goto	u5531
  2646   001BB0  EFDC  F00D         	goto	u5530
  2647   001BB4                     u5531:
  2648   001BB4  EFF3  F00D         	goto	l1700
  2649   001BB8                     u5530:
  2650   001BB8                     
  2651                           ; BSR set to: 0
  2652                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 493:     ) {;C:\P
      +                          rogram Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 494:         --w;
  2653   001BB8  0630               	decf	dtoa@w^0,f,c
  2654   001BBA  A0D8               	btfss	status,0,c
  2655   001BBC  0631               	decf	(dtoa@w+1)^0,f,c
  2656   001BBE                     
  2657                           ; BSR set to: 0
  2658                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 495:   s = s ? '-
      +                          ' : '+';
  2659   001BBE  5032               	movf	dtoa@s^0,w,c
  2660   001BC0  A4D8               	btfss	status,2,c
  2661   001BC2  EFE5  F00D         	goto	u5541
  2662   001BC6  EFE7  F00D         	goto	u5540
  2663   001BCA                     u5541:
  2664   001BCA  EFED  F00D         	goto	l6170
  2665   001BCE                     u5540:
  2666   001BCE                     
  2667                           ; BSR set to: 0
  2668   001BCE  0E00               	movlw	0
  2669   001BD0  6E2D               	movwf	(_dtoa$2546+1)^0,c
  2670   001BD2  0E2B               	movlw	43
  2671   001BD4  6E2C               	movwf	_dtoa$2546^0,c
  2672   001BD6  EFF1  F00D         	goto	l6172
  2673   001BDA                     l6170:
  2674                           
  2675                           ; BSR set to: 0
  2676   001BDA  0E00               	movlw	0
  2677   001BDC  6E2D               	movwf	(_dtoa$2546+1)^0,c
  2678   001BDE  0E2D               	movlw	45
  2679   001BE0  6E2C               	movwf	_dtoa$2546^0,c
  2680   001BE2                     l6172:
  2681                           
  2682                           ; BSR set to: 0
  2683   001BE2  C02C  F032         	movff	_dtoa$2546,dtoa@s
  2684   001BE6                     l1700:
  2685                           
  2686                           ; BSR set to: 0
  2687                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 505:     i = size
      +                          of(dbuf) - 1;
  2688   001BE6  0E00               	movlw	0
  2689   001BE8  6E34               	movwf	(dtoa@i+1)^0,c
  2690   001BEA  0E1F               	movlw	31
  2691   001BEC  6E33               	movwf	dtoa@i^0,c
  2692   001BEE                     
  2693                           ; BSR set to: 0
  2694                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 506:     dbuf[i] 
      +                          = '\0';
  2695   001BEE  0E00               	movlw	0
  2696   001BF0  0101               	movlb	1	; () banked
  2697   001BF2  6F1F               	movwf	(_dbuf+31)& (0+255),b
  2698                           
  2699                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 507:     while (!
      +                          (i < 1) && (d || (0 < p)
  2700   001BF4  EF2C  F00E         	goto	l6186
  2701   001BF8                     l6176:
  2702                           
  2703                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 511:     )) {;C:\
      +                          Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 512:         --i;
  2704   001BF8  0633               	decf	dtoa@i^0,f,c
  2705   001BFA  A0D8               	btfss	status,0,c
  2706   001BFC  0634               	decf	(dtoa@i+1)^0,f,c
  2707   001BFE                     
  2708                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 513:         dbuf
      +                          [i] = (char)((int)'0' + abs(d % 10));
  2709   001BFE  0E00               	movlw	low _dbuf
  2710   001C00  2433               	addwf	dtoa@i^0,w,c
  2711   001C02  6ED9               	movwf	fsr2l,c
  2712   001C04  0E01               	movlw	high _dbuf
  2713   001C06  2034               	addwfc	(dtoa@i+1)^0,w,c
  2714   001C08  6EDA               	movwf	fsr2h,c
  2715   001C0A  C02A  F00D         	movff	dtoa@d,___awmod@dividend
  2716   001C0E  C02B  F00E         	movff	dtoa@d+1,___awmod@dividend+1
  2717   001C12  0E00               	movlw	0
  2718   001C14  6E10               	movwf	(___awmod@divisor+1)^0,c
  2719   001C16  0E0A               	movlw	10
  2720   001C18  6E0F               	movwf	___awmod@divisor^0,c
  2721   001C1A  EC13  F014         	call	___awmod	;wreg free
  2722   001C1E  C00D  F013         	movff	?___awmod,abs@a
  2723   001C22  C00E  F014         	movff	?___awmod+1,abs@a+1
  2724   001C26  EC16  F018         	call	_abs	;wreg free
  2725   001C2A  5013               	movf	?_abs^0,w,c
  2726   001C2C  0F30               	addlw	48
  2727   001C2E  6EDF               	movwf	indf2,c
  2728   001C30                     
  2729                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 514:         --p;
  2730   001C30  062E               	decf	dtoa@p^0,f,c
  2731   001C32  A0D8               	btfss	status,0,c
  2732   001C34  062F               	decf	(dtoa@p+1)^0,f,c
  2733   001C36                     
  2734                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 515:         --w;
  2735   001C36  0630               	decf	dtoa@w^0,f,c
  2736   001C38  A0D8               	btfss	status,0,c
  2737   001C3A  0631               	decf	(dtoa@w+1)^0,f,c
  2738   001C3C                     
  2739                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 516:         d = 
      +                          d / 10;
  2740   001C3C  C02A  F00D         	movff	dtoa@d,___awdiv@dividend
  2741   001C40  C02B  F00E         	movff	dtoa@d+1,___awdiv@dividend+1
  2742   001C44  0E00               	movlw	0
  2743   001C46  6E10               	movwf	(___awdiv@divisor+1)^0,c
  2744   001C48  0E0A               	movlw	10
  2745   001C4A  6E0F               	movwf	___awdiv@divisor^0,c
  2746   001C4C  EC53  F013         	call	___awdiv	;wreg free
  2747   001C50  C00D  F02A         	movff	?___awdiv,dtoa@d
  2748   001C54  C00E  F02B         	movff	?___awdiv+1,dtoa@d+1
  2749   001C58                     l6186:
  2750                           
  2751                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 507:     while (!
      +                          (i < 1) && (d || (0 < p)
  2752   001C58  BE34               	btfsc	(dtoa@i+1)^0,7,c
  2753   001C5A  EF37  F00E         	goto	u5551
  2754   001C5E  5034               	movf	(dtoa@i+1)^0,w,c
  2755   001C60  E108               	bnz	u5550
  2756   001C62  0433               	decf	dtoa@i^0,w,c
  2757   001C64  A0D8               	btfss	status,0,c
  2758   001C66  EF37  F00E         	goto	u5551
  2759   001C6A  EF39  F00E         	goto	u5550
  2760   001C6E                     u5551:
  2761   001C6E  EF4F  F00E         	goto	l6192
  2762   001C72                     u5550:
  2763   001C72  502A               	movf	dtoa@d^0,w,c
  2764   001C74  102B               	iorwf	(dtoa@d+1)^0,w,c
  2765   001C76  A4D8               	btfss	status,2,c
  2766   001C78  EF40  F00E         	goto	u5561
  2767   001C7C  EF42  F00E         	goto	u5560
  2768   001C80                     u5561:
  2769   001C80  EFFC  F00D         	goto	l6176
  2770   001C84                     u5560:
  2771   001C84  BE2F               	btfsc	(dtoa@p+1)^0,7,c
  2772   001C86  EF4F  F00E         	goto	u5570
  2773   001C8A  502F               	movf	(dtoa@p+1)^0,w,c
  2774   001C8C  E106               	bnz	u5571
  2775   001C8E  042E               	decf	dtoa@p^0,w,c
  2776   001C90  B0D8               	btfsc	status,0,c
  2777   001C92  EF4D  F00E         	goto	u5571
  2778   001C96  EF4F  F00E         	goto	u5570
  2779   001C9A                     u5571:
  2780   001C9A  EFFC  F00D         	goto	l6176
  2781   001C9E                     u5570:
  2782   001C9E                     l6192:
  2783                           
  2784                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 520:     if (s !=
      +                           0) {
  2785   001C9E  5032               	movf	dtoa@s^0,w,c
  2786   001CA0  B4D8               	btfsc	status,2,c
  2787   001CA2  EF55  F00E         	goto	u5581
  2788   001CA6  EF57  F00E         	goto	u5580
  2789   001CAA                     u5581:
  2790   001CAA  EF62  F00E         	goto	l6198
  2791   001CAE                     u5580:
  2792   001CAE                     
  2793                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 521:         --i;
  2794   001CAE  0633               	decf	dtoa@i^0,f,c
  2795   001CB0  A0D8               	btfss	status,0,c
  2796   001CB2  0634               	decf	(dtoa@i+1)^0,f,c
  2797   001CB4                     
  2798                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 522:         dbuf
      +                          [i] = s;
  2799   001CB4  0E00               	movlw	low _dbuf
  2800   001CB6  2433               	addwf	dtoa@i^0,w,c
  2801   001CB8  6ED9               	movwf	fsr2l,c
  2802   001CBA  0E01               	movlw	high _dbuf
  2803   001CBC  2034               	addwfc	(dtoa@i+1)^0,w,c
  2804   001CBE  6EDA               	movwf	fsr2h,c
  2805   001CC0  C032  FFDF         	movff	dtoa@s,indf2
  2806   001CC4                     l6198:
  2807                           
  2808                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 526:     return (
      +                          void) pad(fp, &dbuf[i], w);
  2809   001CC4  C028  F01D         	movff	dtoa@fp,pad@fp
  2810   001CC8  C029  F01E         	movff	dtoa@fp+1,pad@fp+1
  2811   001CCC  0E00               	movlw	low _dbuf
  2812   001CCE  2433               	addwf	dtoa@i^0,w,c
  2813   001CD0  6E1F               	movwf	pad@buf^0,c
  2814   001CD2  0E01               	movlw	high _dbuf
  2815   001CD4  2034               	addwfc	(dtoa@i+1)^0,w,c
  2816   001CD6  6E20               	movwf	(pad@buf+1)^0,c
  2817   001CD8  C030  F021         	movff	dtoa@w,pad@p
  2818   001CDC  C031  F022         	movff	dtoa@w+1,pad@p+1
  2819   001CE0  ECE5  F015         	call	_pad	;wreg free
  2820   001CE4  0012               	return		;funcret
  2821   001CE6                     __end_of_dtoa:
  2822                           	callstack 0
  2823                           
  2824 ;; *************** function _pad *****************
  2825 ;; Defined at:
  2826 ;;		line 152 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c"
  2827 ;; Parameters:    Size  Location     Type
  2828 ;;  fp              2   28[COMRAM] PTR struct _IO_FILE
  2829 ;;		 -> sprintf@f(12), 
  2830 ;;  buf             2   30[COMRAM] PTR unsigned char 
  2831 ;;		 -> dbuf(32), 
  2832 ;;  p               2   32[COMRAM] int 
  2833 ;; Auto vars:     Size  Location     Type
  2834 ;;  w               2   37[COMRAM] int 
  2835 ;;  i               2   35[COMRAM] int 
  2836 ;; Return value:  Size  Location     Type
  2837 ;;                  1    wreg      void 
  2838 ;; Registers used:
  2839 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  2840 ;; Tracked objects:
  2841 ;;		On entry : 0/0
  2842 ;;		On exit  : 0/0
  2843 ;;		Unchanged: 0/0
  2844 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2845 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2846 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2847 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2848 ;;      Totals:        11       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2849 ;;Total ram usage:       11 bytes
  2850 ;; Hardware stack levels used: 1
  2851 ;; Hardware stack levels required when called: 7
  2852 ;; This function calls:
  2853 ;;		_fputc
  2854 ;;		_fputs
  2855 ;; This function is called by:
  2856 ;;		_dtoa
  2857 ;; This function uses a non-reentrant model
  2858 ;;
  2859                           
  2860                           	psect	text12
  2861   002BCA                     __ptext12:
  2862                           	callstack 0
  2863   002BCA                     _pad:
  2864                           	callstack 18
  2865   002BCA                     
  2866                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 152: static void 
      +                          pad(FILE *fp, char *buf, int p);C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\com
      +                          mon\doprnt.c: 153: {;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.
      +                          c: 154:     int i, w;;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt
      +                          .c: 164:     w = (p < 0) ? 0 : p;
  2867   002BCA  BE22               	btfsc	(pad@p+1)^0,7,c
  2868   002BCC  EFEA  F015         	goto	u5461
  2869   002BD0  EFEC  F015         	goto	u5460
  2870   002BD4                     u5461:
  2871   002BD4  EFF2  F015         	goto	l6138
  2872   002BD8                     u5460:
  2873   002BD8  C021  F026         	movff	pad@p,pad@w
  2874   002BDC  C022  F027         	movff	pad@p+1,pad@w+1
  2875   002BE0  EFF6  F015         	goto	l1688
  2876   002BE4                     l6138:
  2877   002BE4  0E00               	movlw	0
  2878   002BE6  6E27               	movwf	(pad@w+1)^0,c
  2879   002BE8  0E00               	movlw	0
  2880   002BEA  6E26               	movwf	pad@w^0,c
  2881   002BEC                     l1688:
  2882                           
  2883                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 165:     i = 0;
  2884   002BEC  0E00               	movlw	0
  2885   002BEE  6E25               	movwf	(pad@i+1)^0,c
  2886   002BF0  0E00               	movlw	0
  2887   002BF2  6E24               	movwf	pad@i^0,c
  2888                           
  2889                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 166:     while (i
      +                           < w) {
  2890   002BF4  EF08  F016         	goto	l6144
  2891   002BF8                     l6140:
  2892                           
  2893                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 167:         fput
      +                          c(' ', fp);
  2894   002BF8  0E00               	movlw	0
  2895   002BFA  6E0E               	movwf	(fputc@c+1)^0,c
  2896   002BFC  0E20               	movlw	32
  2897   002BFE  6E0D               	movwf	fputc@c^0,c
  2898   002C00  C01D  F00F         	movff	pad@fp,fputc@fp
  2899   002C04  C01E  F010         	movff	pad@fp+1,fputc@fp+1
  2900   002C08  ECEE  F012         	call	_fputc	;wreg free
  2901   002C0C                     
  2902                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 168:         ++i;
  2903   002C0C  4A24               	infsnz	pad@i^0,f,c
  2904   002C0E  2A25               	incf	(pad@i+1)^0,f,c
  2905   002C10                     l6144:
  2906                           
  2907                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 166:     while (i
      +                           < w) {
  2908   002C10  5026               	movf	pad@w^0,w,c
  2909   002C12  5C24               	subwf	pad@i^0,w,c
  2910   002C14  5025               	movf	(pad@i+1)^0,w,c
  2911   002C16  0A80               	xorlw	128
  2912   002C18  6E23               	movwf	??_pad^0,c
  2913   002C1A  5027               	movf	(pad@w+1)^0,w,c
  2914   002C1C  0A80               	xorlw	128
  2915   002C1E  5823               	subwfb	??_pad^0,w,c
  2916   002C20  A0D8               	btfss	status,0,c
  2917   002C22  EF15  F016         	goto	u5471
  2918   002C26  EF17  F016         	goto	u5470
  2919   002C2A                     u5471:
  2920   002C2A  EFFC  F015         	goto	l6140
  2921   002C2E                     u5470:
  2922   002C2E                     
  2923                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 175:         fput
      +                          s((const char *)buf, fp);
  2924   002C2E  C01F  F016         	movff	pad@buf,fputs@s
  2925   002C32  C020  F017         	movff	pad@buf+1,fputs@s+1
  2926   002C36  C01D  F018         	movff	pad@fp,fputs@fp
  2927   002C3A  C01E  F019         	movff	pad@fp+1,fputs@fp+1
  2928   002C3E  ECF4  F017         	call	_fputs	;wreg free
  2929   002C42  0012               	return		;funcret
  2930   002C44                     __end_of_pad:
  2931                           	callstack 0
  2932                           
  2933 ;; *************** function _fputs *****************
  2934 ;; Defined at:
  2935 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\nf_fputs.c"
  2936 ;; Parameters:    Size  Location     Type
  2937 ;;  s               2   21[COMRAM] PTR const unsigned char 
  2938 ;;		 -> dbuf(32), 
  2939 ;;  fp              2   23[COMRAM] PTR struct _IO_FILE
  2940 ;;		 -> sprintf@f(12), 
  2941 ;; Auto vars:     Size  Location     Type
  2942 ;;  i               2   26[COMRAM] int 
  2943 ;;  c               1   25[COMRAM] unsigned char 
  2944 ;; Return value:  Size  Location     Type
  2945 ;;                  2   21[COMRAM] int 
  2946 ;; Registers used:
  2947 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  2948 ;; Tracked objects:
  2949 ;;		On entry : 0/0
  2950 ;;		On exit  : 0/0
  2951 ;;		Unchanged: 0/0
  2952 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2953 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2954 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2955 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2956 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2957 ;;Total ram usage:        7 bytes
  2958 ;; Hardware stack levels used: 1
  2959 ;; Hardware stack levels required when called: 6
  2960 ;; This function calls:
  2961 ;;		_fputc
  2962 ;; This function is called by:
  2963 ;;		_pad
  2964 ;; This function uses a non-reentrant model
  2965 ;;
  2966                           
  2967                           	psect	text13
  2968   002FE8                     __ptext13:
  2969                           	callstack 0
  2970   002FE8                     _fputs:
  2971                           	callstack 18
  2972   002FE8  0E00               	movlw	0
  2973   002FEA  6E1C               	movwf	(fputs@i+1)^0,c
  2974   002FEC  0E00               	movlw	0
  2975   002FEE  6E1B               	movwf	fputs@i^0,c
  2976   002FF0  EF05  F018         	goto	l6052
  2977   002FF4                     l6048:
  2978   002FF4  C01A  F00D         	movff	fputs@c,fputc@c
  2979   002FF8  6A0E               	clrf	(fputc@c+1)^0,c
  2980   002FFA  C018  F00F         	movff	fputs@fp,fputc@fp
  2981   002FFE  C019  F010         	movff	fputs@fp+1,fputc@fp+1
  2982   003002  ECEE  F012         	call	_fputc	;wreg free
  2983   003006  4A1B               	infsnz	fputs@i^0,f,c
  2984   003008  2A1C               	incf	(fputs@i+1)^0,f,c
  2985   00300A                     l6052:
  2986   00300A  501B               	movf	fputs@i^0,w,c
  2987   00300C  2416               	addwf	fputs@s^0,w,c
  2988   00300E  6ED9               	movwf	fsr2l,c
  2989   003010  501C               	movf	(fputs@i+1)^0,w,c
  2990   003012  2017               	addwfc	(fputs@s+1)^0,w,c
  2991   003014  6EDA               	movwf	fsr2h,c
  2992   003016  50DF               	movf	indf2,w,c
  2993   003018  6E1A               	movwf	fputs@c^0,c
  2994   00301A  501A               	movf	fputs@c^0,w,c
  2995   00301C  A4D8               	btfss	status,2,c
  2996   00301E  EF13  F018         	goto	u5331
  2997   003022  EF15  F018         	goto	u5330
  2998   003026                     u5331:
  2999   003026  EFFA  F017         	goto	l6048
  3000   00302A                     u5330:
  3001   00302A  0012               	return		;funcret
  3002   00302C                     __end_of_fputs:
  3003                           	callstack 0
  3004                           
  3005 ;; *************** function _fputc *****************
  3006 ;; Defined at:
  3007 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\nf_fputc.c"
  3008 ;; Parameters:    Size  Location     Type
  3009 ;;  c               2   12[COMRAM] int 
  3010 ;;  fp              2   14[COMRAM] PTR struct _IO_FILE
  3011 ;;		 -> sprintf@f(12), 
  3012 ;; Auto vars:     Size  Location     Type
  3013 ;;		None
  3014 ;; Return value:  Size  Location     Type
  3015 ;;                  2   12[COMRAM] int 
  3016 ;; Registers used:
  3017 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  3018 ;; Tracked objects:
  3019 ;;		On entry : 0/0
  3020 ;;		On exit  : 0/0
  3021 ;;		Unchanged: 0/0
  3022 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3023 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3024 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3025 ;;      Temps:          5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3026 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3027 ;;Total ram usage:        9 bytes
  3028 ;; Hardware stack levels used: 1
  3029 ;; Hardware stack levels required when called: 5
  3030 ;; This function calls:
  3031 ;;		_putch
  3032 ;; This function is called by:
  3033 ;;		_pad
  3034 ;;		_vfpfcnvrt
  3035 ;;		_fputs
  3036 ;; This function uses a non-reentrant model
  3037 ;;
  3038                           
  3039                           	psect	text14
  3040   0025DC                     __ptext14:
  3041                           	callstack 0
  3042   0025DC                     _fputc:
  3043                           	callstack 21
  3044   0025DC  500F               	movf	fputc@fp^0,w,c
  3045   0025DE  1010               	iorwf	(fputc@fp+1)^0,w,c
  3046   0025E0  B4D8               	btfsc	status,2,c
  3047   0025E2  EFF5  F012         	goto	u5291
  3048   0025E6  EFF7  F012         	goto	u5290
  3049   0025EA                     u5291:
  3050   0025EA  EF00  F013         	goto	l6036
  3051   0025EE                     u5290:
  3052   0025EE  500F               	movf	fputc@fp^0,w,c
  3053   0025F0  1010               	iorwf	(fputc@fp+1)^0,w,c
  3054   0025F2  A4D8               	btfss	status,2,c
  3055   0025F4  EFFE  F012         	goto	u5301
  3056   0025F8  EF00  F013         	goto	u5300
  3057   0025FC                     u5301:
  3058   0025FC  EF05  F013         	goto	l6038
  3059   002600                     u5300:
  3060   002600                     l6036:
  3061   002600  500D               	movf	fputc@c^0,w,c
  3062   002602  EC58  F019         	call	_putch
  3063   002606  EF52  F013         	goto	l1743
  3064   00260A                     l6038:
  3065   00260A  EE20 F00A          	lfsr	2,10
  3066   00260E  500F               	movf	fputc@fp^0,w,c
  3067   002610  26D9               	addwf	fsr2l,f,c
  3068   002612  5010               	movf	(fputc@fp+1)^0,w,c
  3069   002614  22DA               	addwfc	fsr2h,f,c
  3070   002616  50DE               	movf	postinc2,w,c
  3071   002618  10DE               	iorwf	postinc2,w,c
  3072   00261A  B4D8               	btfsc	status,2,c
  3073   00261C  EF12  F013         	goto	u5311
  3074   002620  EF14  F013         	goto	u5310
  3075   002624                     u5311:
  3076   002624  EF2F  F013         	goto	l6042
  3077   002628                     u5310:
  3078   002628  EE20 F00A          	lfsr	2,10
  3079   00262C  500F               	movf	fputc@fp^0,w,c
  3080   00262E  26D9               	addwf	fsr2l,f,c
  3081   002630  5010               	movf	(fputc@fp+1)^0,w,c
  3082   002632  22DA               	addwfc	fsr2h,f,c
  3083   002634  EE10 F003          	lfsr	1,3
  3084   002638  500F               	movf	fputc@fp^0,w,c
  3085   00263A  26E1               	addwf	fsr1l,f,c
  3086   00263C  5010               	movf	(fputc@fp+1)^0,w,c
  3087   00263E  22E2               	addwfc	fsr1h,f,c
  3088   002640  50DE               	movf	postinc2,w,c
  3089   002642  5CE6               	subwf	postinc1,w,c
  3090   002644  50E6               	movf	postinc1,w,c
  3091   002646  0A80               	xorlw	128
  3092   002648  6E15               	movwf	(??_fputc+4)^0,c
  3093   00264A  50DE               	movf	postinc2,w,c
  3094   00264C  0A80               	xorlw	128
  3095   00264E  5815               	subwfb	(??_fputc+4)^0,w,c
  3096   002650  B0D8               	btfsc	status,0,c
  3097   002652  EF2D  F013         	goto	u5321
  3098   002656  EF2F  F013         	goto	u5320
  3099   00265A                     u5321:
  3100   00265A  EF52  F013         	goto	l1743
  3101   00265E                     u5320:
  3102   00265E                     l6042:
  3103   00265E  EE20 F003          	lfsr	2,3
  3104   002662  500F               	movf	fputc@fp^0,w,c
  3105   002664  26D9               	addwf	fsr2l,f,c
  3106   002666  5010               	movf	(fputc@fp+1)^0,w,c
  3107   002668  22DA               	addwfc	fsr2h,f,c
  3108   00266A  CFDE F011          	movff	postinc2,??_fputc
  3109   00266E  CFDD F012          	movff	postdec2,??_fputc+1
  3110   002672  C00F  FFD9         	movff	fputc@fp,fsr2l
  3111   002676  C010  FFDA         	movff	fputc@fp+1,fsr2h
  3112   00267A  CFDE F013          	movff	postinc2,??_fputc+2
  3113   00267E  CFDD F014          	movff	postdec2,??_fputc+3
  3114   002682  5011               	movf	??_fputc^0,w,c
  3115   002684  2413               	addwf	(??_fputc+2)^0,w,c
  3116   002686  6ED9               	movwf	fsr2l,c
  3117   002688  5012               	movf	(??_fputc+1)^0,w,c
  3118   00268A  2014               	addwfc	(??_fputc+3)^0,w,c
  3119   00268C  6EDA               	movwf	fsr2h,c
  3120   00268E  C00D  FFDF         	movff	fputc@c,indf2
  3121   002692  EE20 F003          	lfsr	2,3
  3122   002696  500F               	movf	fputc@fp^0,w,c
  3123   002698  26D9               	addwf	fsr2l,f,c
  3124   00269A  5010               	movf	(fputc@fp+1)^0,w,c
  3125   00269C  22DA               	addwfc	fsr2h,f,c
  3126   00269E  2ADE               	incf	postinc2,f,c
  3127   0026A0  0E00               	movlw	0
  3128   0026A2  22DD               	addwfc	postdec2,f,c
  3129   0026A4                     l1743:
  3130   0026A4  0012               	return		;funcret
  3131   0026A6                     __end_of_fputc:
  3132                           	callstack 0
  3133                           
  3134 ;; *************** function _putch *****************
  3135 ;; Defined at:
  3136 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\putch.c"
  3137 ;; Parameters:    Size  Location     Type
  3138 ;;  c               1    wreg     unsigned char 
  3139 ;; Auto vars:     Size  Location     Type
  3140 ;;  c               1    0[COMRAM] unsigned char 
  3141 ;; Return value:  Size  Location     Type
  3142 ;;                  1    wreg      void 
  3143 ;; Registers used:
  3144 ;;		wreg
  3145 ;; Tracked objects:
  3146 ;;		On entry : 0/0
  3147 ;;		On exit  : 0/0
  3148 ;;		Unchanged: 0/0
  3149 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3150 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3151 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3152 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3153 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3154 ;;Total ram usage:        0 bytes
  3155 ;; Hardware stack levels used: 1
  3156 ;; Hardware stack levels required when called: 4
  3157 ;; This function calls:
  3158 ;;		Nothing
  3159 ;; This function is called by:
  3160 ;;		_fputc
  3161 ;; This function uses a non-reentrant model
  3162 ;;
  3163                           
  3164                           	psect	text15
  3165   0032B0                     __ptext15:
  3166                           	callstack 0
  3167   0032B0                     _putch:
  3168                           	callstack 21
  3169   0032B0  0012               	return		;funcret
  3170   0032B2                     __end_of_putch:
  3171                           	callstack 0
  3172                           
  3173 ;; *************** function _abs *****************
  3174 ;; Defined at:
  3175 ;;		line 1 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\abs.c"
  3176 ;; Parameters:    Size  Location     Type
  3177 ;;  a               2   18[COMRAM] int 
  3178 ;; Auto vars:     Size  Location     Type
  3179 ;;		None
  3180 ;; Return value:  Size  Location     Type
  3181 ;;                  2   18[COMRAM] int 
  3182 ;; Registers used:
  3183 ;;		wreg, status,2, status,0
  3184 ;; Tracked objects:
  3185 ;;		On entry : 0/0
  3186 ;;		On exit  : 0/0
  3187 ;;		Unchanged: 0/0
  3188 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3189 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3190 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3191 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3192 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3193 ;;Total ram usage:        4 bytes
  3194 ;; Hardware stack levels used: 1
  3195 ;; Hardware stack levels required when called: 4
  3196 ;; This function calls:
  3197 ;;		Nothing
  3198 ;; This function is called by:
  3199 ;;		_dtoa
  3200 ;; This function uses a non-reentrant model
  3201 ;;
  3202                           
  3203                           	psect	text16
  3204   00302C                     __ptext16:
  3205                           	callstack 0
  3206   00302C                     _abs:
  3207                           	callstack 21
  3208   00302C  BE14               	btfsc	(abs@a+1)^0,7,c
  3209   00302E  EF23  F018         	goto	u5480
  3210   003032  5014               	movf	(abs@a+1)^0,w,c
  3211   003034  E106               	bnz	u5481
  3212   003036  0413               	decf	abs@a^0,w,c
  3213   003038  B0D8               	btfsc	status,0,c
  3214   00303A  EF21  F018         	goto	u5481
  3215   00303E  EF23  F018         	goto	u5480
  3216   003042                     u5481:
  3217   003042  EF31  F018         	goto	l1728
  3218   003046                     u5480:
  3219   003046  C013  F015         	movff	abs@a,??_abs
  3220   00304A  C014  F016         	movff	abs@a+1,??_abs+1
  3221   00304E  1E15               	comf	??_abs^0,f,c
  3222   003050  1E16               	comf	(??_abs+1)^0,f,c
  3223   003052  4A15               	infsnz	??_abs^0,f,c
  3224   003054  2A16               	incf	(??_abs+1)^0,f,c
  3225   003056  C015  F013         	movff	??_abs,?_abs
  3226   00305A  C016  F014         	movff	??_abs+1,?_abs+1
  3227   00305E  EF35  F018         	goto	l1731
  3228   003062                     l1728:
  3229   003062  C013  F013         	movff	abs@a,?_abs
  3230   003066  C014  F014         	movff	abs@a+1,?_abs+1
  3231   00306A                     l1731:
  3232   00306A  0012               	return		;funcret
  3233   00306C                     __end_of_abs:
  3234                           	callstack 0
  3235                           
  3236 ;; *************** function ___awmod *****************
  3237 ;; Defined at:
  3238 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\awmod.c"
  3239 ;; Parameters:    Size  Location     Type
  3240 ;;  dividend        2   12[COMRAM] int 
  3241 ;;  divisor         2   14[COMRAM] int 
  3242 ;; Auto vars:     Size  Location     Type
  3243 ;;  sign            1   17[COMRAM] unsigned char 
  3244 ;;  counter         1   16[COMRAM] unsigned char 
  3245 ;; Return value:  Size  Location     Type
  3246 ;;                  2   12[COMRAM] int 
  3247 ;; Registers used:
  3248 ;;		wreg, status,2, status,0
  3249 ;; Tracked objects:
  3250 ;;		On entry : 0/0
  3251 ;;		On exit  : 0/0
  3252 ;;		Unchanged: 0/0
  3253 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3254 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3255 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3256 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3257 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3258 ;;Total ram usage:        6 bytes
  3259 ;; Hardware stack levels used: 1
  3260 ;; Hardware stack levels required when called: 4
  3261 ;; This function calls:
  3262 ;;		Nothing
  3263 ;; This function is called by:
  3264 ;;		_dtoa
  3265 ;; This function uses a non-reentrant model
  3266 ;;
  3267                           
  3268                           	psect	text17
  3269   002826                     __ptext17:
  3270                           	callstack 0
  3271   002826                     ___awmod:
  3272                           	callstack 21
  3273   002826  0E00               	movlw	0
  3274   002828  6E12               	movwf	___awmod@sign^0,c
  3275   00282A  BE0E               	btfsc	(___awmod@dividend+1)^0,7,c
  3276   00282C  EF1C  F014         	goto	u5400
  3277   002830  EF1A  F014         	goto	u5401
  3278   002834                     u5401:
  3279   002834  EF22  F014         	goto	l6106
  3280   002838                     u5400:
  3281   002838  6C0D               	negf	___awmod@dividend^0,c
  3282   00283A  1E0E               	comf	(___awmod@dividend+1)^0,f,c
  3283   00283C  B0D8               	btfsc	status,0,c
  3284   00283E  2A0E               	incf	(___awmod@dividend+1)^0,f,c
  3285   002840  0E01               	movlw	1
  3286   002842  6E12               	movwf	___awmod@sign^0,c
  3287   002844                     l6106:
  3288   002844  BE10               	btfsc	(___awmod@divisor+1)^0,7,c
  3289   002846  EF29  F014         	goto	u5410
  3290   00284A  EF27  F014         	goto	u5411
  3291   00284E                     u5411:
  3292   00284E  EF2D  F014         	goto	l6110
  3293   002852                     u5410:
  3294   002852  6C0F               	negf	___awmod@divisor^0,c
  3295   002854  1E10               	comf	(___awmod@divisor+1)^0,f,c
  3296   002856  B0D8               	btfsc	status,0,c
  3297   002858  2A10               	incf	(___awmod@divisor+1)^0,f,c
  3298   00285A                     l6110:
  3299   00285A  500F               	movf	___awmod@divisor^0,w,c
  3300   00285C  1010               	iorwf	(___awmod@divisor+1)^0,w,c
  3301   00285E  B4D8               	btfsc	status,2,c
  3302   002860  EF34  F014         	goto	u5421
  3303   002864  EF36  F014         	goto	u5420
  3304   002868                     u5421:
  3305   002868  EF5A  F014         	goto	l6126
  3306   00286C                     u5420:
  3307   00286C  0E01               	movlw	1
  3308   00286E  6E11               	movwf	___awmod@counter^0,c
  3309   002870  EF3E  F014         	goto	l6116
  3310   002874                     l6114:
  3311   002874  90D8               	bcf	status,0,c
  3312   002876  360F               	rlcf	___awmod@divisor^0,f,c
  3313   002878  3610               	rlcf	(___awmod@divisor+1)^0,f,c
  3314   00287A  2A11               	incf	___awmod@counter^0,f,c
  3315   00287C                     l6116:
  3316   00287C  AE10               	btfss	(___awmod@divisor+1)^0,7,c
  3317   00287E  EF43  F014         	goto	u5431
  3318   002882  EF45  F014         	goto	u5430
  3319   002886                     u5431:
  3320   002886  EF3A  F014         	goto	l6114
  3321   00288A                     u5430:
  3322   00288A                     l6118:
  3323   00288A  500F               	movf	___awmod@divisor^0,w,c
  3324   00288C  5C0D               	subwf	___awmod@dividend^0,w,c
  3325   00288E  5010               	movf	(___awmod@divisor+1)^0,w,c
  3326   002890  580E               	subwfb	(___awmod@dividend+1)^0,w,c
  3327   002892  A0D8               	btfss	status,0,c
  3328   002894  EF4E  F014         	goto	u5441
  3329   002898  EF50  F014         	goto	u5440
  3330   00289C                     u5441:
  3331   00289C  EF54  F014         	goto	l6122
  3332   0028A0                     u5440:
  3333   0028A0  500F               	movf	___awmod@divisor^0,w,c
  3334   0028A2  5E0D               	subwf	___awmod@dividend^0,f,c
  3335   0028A4  5010               	movf	(___awmod@divisor+1)^0,w,c
  3336   0028A6  5A0E               	subwfb	(___awmod@dividend+1)^0,f,c
  3337   0028A8                     l6122:
  3338   0028A8  90D8               	bcf	status,0,c
  3339   0028AA  3210               	rrcf	(___awmod@divisor+1)^0,f,c
  3340   0028AC  320F               	rrcf	___awmod@divisor^0,f,c
  3341   0028AE  2E11               	decfsz	___awmod@counter^0,f,c
  3342   0028B0  EF45  F014         	goto	l6118
  3343   0028B4                     l6126:
  3344   0028B4  5012               	movf	___awmod@sign^0,w,c
  3345   0028B6  B4D8               	btfsc	status,2,c
  3346   0028B8  EF60  F014         	goto	u5451
  3347   0028BC  EF62  F014         	goto	u5450
  3348   0028C0                     u5451:
  3349   0028C0  EF66  F014         	goto	l6130
  3350   0028C4                     u5450:
  3351   0028C4  6C0D               	negf	___awmod@dividend^0,c
  3352   0028C6  1E0E               	comf	(___awmod@dividend+1)^0,f,c
  3353   0028C8  B0D8               	btfsc	status,0,c
  3354   0028CA  2A0E               	incf	(___awmod@dividend+1)^0,f,c
  3355   0028CC                     l6130:
  3356   0028CC  C00D  F00D         	movff	___awmod@dividend,?___awmod
  3357   0028D0  C00E  F00E         	movff	___awmod@dividend+1,?___awmod+1
  3358   0028D4  0012               	return		;funcret
  3359   0028D6                     __end_of___awmod:
  3360                           	callstack 0
  3361                           
  3362 ;; *************** function ___awdiv *****************
  3363 ;; Defined at:
  3364 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\awdiv.c"
  3365 ;; Parameters:    Size  Location     Type
  3366 ;;  dividend        2   12[COMRAM] int 
  3367 ;;  divisor         2   14[COMRAM] int 
  3368 ;; Auto vars:     Size  Location     Type
  3369 ;;  quotient        2   18[COMRAM] int 
  3370 ;;  sign            1   17[COMRAM] unsigned char 
  3371 ;;  counter         1   16[COMRAM] unsigned char 
  3372 ;; Return value:  Size  Location     Type
  3373 ;;                  2   12[COMRAM] int 
  3374 ;; Registers used:
  3375 ;;		wreg, status,2, status,0
  3376 ;; Tracked objects:
  3377 ;;		On entry : 0/0
  3378 ;;		On exit  : 0/0
  3379 ;;		Unchanged: 0/0
  3380 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3381 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3382 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3383 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3384 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3385 ;;Total ram usage:        8 bytes
  3386 ;; Hardware stack levels used: 1
  3387 ;; Hardware stack levels required when called: 4
  3388 ;; This function calls:
  3389 ;;		Nothing
  3390 ;; This function is called by:
  3391 ;;		_dtoa
  3392 ;; This function uses a non-reentrant model
  3393 ;;
  3394                           
  3395                           	psect	text18
  3396   0026A6                     __ptext18:
  3397                           	callstack 0
  3398   0026A6                     ___awdiv:
  3399                           	callstack 21
  3400   0026A6  0E00               	movlw	0
  3401   0026A8  6E12               	movwf	___awdiv@sign^0,c
  3402   0026AA  BE10               	btfsc	(___awdiv@divisor+1)^0,7,c
  3403   0026AC  EF5C  F013         	goto	u5340
  3404   0026B0  EF5A  F013         	goto	u5341
  3405   0026B4                     u5341:
  3406   0026B4  EF62  F013         	goto	l6062
  3407   0026B8                     u5340:
  3408   0026B8  6C0F               	negf	___awdiv@divisor^0,c
  3409   0026BA  1E10               	comf	(___awdiv@divisor+1)^0,f,c
  3410   0026BC  B0D8               	btfsc	status,0,c
  3411   0026BE  2A10               	incf	(___awdiv@divisor+1)^0,f,c
  3412   0026C0  0E01               	movlw	1
  3413   0026C2  6E12               	movwf	___awdiv@sign^0,c
  3414   0026C4                     l6062:
  3415   0026C4  BE0E               	btfsc	(___awdiv@dividend+1)^0,7,c
  3416   0026C6  EF69  F013         	goto	u5350
  3417   0026CA  EF67  F013         	goto	u5351
  3418   0026CE                     u5351:
  3419   0026CE  EF6F  F013         	goto	l6068
  3420   0026D2                     u5350:
  3421   0026D2  6C0D               	negf	___awdiv@dividend^0,c
  3422   0026D4  1E0E               	comf	(___awdiv@dividend+1)^0,f,c
  3423   0026D6  B0D8               	btfsc	status,0,c
  3424   0026D8  2A0E               	incf	(___awdiv@dividend+1)^0,f,c
  3425   0026DA  0E01               	movlw	1
  3426   0026DC  1A12               	xorwf	___awdiv@sign^0,f,c
  3427   0026DE                     l6068:
  3428   0026DE  0E00               	movlw	0
  3429   0026E0  6E14               	movwf	(___awdiv@quotient+1)^0,c
  3430   0026E2  0E00               	movlw	0
  3431   0026E4  6E13               	movwf	___awdiv@quotient^0,c
  3432   0026E6  500F               	movf	___awdiv@divisor^0,w,c
  3433   0026E8  1010               	iorwf	(___awdiv@divisor+1)^0,w,c
  3434   0026EA  B4D8               	btfsc	status,2,c
  3435   0026EC  EF7A  F013         	goto	u5361
  3436   0026F0  EF7C  F013         	goto	u5360
  3437   0026F4                     u5361:
  3438   0026F4  EFA4  F013         	goto	l6090
  3439   0026F8                     u5360:
  3440   0026F8  0E01               	movlw	1
  3441   0026FA  6E11               	movwf	___awdiv@counter^0,c
  3442   0026FC  EF84  F013         	goto	l6076
  3443   002700                     l6074:
  3444   002700  90D8               	bcf	status,0,c
  3445   002702  360F               	rlcf	___awdiv@divisor^0,f,c
  3446   002704  3610               	rlcf	(___awdiv@divisor+1)^0,f,c
  3447   002706  2A11               	incf	___awdiv@counter^0,f,c
  3448   002708                     l6076:
  3449   002708  AE10               	btfss	(___awdiv@divisor+1)^0,7,c
  3450   00270A  EF89  F013         	goto	u5371
  3451   00270E  EF8B  F013         	goto	u5370
  3452   002712                     u5371:
  3453   002712  EF80  F013         	goto	l6074
  3454   002716                     u5370:
  3455   002716                     l6078:
  3456   002716  90D8               	bcf	status,0,c
  3457   002718  3613               	rlcf	___awdiv@quotient^0,f,c
  3458   00271A  3614               	rlcf	(___awdiv@quotient+1)^0,f,c
  3459   00271C  500F               	movf	___awdiv@divisor^0,w,c
  3460   00271E  5C0D               	subwf	___awdiv@dividend^0,w,c
  3461   002720  5010               	movf	(___awdiv@divisor+1)^0,w,c
  3462   002722  580E               	subwfb	(___awdiv@dividend+1)^0,w,c
  3463   002724  A0D8               	btfss	status,0,c
  3464   002726  EF97  F013         	goto	u5381
  3465   00272A  EF99  F013         	goto	u5380
  3466   00272E                     u5381:
  3467   00272E  EF9E  F013         	goto	l6086
  3468   002732                     u5380:
  3469   002732  500F               	movf	___awdiv@divisor^0,w,c
  3470   002734  5E0D               	subwf	___awdiv@dividend^0,f,c
  3471   002736  5010               	movf	(___awdiv@divisor+1)^0,w,c
  3472   002738  5A0E               	subwfb	(___awdiv@dividend+1)^0,f,c
  3473   00273A  8013               	bsf	___awdiv@quotient^0,0,c
  3474   00273C                     l6086:
  3475   00273C  90D8               	bcf	status,0,c
  3476   00273E  3210               	rrcf	(___awdiv@divisor+1)^0,f,c
  3477   002740  320F               	rrcf	___awdiv@divisor^0,f,c
  3478   002742  2E11               	decfsz	___awdiv@counter^0,f,c
  3479   002744  EF8B  F013         	goto	l6078
  3480   002748                     l6090:
  3481   002748  5012               	movf	___awdiv@sign^0,w,c
  3482   00274A  B4D8               	btfsc	status,2,c
  3483   00274C  EFAA  F013         	goto	u5391
  3484   002750  EFAC  F013         	goto	u5390
  3485   002754                     u5391:
  3486   002754  EFB0  F013         	goto	l6094
  3487   002758                     u5390:
  3488   002758  6C13               	negf	___awdiv@quotient^0,c
  3489   00275A  1E14               	comf	(___awdiv@quotient+1)^0,f,c
  3490   00275C  B0D8               	btfsc	status,0,c
  3491   00275E  2A14               	incf	(___awdiv@quotient+1)^0,f,c
  3492   002760                     l6094:
  3493   002760  C013  F00D         	movff	___awdiv@quotient,?___awdiv
  3494   002764  C014  F00E         	movff	___awdiv@quotient+1,?___awdiv+1
  3495   002768  0012               	return		;funcret
  3496   00276A                     __end_of___awdiv:
  3497                           	callstack 0
  3498                           
  3499 ;; *************** function _memset *****************
  3500 ;; Defined at:
  3501 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\memset.c"
  3502 ;; Parameters:    Size  Location     Type
  3503 ;;  dest            2   12[COMRAM] PTR void 
  3504 ;;		 -> adc_rss_txt_2(6), adc_rss_txt_1(6), 
  3505 ;;  c               2   14[COMRAM] int 
  3506 ;;  n               2   16[COMRAM] unsigned int 
  3507 ;; Auto vars:     Size  Location     Type
  3508 ;;  s               2   22[COMRAM] PTR unsigned char 
  3509 ;;		 -> adc_rss_txt_2(6), adc_rss_txt_1(6), 
  3510 ;;  k               2   20[COMRAM] unsigned int 
  3511 ;; Return value:  Size  Location     Type
  3512 ;;                  2   12[COMRAM] PTR void 
  3513 ;; Registers used:
  3514 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  3515 ;; Tracked objects:
  3516 ;;		On entry : 0/0
  3517 ;;		On exit  : 0/0
  3518 ;;		Unchanged: 0/0
  3519 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3520 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3521 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3522 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3523 ;;      Totals:        12       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3524 ;;Total ram usage:       12 bytes
  3525 ;; Hardware stack levels used: 1
  3526 ;; Hardware stack levels required when called: 4
  3527 ;; This function calls:
  3528 ;;		Nothing
  3529 ;; This function is called by:
  3530 ;;		_convert_uint16_to_string
  3531 ;;		_convert_uint8_to_string
  3532 ;;		_convert_uint32_to_string
  3533 ;; This function uses a non-reentrant model
  3534 ;;
  3535                           
  3536                           	psect	text19
  3537   001CE6                     __ptext19:
  3538                           	callstack 0
  3539   001CE6                     _memset:
  3540                           	callstack 25
  3541   001CE6  C00D  F017         	movff	memset@dest,memset@s
  3542   001CEA  C00E  F018         	movff	memset@dest+1,memset@s+1
  3543   001CEE  5011               	movf	memset@n^0,w,c
  3544   001CF0  1012               	iorwf	(memset@n+1)^0,w,c
  3545   001CF2  A4D8               	btfss	status,2,c
  3546   001CF4  EF7E  F00E         	goto	u5631
  3547   001CF8  EF80  F00E         	goto	u5630
  3548   001CFC                     u5631:
  3549   001CFC  EF82  F00E         	goto	l6246
  3550   001D00                     u5630:
  3551   001D00  EF2D  F00F         	goto	l1653
  3552   001D04                     l6246:
  3553   001D04  C017  FFD9         	movff	memset@s,fsr2l
  3554   001D08  C018  FFDA         	movff	memset@s+1,fsr2h
  3555   001D0C  C00F  FFDF         	movff	memset@c,indf2
  3556   001D10  5011               	movf	memset@n^0,w,c
  3557   001D12  2417               	addwf	memset@s^0,w,c
  3558   001D14  6E13               	movwf	??_memset^0,c
  3559   001D16  5012               	movf	(memset@n+1)^0,w,c
  3560   001D18  2018               	addwfc	(memset@s+1)^0,w,c
  3561   001D1A  6E14               	movwf	(??_memset+1)^0,c
  3562   001D1C  0EFF               	movlw	255
  3563   001D1E  2413               	addwf	??_memset^0,w,c
  3564   001D20  6ED9               	movwf	fsr2l,c
  3565   001D22  0EFF               	movlw	255
  3566   001D24  2014               	addwfc	(??_memset+1)^0,w,c
  3567   001D26  6EDA               	movwf	fsr2h,c
  3568   001D28  C00F  FFDF         	movff	memset@c,indf2
  3569   001D2C  5012               	movf	(memset@n+1)^0,w,c
  3570   001D2E  E107               	bnz	u5641
  3571   001D30  0E03               	movlw	3
  3572   001D32  5C11               	subwf	memset@n^0,w,c
  3573   001D34  B0D8               	btfsc	status,0,c
  3574   001D36  EF9F  F00E         	goto	u5641
  3575   001D3A  EFA1  F00E         	goto	u5640
  3576   001D3E                     u5641:
  3577   001D3E  EFA3  F00E         	goto	l6252
  3578   001D42                     u5640:
  3579   001D42  EF2D  F00F         	goto	l1653
  3580   001D46                     l6252:
  3581   001D46  EE20 F001          	lfsr	2,1
  3582   001D4A  5017               	movf	memset@s^0,w,c
  3583   001D4C  26D9               	addwf	fsr2l,f,c
  3584   001D4E  5018               	movf	(memset@s+1)^0,w,c
  3585   001D50  22DA               	addwfc	fsr2h,f,c
  3586   001D52  C00F  FFDF         	movff	memset@c,indf2
  3587   001D56  EE20 F002          	lfsr	2,2
  3588   001D5A  5017               	movf	memset@s^0,w,c
  3589   001D5C  26D9               	addwf	fsr2l,f,c
  3590   001D5E  5018               	movf	(memset@s+1)^0,w,c
  3591   001D60  22DA               	addwfc	fsr2h,f,c
  3592   001D62  C00F  FFDF         	movff	memset@c,indf2
  3593   001D66  5011               	movf	memset@n^0,w,c
  3594   001D68  2417               	addwf	memset@s^0,w,c
  3595   001D6A  6E13               	movwf	??_memset^0,c
  3596   001D6C  5012               	movf	(memset@n+1)^0,w,c
  3597   001D6E  2018               	addwfc	(memset@s+1)^0,w,c
  3598   001D70  6E14               	movwf	(??_memset+1)^0,c
  3599   001D72  0EFE               	movlw	254
  3600   001D74  2413               	addwf	??_memset^0,w,c
  3601   001D76  6ED9               	movwf	fsr2l,c
  3602   001D78  0EFF               	movlw	255
  3603   001D7A  2014               	addwfc	(??_memset+1)^0,w,c
  3604   001D7C  6EDA               	movwf	fsr2h,c
  3605   001D7E  C00F  FFDF         	movff	memset@c,indf2
  3606   001D82  5011               	movf	memset@n^0,w,c
  3607   001D84  2417               	addwf	memset@s^0,w,c
  3608   001D86  6E13               	movwf	??_memset^0,c
  3609   001D88  5012               	movf	(memset@n+1)^0,w,c
  3610   001D8A  2018               	addwfc	(memset@s+1)^0,w,c
  3611   001D8C  6E14               	movwf	(??_memset+1)^0,c
  3612   001D8E  0EFD               	movlw	253
  3613   001D90  2413               	addwf	??_memset^0,w,c
  3614   001D92  6ED9               	movwf	fsr2l,c
  3615   001D94  0EFF               	movlw	255
  3616   001D96  2014               	addwfc	(??_memset+1)^0,w,c
  3617   001D98  6EDA               	movwf	fsr2h,c
  3618   001D9A  C00F  FFDF         	movff	memset@c,indf2
  3619   001D9E  5012               	movf	(memset@n+1)^0,w,c
  3620   001DA0  E107               	bnz	u5651
  3621   001DA2  0E07               	movlw	7
  3622   001DA4  5C11               	subwf	memset@n^0,w,c
  3623   001DA6  B0D8               	btfsc	status,0,c
  3624   001DA8  EFD8  F00E         	goto	u5651
  3625   001DAC  EFDA  F00E         	goto	u5650
  3626   001DB0                     u5651:
  3627   001DB0  EFDC  F00E         	goto	l6258
  3628   001DB4                     u5650:
  3629   001DB4  EF2D  F00F         	goto	l1653
  3630   001DB8                     l6258:
  3631   001DB8  EE20 F003          	lfsr	2,3
  3632   001DBC  5017               	movf	memset@s^0,w,c
  3633   001DBE  26D9               	addwf	fsr2l,f,c
  3634   001DC0  5018               	movf	(memset@s+1)^0,w,c
  3635   001DC2  22DA               	addwfc	fsr2h,f,c
  3636   001DC4  C00F  FFDF         	movff	memset@c,indf2
  3637   001DC8  5011               	movf	memset@n^0,w,c
  3638   001DCA  2417               	addwf	memset@s^0,w,c
  3639   001DCC  6E13               	movwf	??_memset^0,c
  3640   001DCE  5012               	movf	(memset@n+1)^0,w,c
  3641   001DD0  2018               	addwfc	(memset@s+1)^0,w,c
  3642   001DD2  6E14               	movwf	(??_memset+1)^0,c
  3643   001DD4  0EFC               	movlw	252
  3644   001DD6  2413               	addwf	??_memset^0,w,c
  3645   001DD8  6ED9               	movwf	fsr2l,c
  3646   001DDA  0EFF               	movlw	255
  3647   001DDC  2014               	addwfc	(??_memset+1)^0,w,c
  3648   001DDE  6EDA               	movwf	fsr2h,c
  3649   001DE0  C00F  FFDF         	movff	memset@c,indf2
  3650   001DE4  5012               	movf	(memset@n+1)^0,w,c
  3651   001DE6  E107               	bnz	u5661
  3652   001DE8  0E09               	movlw	9
  3653   001DEA  5C11               	subwf	memset@n^0,w,c
  3654   001DEC  B0D8               	btfsc	status,0,c
  3655   001DEE  EFFB  F00E         	goto	u5661
  3656   001DF2  EFFD  F00E         	goto	u5660
  3657   001DF6                     u5661:
  3658   001DF6  EFFF  F00E         	goto	l6264
  3659   001DFA                     u5660:
  3660   001DFA  EF2D  F00F         	goto	l1653
  3661   001DFE                     l6264:
  3662   001DFE  C017  F013         	movff	memset@s,??_memset
  3663   001E02  C018  F014         	movff	memset@s+1,??_memset+1
  3664   001E06  1E13               	comf	??_memset^0,f,c
  3665   001E08  1E14               	comf	(??_memset+1)^0,f,c
  3666   001E0A  4A13               	infsnz	??_memset^0,f,c
  3667   001E0C  2A14               	incf	(??_memset+1)^0,f,c
  3668   001E0E  0E03               	movlw	3
  3669   001E10  1413               	andwf	??_memset^0,w,c
  3670   001E12  6E15               	movwf	memset@k^0,c
  3671   001E14  6A16               	clrf	(memset@k+1)^0,c
  3672   001E16  5015               	movf	memset@k^0,w,c
  3673   001E18  2617               	addwf	memset@s^0,f,c
  3674   001E1A  5016               	movf	(memset@k+1)^0,w,c
  3675   001E1C  2218               	addwfc	(memset@s+1)^0,f,c
  3676   001E1E  5015               	movf	memset@k^0,w,c
  3677   001E20  5E11               	subwf	memset@n^0,f,c
  3678   001E22  5016               	movf	(memset@k+1)^0,w,c
  3679   001E24  5A12               	subwfb	(memset@n+1)^0,f,c
  3680   001E26  0EFC               	movlw	252
  3681   001E28  1611               	andwf	memset@n^0,f,c
  3682   001E2A  0EFF               	movlw	255
  3683   001E2C  1612               	andwf	(memset@n+1)^0,f,c
  3684   001E2E  EF24  F00F         	goto	l6272
  3685   001E32                     l6266:
  3686   001E32  C017  FFD9         	movff	memset@s,fsr2l
  3687   001E36  C018  FFDA         	movff	memset@s+1,fsr2h
  3688   001E3A  C00F  FFDF         	movff	memset@c,indf2
  3689   001E3E  0611               	decf	memset@n^0,f,c
  3690   001E40  A0D8               	btfss	status,0,c
  3691   001E42  0612               	decf	(memset@n+1)^0,f,c
  3692   001E44  4A17               	infsnz	memset@s^0,f,c
  3693   001E46  2A18               	incf	(memset@s+1)^0,f,c
  3694   001E48                     l6272:
  3695   001E48  5011               	movf	memset@n^0,w,c
  3696   001E4A  1012               	iorwf	(memset@n+1)^0,w,c
  3697   001E4C  A4D8               	btfss	status,2,c
  3698   001E4E  EF2B  F00F         	goto	u5671
  3699   001E52  EF2D  F00F         	goto	u5670
  3700   001E56                     u5671:
  3701   001E56  EF19  F00F         	goto	l6266
  3702   001E5A                     u5670:
  3703   001E5A                     l1653:
  3704   001E5A  0012               	return		;funcret
  3705   001E5C                     __end_of_memset:
  3706                           	callstack 0
  3707                           
  3708 ;; *************** function _application_intialize *****************
  3709 ;; Defined at:
  3710 ;;		line 94 in file "application.c"
  3711 ;; Parameters:    Size  Location     Type
  3712 ;;		None
  3713 ;; Auto vars:     Size  Location     Type
  3714 ;;  ret             1    0        unsigned char 
  3715 ;; Return value:  Size  Location     Type
  3716 ;;                  1    wreg      void 
  3717 ;; Registers used:
  3718 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  3719 ;; Tracked objects:
  3720 ;;		On entry : 0/0
  3721 ;;		On exit  : 0/0
  3722 ;;		Unchanged: 0/0
  3723 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3724 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3725 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3726 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3727 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3728 ;;Total ram usage:        0 bytes
  3729 ;; Hardware stack levels used: 1
  3730 ;; Hardware stack levels required when called: 9
  3731 ;; This function calls:
  3732 ;;		_ADC_INIT
  3733 ;;		_ecu_layer_intialize
  3734 ;; This function is called by:
  3735 ;;		_main
  3736 ;; This function uses a non-reentrant model
  3737 ;;
  3738                           
  3739                           	psect	text20
  3740   00328E                     __ptext20:
  3741                           	callstack 0
  3742   00328E                     _application_intialize:
  3743                           	callstack 21
  3744   00328E  0EB0               	movlw	low _adc1
  3745   003290  6E11               	movwf	ADC_INIT@adc^0,c
  3746   003292  0E00               	movlw	high _adc1
  3747   003294  6E12               	movwf	(ADC_INIT@adc+1)^0,c
  3748   003296  ECBF  F014         	call	_ADC_INIT	;wreg free
  3749   00329A                     
  3750                           ;application.c: 97:     ecu_layer_intialize();
  3751   00329A  ECF3  F018         	call	_ecu_layer_intialize	;wreg free
  3752   00329E  0012               	return		;funcret
  3753   0032A0                     __end_of_application_intialize:
  3754                           	callstack 0
  3755                           
  3756 ;; *************** function _ecu_layer_intialize *****************
  3757 ;; Defined at:
  3758 ;;		line 111 in file "ECU_Layer/ecu_layer_init.c"
  3759 ;; Parameters:    Size  Location     Type
  3760 ;;		None
  3761 ;; Auto vars:     Size  Location     Type
  3762 ;;  ret             1    0        unsigned char 
  3763 ;; Return value:  Size  Location     Type
  3764 ;;                  1    wreg      void 
  3765 ;; Registers used:
  3766 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  3767 ;; Tracked objects:
  3768 ;;		On entry : 0/0
  3769 ;;		On exit  : 0/0
  3770 ;;		Unchanged: 0/0
  3771 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3772 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3773 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3774 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3775 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3776 ;;Total ram usage:        0 bytes
  3777 ;; Hardware stack levels used: 1
  3778 ;; Hardware stack levels required when called: 8
  3779 ;; This function calls:
  3780 ;;		_dc_motor_initialize
  3781 ;;		_lcd_8bit_intialize
  3782 ;; This function is called by:
  3783 ;;		_application_intialize
  3784 ;; This function uses a non-reentrant model
  3785 ;;
  3786                           
  3787                           	psect	text21
  3788   0031E6                     __ptext21:
  3789                           	callstack 0
  3790   0031E6                     _ecu_layer_intialize:
  3791                           	callstack 21
  3792   0031E6  0EA6               	movlw	low _lcd
  3793   0031E8  6E23               	movwf	lcd_8bit_intialize@lcd^0,c
  3794   0031EA  0E00               	movlw	high _lcd
  3795   0031EC  6E24               	movwf	(lcd_8bit_intialize@lcd+1)^0,c
  3796   0031EE  EC66  F010         	call	_lcd_8bit_intialize	;wreg free
  3797   0031F2  0EB9               	movlw	low _dc_motor_1
  3798   0031F4  6E1B               	movwf	dc_motor_initialize@_dc_motor^0,c
  3799   0031F6  0E00               	movlw	high _dc_motor_1
  3800   0031F8  6E1C               	movwf	(dc_motor_initialize@_dc_motor+1)^0,c
  3801   0031FA  EC36  F018         	call	_dc_motor_initialize	;wreg free
  3802   0031FE  0EB7               	movlw	low _dc_motor_2
  3803   003200  6E1B               	movwf	dc_motor_initialize@_dc_motor^0,c
  3804   003202  0E00               	movlw	high _dc_motor_2
  3805   003204  6E1C               	movwf	(dc_motor_initialize@_dc_motor+1)^0,c
  3806   003206  EC36  F018         	call	_dc_motor_initialize	;wreg free
  3807   00320A  0012               	return		;funcret
  3808   00320C                     __end_of_ecu_layer_intialize:
  3809                           	callstack 0
  3810                           
  3811 ;; *************** function _lcd_8bit_intialize *****************
  3812 ;; Defined at:
  3813 ;;		line 212 in file "ECU_Layer/Chr_LCD/ecu_chr_lcd.c"
  3814 ;; Parameters:    Size  Location     Type
  3815 ;;  lcd             2   34[COMRAM] PTR const struct .
  3816 ;;		 -> lcd(10), 
  3817 ;; Auto vars:     Size  Location     Type
  3818 ;;  ret             1   39[COMRAM] unsigned char 
  3819 ;;  l_data_pins_    1   38[COMRAM] unsigned char 
  3820 ;; Return value:  Size  Location     Type
  3821 ;;                  1    wreg      unsigned char 
  3822 ;; Registers used:
  3823 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  3824 ;; Tracked objects:
  3825 ;;		On entry : 0/0
  3826 ;;		On exit  : 0/0
  3827 ;;		Unchanged: 0/0
  3828 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3829 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3830 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3831 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3832 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3833 ;;Total ram usage:        6 bytes
  3834 ;; Hardware stack levels used: 1
  3835 ;; Hardware stack levels required when called: 7
  3836 ;; This function calls:
  3837 ;;		_gpio_pin_intialize
  3838 ;;		_lcd_8bit_send_command
  3839 ;; This function is called by:
  3840 ;;		_ecu_layer_intialize
  3841 ;; This function uses a non-reentrant model
  3842 ;;
  3843                           
  3844                           	psect	text22
  3845   0020CC                     __ptext22:
  3846                           	callstack 0
  3847   0020CC                     _lcd_8bit_intialize:
  3848                           	callstack 21
  3849   0020CC                     
  3850                           ;ECU_Layer/Chr_LCD/ecu_chr_lcd.c: 214:     uint8 l_data_pins_counter = 0;
  3851   0020CC  0E00               	movlw	0
  3852   0020CE  6E27               	movwf	lcd_8bit_intialize@l_data_pins_counter^0,c
  3853   0020D0                     
  3854                           ;ECU_Layer/Chr_LCD/ecu_chr_lcd.c: 215:     if(((void*)0) == lcd){
  3855   0020D0  5023               	movf	lcd_8bit_intialize@lcd^0,w,c
  3856   0020D2  1024               	iorwf	(lcd_8bit_intialize@lcd+1)^0,w,c
  3857   0020D4  A4D8               	btfss	status,2,c
  3858   0020D6  EF6F  F010         	goto	u3231
  3859   0020DA  EF71  F010         	goto	u3230
  3860   0020DE                     u3231:
  3861   0020DE  EF75  F010         	goto	l4246
  3862   0020E2                     u3230:
  3863   0020E2                     
  3864                           ;ECU_Layer/Chr_LCD/ecu_chr_lcd.c: 216:         ret = (Std_ReturnType)0x00;
  3865   0020E2  0E00               	movlw	0
  3866   0020E4  6E28               	movwf	lcd_8bit_intialize@ret^0,c
  3867                           
  3868                           ;ECU_Layer/Chr_LCD/ecu_chr_lcd.c: 217:     }
  3869   0020E6  EFFA  F010         	goto	l4282
  3870   0020EA                     l4246:
  3871                           
  3872                           ;ECU_Layer/Chr_LCD/ecu_chr_lcd.c: 219:         ret = gpio_pin_intialize(&(lcd->lcd_rs));
  3873   0020EA  C023  F017         	movff	lcd_8bit_intialize@lcd,gpio_pin_intialize@_pin_config
  3874   0020EE  C024  F018         	movff	lcd_8bit_intialize@lcd+1,gpio_pin_intialize@_pin_config+1
  3875   0020F2  EC06  F017         	call	_gpio_pin_intialize	;wreg free
  3876   0020F6  6E28               	movwf	lcd_8bit_intialize@ret^0,c
  3877                           
  3878                           ;ECU_Layer/Chr_LCD/ecu_chr_lcd.c: 220:         ret = gpio_pin_intialize(&(lcd->lcd_en));
  3879   0020F8  0E01               	movlw	1
  3880   0020FA  2423               	addwf	lcd_8bit_intialize@lcd^0,w,c
  3881   0020FC  6E17               	movwf	gpio_pin_intialize@_pin_config^0,c
  3882   0020FE  0E00               	movlw	0
  3883   002100  2024               	addwfc	(lcd_8bit_intialize@lcd+1)^0,w,c
  3884   002102  6E18               	movwf	(gpio_pin_intialize@_pin_config+1)^0,c
  3885   002104  EC06  F017         	call	_gpio_pin_intialize	;wreg free
  3886   002108  6E28               	movwf	lcd_8bit_intialize@ret^0,c
  3887   00210A                     
  3888                           ;ECU_Layer/Chr_LCD/ecu_chr_lcd.c: 221:         for(l_data_pins_counter=0; l_data_pins_co
      +                          unter<8; l_data_pins_counter++){
  3889   00210A  0E00               	movlw	0
  3890   00210C  6E27               	movwf	lcd_8bit_intialize@l_data_pins_counter^0,c
  3891   00210E                     l4254:
  3892   00210E  5027               	movf	lcd_8bit_intialize@l_data_pins_counter^0,w,c
  3893   002110  2423               	addwf	lcd_8bit_intialize@lcd^0,w,c
  3894   002112  6E25               	movwf	??_lcd_8bit_intialize^0,c
  3895   002114  0E00               	movlw	0
  3896   002116  2024               	addwfc	(lcd_8bit_intialize@lcd+1)^0,w,c
  3897   002118  6E26               	movwf	(??_lcd_8bit_intialize+1)^0,c
  3898   00211A  0E02               	movlw	2
  3899   00211C  2425               	addwf	??_lcd_8bit_intialize^0,w,c
  3900   00211E  6E17               	movwf	gpio_pin_intialize@_pin_config^0,c
  3901   002120  0E00               	movlw	0
  3902   002122  2026               	addwfc	(??_lcd_8bit_intialize+1)^0,w,c
  3903   002124  6E18               	movwf	(gpio_pin_intialize@_pin_config+1)^0,c
  3904   002126  EC06  F017         	call	_gpio_pin_intialize	;wreg free
  3905   00212A                     
  3906                           ;ECU_Layer/Chr_LCD/ecu_chr_lcd.c: 223:         }
  3907   00212A  2A27               	incf	lcd_8bit_intialize@l_data_pins_counter^0,f,c
  3908   00212C  0E07               	movlw	7
  3909   00212E  6427               	cpfsgt	lcd_8bit_intialize@l_data_pins_counter^0,c
  3910   002130  EF9C  F010         	goto	u3241
  3911   002134  EF9E  F010         	goto	u3240
  3912   002138                     u3241:
  3913   002138  EF87  F010         	goto	l4254
  3914   00213C                     u3240:
  3915   00213C                     
  3916                           ;ECU_Layer/Chr_LCD/ecu_chr_lcd.c: 224:         _delay((unsigned long)((20)*(4000000UL/40
      +                          00.0)));
  3917   00213C  0E1A               	movlw	26
  3918   00213E  6E25               	movwf	??_lcd_8bit_intialize^0,c
  3919   002140  0EF8               	movlw	248
  3920   002142                     u5767:
  3921   002142  2EE8               	decfsz	wreg,f,c
  3922   002144  D7FE               	bra	u5767
  3923   002146  2E25               	decfsz	??_lcd_8bit_intialize^0,f,c
  3924   002148  D7FC               	bra	u5767
  3925   00214A  D000               	nop2	
  3926   00214C  C023  F01A         	movff	lcd_8bit_intialize@lcd,lcd_8bit_send_command@lcd
  3927   002150  C024  F01B         	movff	lcd_8bit_intialize@lcd+1,lcd_8bit_send_command@lcd+1
  3928   002154  0E38               	movlw	56
  3929   002156  6E1C               	movwf	lcd_8bit_send_command@command^0,c
  3930   002158  EC58  F015         	call	_lcd_8bit_send_command	;wreg free
  3931   00215C                     
  3932                           ;ECU_Layer/Chr_LCD/ecu_chr_lcd.c: 226:         _delay((unsigned long)((5)*(4000000UL/400
      +                          0.0)));
  3933   00215C  0E07               	movlw	7
  3934   00215E  6E25               	movwf	??_lcd_8bit_intialize^0,c
  3935   002160  0E7D               	movlw	125
  3936   002162                     u5777:
  3937   002162  2EE8               	decfsz	wreg,f,c
  3938   002164  D7FE               	bra	u5777
  3939   002166  2E25               	decfsz	??_lcd_8bit_intialize^0,f,c
  3940   002168  D7FC               	bra	u5777
  3941   00216A  F000               	nop	
  3942   00216C  C023  F01A         	movff	lcd_8bit_intialize@lcd,lcd_8bit_send_command@lcd
  3943   002170  C024  F01B         	movff	lcd_8bit_intialize@lcd+1,lcd_8bit_send_command@lcd+1
  3944   002174  0E38               	movlw	56
  3945   002176  6E1C               	movwf	lcd_8bit_send_command@command^0,c
  3946   002178  EC58  F015         	call	_lcd_8bit_send_command	;wreg free
  3947   00217C                     
  3948                           ;ECU_Layer/Chr_LCD/ecu_chr_lcd.c: 228:         _delay((unsigned long)((150)*(4000000UL/4
      +                          000000.0)));
  3949   00217C  0E32               	movlw	50
  3950   00217E                     u5787:
  3951   00217E  2EE8               	decfsz	wreg,f,c
  3952   002180  D7FE               	bra	u5787
  3953   002182  C023  F01A         	movff	lcd_8bit_intialize@lcd,lcd_8bit_send_command@lcd
  3954   002186  C024  F01B         	movff	lcd_8bit_intialize@lcd+1,lcd_8bit_send_command@lcd+1
  3955   00218A  0E38               	movlw	56
  3956   00218C  6E1C               	movwf	lcd_8bit_send_command@command^0,c
  3957   00218E  EC58  F015         	call	_lcd_8bit_send_command	;wreg free
  3958   002192  C023  F01A         	movff	lcd_8bit_intialize@lcd,lcd_8bit_send_command@lcd
  3959   002196  C024  F01B         	movff	lcd_8bit_intialize@lcd+1,lcd_8bit_send_command@lcd+1
  3960   00219A  0E01               	movlw	1
  3961   00219C  6E1C               	movwf	lcd_8bit_send_command@command^0,c
  3962   00219E  EC58  F015         	call	_lcd_8bit_send_command	;wreg free
  3963   0021A2  C023  F01A         	movff	lcd_8bit_intialize@lcd,lcd_8bit_send_command@lcd
  3964   0021A6  C024  F01B         	movff	lcd_8bit_intialize@lcd+1,lcd_8bit_send_command@lcd+1
  3965   0021AA  0E02               	movlw	2
  3966   0021AC  6E1C               	movwf	lcd_8bit_send_command@command^0,c
  3967   0021AE  EC58  F015         	call	_lcd_8bit_send_command	;wreg free
  3968   0021B2  C023  F01A         	movff	lcd_8bit_intialize@lcd,lcd_8bit_send_command@lcd
  3969   0021B6  C024  F01B         	movff	lcd_8bit_intialize@lcd+1,lcd_8bit_send_command@lcd+1
  3970   0021BA  0E06               	movlw	6
  3971   0021BC  6E1C               	movwf	lcd_8bit_send_command@command^0,c
  3972   0021BE  EC58  F015         	call	_lcd_8bit_send_command	;wreg free
  3973   0021C2  C023  F01A         	movff	lcd_8bit_intialize@lcd,lcd_8bit_send_command@lcd
  3974   0021C6  C024  F01B         	movff	lcd_8bit_intialize@lcd+1,lcd_8bit_send_command@lcd+1
  3975   0021CA  0E0C               	movlw	12
  3976   0021CC  6E1C               	movwf	lcd_8bit_send_command@command^0,c
  3977   0021CE  EC58  F015         	call	_lcd_8bit_send_command	;wreg free
  3978   0021D2  C023  F01A         	movff	lcd_8bit_intialize@lcd,lcd_8bit_send_command@lcd
  3979   0021D6  C024  F01B         	movff	lcd_8bit_intialize@lcd+1,lcd_8bit_send_command@lcd+1
  3980   0021DA  0E38               	movlw	56
  3981   0021DC  6E1C               	movwf	lcd_8bit_send_command@command^0,c
  3982   0021DE  EC58  F015         	call	_lcd_8bit_send_command	;wreg free
  3983   0021E2                     
  3984                           ;ECU_Layer/Chr_LCD/ecu_chr_lcd.c: 236:         ret = lcd_8bit_send_command(lcd, 0x80);
  3985   0021E2  C023  F01A         	movff	lcd_8bit_intialize@lcd,lcd_8bit_send_command@lcd
  3986   0021E6  C024  F01B         	movff	lcd_8bit_intialize@lcd+1,lcd_8bit_send_command@lcd+1
  3987   0021EA  0E80               	movlw	128
  3988   0021EC  6E1C               	movwf	lcd_8bit_send_command@command^0,c
  3989   0021EE  EC58  F015         	call	_lcd_8bit_send_command	;wreg free
  3990   0021F2  6E28               	movwf	lcd_8bit_intialize@ret^0,c
  3991   0021F4                     l4282:
  3992                           
  3993                           ;ECU_Layer/Chr_LCD/ecu_chr_lcd.c: 238:     return ret;
  3994   0021F4  5028               	movf	lcd_8bit_intialize@ret^0,w,c
  3995   0021F6  0012               	return		;funcret
  3996   0021F8                     __end_of_lcd_8bit_intialize:
  3997                           	callstack 0
  3998                           
  3999 ;; *************** function _lcd_8bit_send_command *****************
  4000 ;; Defined at:
  4001 ;;		line 249 in file "ECU_Layer/Chr_LCD/ecu_chr_lcd.c"
  4002 ;; Parameters:    Size  Location     Type
  4003 ;;  lcd             2   25[COMRAM] PTR const struct .
  4004 ;;		 -> lcd(10), 
  4005 ;;  command         1   27[COMRAM] unsigned char 
  4006 ;; Auto vars:     Size  Location     Type
  4007 ;;  l_pin_counte    1   33[COMRAM] unsigned char 
  4008 ;;  ret             1   32[COMRAM] unsigned char 
  4009 ;; Return value:  Size  Location     Type
  4010 ;;                  1    wreg      unsigned char 
  4011 ;; Registers used:
  4012 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  4013 ;; Tracked objects:
  4014 ;;		On entry : 0/0
  4015 ;;		On exit  : 0/0
  4016 ;;		Unchanged: 0/0
  4017 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4018 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4019 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4020 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4021 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4022 ;;Total ram usage:        9 bytes
  4023 ;; Hardware stack levels used: 1
  4024 ;; Hardware stack levels required when called: 6
  4025 ;; This function calls:
  4026 ;;		_gpio_pin_write_logic
  4027 ;;		_lcd_8bit_send_enable_signal
  4028 ;; This function is called by:
  4029 ;;		_lcd_8bit_intialize
  4030 ;;		_lcd_8bit_set_cursor
  4031 ;;		_main
  4032 ;;		_lcd_8bit_send_custom_char
  4033 ;; This function uses a non-reentrant model
  4034 ;;
  4035                           
  4036                           	psect	text23
  4037   002AB0                     __ptext23:
  4038                           	callstack 0
  4039   002AB0                     _lcd_8bit_send_command:
  4040                           	callstack 22
  4041   002AB0                     
  4042                           ;ECU_Layer/Chr_LCD/ecu_chr_lcd.c: 251:     uint8 l_pin_counter = 0;
  4043   002AB0  0E00               	movlw	0
  4044   002AB2  6E22               	movwf	lcd_8bit_send_command@l_pin_counter^0,c
  4045   002AB4                     
  4046                           ;ECU_Layer/Chr_LCD/ecu_chr_lcd.c: 252:     if(((void*)0) == lcd){
  4047   002AB4  501A               	movf	lcd_8bit_send_command@lcd^0,w,c
  4048   002AB6  101B               	iorwf	(lcd_8bit_send_command@lcd+1)^0,w,c
  4049   002AB8  A4D8               	btfss	status,2,c
  4050   002ABA  EF61  F015         	goto	u3171
  4051   002ABE  EF63  F015         	goto	u3170
  4052   002AC2                     u3171:
  4053   002AC2  EF67  F015         	goto	l4190
  4054   002AC6                     u3170:
  4055   002AC6                     
  4056                           ;ECU_Layer/Chr_LCD/ecu_chr_lcd.c: 253:         ret = (Std_ReturnType)0x00;
  4057   002AC6  0E00               	movlw	0
  4058   002AC8  6E21               	movwf	lcd_8bit_send_command@ret^0,c
  4059                           
  4060                           ;ECU_Layer/Chr_LCD/ecu_chr_lcd.c: 254:     }
  4061   002ACA  EF9E  F015         	goto	l4206
  4062   002ACE                     l4190:
  4063   002ACE  C01A  F00D         	movff	lcd_8bit_send_command@lcd,gpio_pin_write_logic@_pin_config
  4064   002AD2  C01B  F00E         	movff	lcd_8bit_send_command@lcd+1,gpio_pin_write_logic@_pin_config+1
  4065   002AD6  0E00               	movlw	0
  4066   002AD8  6E0F               	movwf	gpio_pin_write_logic@logic^0,c
  4067   002ADA  ECFC  F010         	call	_gpio_pin_write_logic	;wreg free
  4068   002ADE                     
  4069                           ;ECU_Layer/Chr_LCD/ecu_chr_lcd.c: 260:         for(l_pin_counter=0; l_pin_counter<8; ++l
      +                          _pin_counter){
  4070   002ADE  0E00               	movlw	0
  4071   002AE0  6E22               	movwf	lcd_8bit_send_command@l_pin_counter^0,c
  4072   002AE2                     l4198:
  4073   002AE2  5022               	movf	lcd_8bit_send_command@l_pin_counter^0,w,c
  4074   002AE4  241A               	addwf	lcd_8bit_send_command@lcd^0,w,c
  4075   002AE6  6E1D               	movwf	??_lcd_8bit_send_command^0,c
  4076   002AE8  0E00               	movlw	0
  4077   002AEA  201B               	addwfc	(lcd_8bit_send_command@lcd+1)^0,w,c
  4078   002AEC  6E1E               	movwf	(??_lcd_8bit_send_command+1)^0,c
  4079   002AEE  0E02               	movlw	2
  4080   002AF0  241D               	addwf	??_lcd_8bit_send_command^0,w,c
  4081   002AF2  6E0D               	movwf	gpio_pin_write_logic@_pin_config^0,c
  4082   002AF4  0E00               	movlw	0
  4083   002AF6  201E               	addwfc	(??_lcd_8bit_send_command+1)^0,w,c
  4084   002AF8  6E0E               	movwf	(gpio_pin_write_logic@_pin_config+1)^0,c
  4085   002AFA  C022  F01F         	movff	lcd_8bit_send_command@l_pin_counter,??_lcd_8bit_send_command+2
  4086   002AFE  C01C  F020         	movff	lcd_8bit_send_command@command,??_lcd_8bit_send_command+3
  4087   002B02  2A1F               	incf	(??_lcd_8bit_send_command+2)^0,f,c
  4088   002B04  EF86  F015         	goto	u3184
  4089   002B08                     u3185:
  4090   002B08  90D8               	bcf	status,0,c
  4091   002B0A  3220               	rrcf	(??_lcd_8bit_send_command+3)^0,f,c
  4092   002B0C                     u3184:
  4093   002B0C  2E1F               	decfsz	(??_lcd_8bit_send_command+2)^0,f,c
  4094   002B0E  EF84  F015         	goto	u3185
  4095   002B12  5020               	movf	(??_lcd_8bit_send_command+3)^0,w,c
  4096   002B14  0B01               	andlw	1
  4097   002B16  6E0F               	movwf	gpio_pin_write_logic@logic^0,c
  4098   002B18  ECFC  F010         	call	_gpio_pin_write_logic	;wreg free
  4099   002B1C                     
  4100                           ;ECU_Layer/Chr_LCD/ecu_chr_lcd.c: 262:         }
  4101   002B1C  2A22               	incf	lcd_8bit_send_command@l_pin_counter^0,f,c
  4102   002B1E  0E07               	movlw	7
  4103   002B20  6422               	cpfsgt	lcd_8bit_send_command@l_pin_counter^0,c
  4104   002B22  EF95  F015         	goto	u3191
  4105   002B26  EF97  F015         	goto	u3190
  4106   002B2A                     u3191:
  4107   002B2A  EF71  F015         	goto	l4198
  4108   002B2E                     u3190:
  4109   002B2E                     
  4110                           ;ECU_Layer/Chr_LCD/ecu_chr_lcd.c: 264:         ret = lcd_8bit_send_enable_signal(lcd);
  4111   002B2E  C01A  F017         	movff	lcd_8bit_send_command@lcd,lcd_8bit_send_enable_signal@lcd
  4112   002B32  C01B  F018         	movff	lcd_8bit_send_command@lcd+1,lcd_8bit_send_enable_signal@lcd+1
  4113   002B36  EC90  F018         	call	_lcd_8bit_send_enable_signal	;wreg free
  4114   002B3A  6E21               	movwf	lcd_8bit_send_command@ret^0,c
  4115   002B3C                     l4206:
  4116                           
  4117                           ;ECU_Layer/Chr_LCD/ecu_chr_lcd.c: 266:     return ret;
  4118   002B3C  5021               	movf	lcd_8bit_send_command@ret^0,w,c
  4119   002B3E  0012               	return		;funcret
  4120   002B40                     __end_of_lcd_8bit_send_command:
  4121                           	callstack 0
  4122                           
  4123 ;; *************** function _lcd_8bit_send_enable_signal *****************
  4124 ;; Defined at:
  4125 ;;		line 496 in file "ECU_Layer/Chr_LCD/ecu_chr_lcd.c"
  4126 ;; Parameters:    Size  Location     Type
  4127 ;;  lcd             2   22[COMRAM] PTR const struct .
  4128 ;;		 -> lcd(10), 
  4129 ;; Auto vars:     Size  Location     Type
  4130 ;;  ret             1   24[COMRAM] unsigned char 
  4131 ;; Return value:  Size  Location     Type
  4132 ;;                  1    wreg      unsigned char 
  4133 ;; Registers used:
  4134 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  4135 ;; Tracked objects:
  4136 ;;		On entry : 0/0
  4137 ;;		On exit  : 0/0
  4138 ;;		Unchanged: 0/0
  4139 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4140 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4141 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4142 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4143 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4144 ;;Total ram usage:        3 bytes
  4145 ;; Hardware stack levels used: 1
  4146 ;; Hardware stack levels required when called: 5
  4147 ;; This function calls:
  4148 ;;		_gpio_pin_write_logic
  4149 ;; This function is called by:
  4150 ;;		_lcd_8bit_send_command
  4151 ;;		_lcd_8bit_send_char_data
  4152 ;; This function uses a non-reentrant model
  4153 ;;
  4154                           
  4155                           	psect	text24
  4156   003120                     __ptext24:
  4157                           	callstack 0
  4158   003120                     _lcd_8bit_send_enable_signal:
  4159                           	callstack 22
  4160   003120  0E01               	movlw	1
  4161   003122  2417               	addwf	lcd_8bit_send_enable_signal@lcd^0,w,c
  4162   003124  6E0D               	movwf	gpio_pin_write_logic@_pin_config^0,c
  4163   003126  0E00               	movlw	0
  4164   003128  2018               	addwfc	(lcd_8bit_send_enable_signal@lcd+1)^0,w,c
  4165   00312A  6E0E               	movwf	(gpio_pin_write_logic@_pin_config+1)^0,c
  4166   00312C  0E01               	movlw	1
  4167   00312E  6E0F               	movwf	gpio_pin_write_logic@logic^0,c
  4168   003130  ECFC  F010         	call	_gpio_pin_write_logic	;wreg free
  4169   003134                     
  4170                           ;ECU_Layer/Chr_LCD/ecu_chr_lcd.c: 499:     _delay((unsigned long)((5)*(4000000UL/4000000
      +                          .0)));
  4171   003134  D000               	nop2		;2 cycle nop
  4172   003136  D000               	nop2		;2 cycle nop
  4173   003138  F000               	nop	
  4174   00313A                     
  4175                           ;ECU_Layer/Chr_LCD/ecu_chr_lcd.c: 500:     ret = gpio_pin_write_logic(&(lcd->lcd_en), GP
      +                          IO_LOW);
  4176   00313A  0E01               	movlw	1
  4177   00313C  2417               	addwf	lcd_8bit_send_enable_signal@lcd^0,w,c
  4178   00313E  6E0D               	movwf	gpio_pin_write_logic@_pin_config^0,c
  4179   003140  0E00               	movlw	0
  4180   003142  2018               	addwfc	(lcd_8bit_send_enable_signal@lcd+1)^0,w,c
  4181   003144  6E0E               	movwf	(gpio_pin_write_logic@_pin_config+1)^0,c
  4182   003146  0E00               	movlw	0
  4183   003148  6E0F               	movwf	gpio_pin_write_logic@logic^0,c
  4184   00314A  ECFC  F010         	call	_gpio_pin_write_logic	;wreg free
  4185   00314E  6E19               	movwf	lcd_8bit_send_enable_signal@ret^0,c
  4186                           
  4187                           ;ECU_Layer/Chr_LCD/ecu_chr_lcd.c: 501:     return ret;
  4188   003150  5019               	movf	lcd_8bit_send_enable_signal@ret^0,w,c
  4189   003152  0012               	return		;funcret
  4190   003154                     __end_of_lcd_8bit_send_enable_signal:
  4191                           	callstack 0
  4192                           
  4193 ;; *************** function _dc_motor_initialize *****************
  4194 ;; Defined at:
  4195 ;;		line 17 in file "ECU_Layer/DC_Motor/ecu_dc_motor.c"
  4196 ;; Parameters:    Size  Location     Type
  4197 ;;  _dc_motor       2   26[COMRAM] PTR const struct .
  4198 ;;		 -> dc_motor_2(2), dc_motor_1(2), 
  4199 ;; Auto vars:     Size  Location     Type
  4200 ;;  ret             1   28[COMRAM] unsigned char 
  4201 ;; Return value:  Size  Location     Type
  4202 ;;                  1    wreg      unsigned char 
  4203 ;; Registers used:
  4204 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  4205 ;; Tracked objects:
  4206 ;;		On entry : 0/0
  4207 ;;		On exit  : 0/0
  4208 ;;		Unchanged: 0/0
  4209 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4210 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4211 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4212 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4213 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4214 ;;Total ram usage:        3 bytes
  4215 ;; Hardware stack levels used: 1
  4216 ;; Hardware stack levels required when called: 6
  4217 ;; This function calls:
  4218 ;;		_gpio_pin_intialize
  4219 ;; This function is called by:
  4220 ;;		_ecu_layer_intialize
  4221 ;; This function uses a non-reentrant model
  4222 ;;
  4223                           
  4224                           	psect	text25
  4225   00306C                     __ptext25:
  4226                           	callstack 0
  4227   00306C                     _dc_motor_initialize:
  4228                           	callstack 22
  4229   00306C                     
  4230                           ;ECU_Layer/DC_Motor/ecu_dc_motor.c: 18:     Std_ReturnType ret = (Std_ReturnType)0x01;
  4231   00306C  0E01               	movlw	1
  4232   00306E  6E1D               	movwf	dc_motor_initialize@ret^0,c
  4233   003070                     
  4234                           ;ECU_Layer/DC_Motor/ecu_dc_motor.c: 19:     if(((void*)0) == _dc_motor){
  4235   003070  501B               	movf	dc_motor_initialize@_dc_motor^0,w,c
  4236   003072  101C               	iorwf	(dc_motor_initialize@_dc_motor+1)^0,w,c
  4237   003074  A4D8               	btfss	status,2,c
  4238   003076  EF3F  F018         	goto	u3281
  4239   00307A  EF41  F018         	goto	u3280
  4240   00307E                     u3281:
  4241   00307E  EF45  F018         	goto	l4318
  4242   003082                     u3280:
  4243   003082                     
  4244                           ;ECU_Layer/DC_Motor/ecu_dc_motor.c: 20:         ret = (Std_ReturnType)0x00;
  4245   003082  0E00               	movlw	0
  4246   003084  6E1D               	movwf	dc_motor_initialize@ret^0,c
  4247                           
  4248                           ;ECU_Layer/DC_Motor/ecu_dc_motor.c: 21:     }
  4249   003086  EF53  F018         	goto	l4320
  4250   00308A                     l4318:
  4251                           
  4252                           ;ECU_Layer/DC_Motor/ecu_dc_motor.c: 23:         gpio_pin_intialize(&(_dc_motor->dc_motor
      +                          _pin[0x00U]));
  4253   00308A  C01B  F017         	movff	dc_motor_initialize@_dc_motor,gpio_pin_intialize@_pin_config
  4254   00308E  C01C  F018         	movff	dc_motor_initialize@_dc_motor+1,gpio_pin_intialize@_pin_config+1
  4255   003092  EC06  F017         	call	_gpio_pin_intialize	;wreg free
  4256                           
  4257                           ;ECU_Layer/DC_Motor/ecu_dc_motor.c: 24:         gpio_pin_intialize(&(_dc_motor->dc_motor
      +                          _pin[0x01U]));
  4258   003096  0E01               	movlw	1
  4259   003098  241B               	addwf	dc_motor_initialize@_dc_motor^0,w,c
  4260   00309A  6E17               	movwf	gpio_pin_intialize@_pin_config^0,c
  4261   00309C  0E00               	movlw	0
  4262   00309E  201C               	addwfc	(dc_motor_initialize@_dc_motor+1)^0,w,c
  4263   0030A0  6E18               	movwf	(gpio_pin_intialize@_pin_config+1)^0,c
  4264   0030A2  EC06  F017         	call	_gpio_pin_intialize	;wreg free
  4265   0030A6                     l4320:
  4266                           
  4267                           ;ECU_Layer/DC_Motor/ecu_dc_motor.c: 26:     return ret;
  4268   0030A6  501D               	movf	dc_motor_initialize@ret^0,w,c
  4269   0030A8  0012               	return		;funcret
  4270   0030AA                     __end_of_dc_motor_initialize:
  4271                           	callstack 0
  4272                           
  4273 ;; *************** function _gpio_pin_intialize *****************
  4274 ;; Defined at:
  4275 ;;		line 144 in file "MCAL_Layer/GPIO/hal_gpio.c"
  4276 ;; Parameters:    Size  Location     Type
  4277 ;;  _pin_config     2   22[COMRAM] PTR const struct .
  4278 ;;		 -> dc_motor_2.dc_motor_pin(2), dc_motor_2(2), dc_motor_1.dc_motor_pin(2), dc_motor_1(2), 
  4279 ;;		 -> lcd.lcd_data(8), lcd(10), relay_initialize@pin_obj(1), led_initialize@pin_obj(1), 
  4280 ;; Auto vars:     Size  Location     Type
  4281 ;;  ret             1   25[COMRAM] unsigned char 
  4282 ;; Return value:  Size  Location     Type
  4283 ;;                  1    wreg      unsigned char 
  4284 ;; Registers used:
  4285 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  4286 ;; Tracked objects:
  4287 ;;		On entry : 0/0
  4288 ;;		On exit  : 0/0
  4289 ;;		Unchanged: 0/0
  4290 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4291 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4292 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4293 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4294 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4295 ;;Total ram usage:        4 bytes
  4296 ;; Hardware stack levels used: 1
  4297 ;; Hardware stack levels required when called: 5
  4298 ;; This function calls:
  4299 ;;		_gpio_pin_direction_intialize
  4300 ;;		_gpio_pin_write_logic
  4301 ;; This function is called by:
  4302 ;;		_lcd_8bit_intialize
  4303 ;;		_dc_motor_initialize
  4304 ;;		_seven_segement_intialize
  4305 ;;		_lcd_4bit_intialize
  4306 ;;		_keypad_initialize
  4307 ;;		_led_initialize
  4308 ;;		_relay_initialize
  4309 ;;		_Ultrasonic_Init
  4310 ;; This function uses a non-reentrant model
  4311 ;;
  4312                           
  4313                           	psect	text26
  4314   002E0C                     __ptext26:
  4315                           	callstack 0
  4316   002E0C                     _gpio_pin_intialize:
  4317                           	callstack 22
  4318   002E0C                     
  4319                           ;MCAL_Layer/GPIO/hal_gpio.c: 146:     if(((void*)0) == _pin_config || _pin_config->pin >
      +                           8 -1){
  4320   002E0C  5017               	movf	gpio_pin_intialize@_pin_config^0,w,c
  4321   002E0E  1018               	iorwf	(gpio_pin_intialize@_pin_config+1)^0,w,c
  4322   002E10  B4D8               	btfsc	status,2,c
  4323   002E12  EF0D  F017         	goto	u3151
  4324   002E16  EF0F  F017         	goto	u3150
  4325   002E1A                     u3151:
  4326   002E1A  EF20  F017         	goto	l4176
  4327   002E1E                     u3150:
  4328   002E1E  C017  FFD9         	movff	gpio_pin_intialize@_pin_config,fsr2l
  4329   002E22  C018  FFDA         	movff	gpio_pin_intialize@_pin_config+1,fsr2h
  4330   002E26  30DF               	rrcf	223,w,c
  4331   002E28  32E8               	rrcf	wreg,f,c
  4332   002E2A  32E8               	rrcf	wreg,f,c
  4333   002E2C  0B07               	andlw	7
  4334   002E2E  6E19               	movwf	??_gpio_pin_intialize^0,c
  4335   002E30  0E07               	movlw	7
  4336   002E32  6419               	cpfsgt	??_gpio_pin_intialize^0,c
  4337   002E34  EF1E  F017         	goto	u3161
  4338   002E38  EF20  F017         	goto	u3160
  4339   002E3C                     u3161:
  4340   002E3C  EF24  F017         	goto	l4178
  4341   002E40                     u3160:
  4342   002E40                     l4176:
  4343                           
  4344                           ;MCAL_Layer/GPIO/hal_gpio.c: 147:         ret = (Std_ReturnType)0x00;
  4345   002E40  0E00               	movlw	0
  4346   002E42  6E1A               	movwf	gpio_pin_intialize@ret^0,c
  4347                           
  4348                           ;MCAL_Layer/GPIO/hal_gpio.c: 148:     }
  4349   002E44  EF3A  F017         	goto	l4180
  4350   002E48                     l4178:
  4351                           
  4352                           ;MCAL_Layer/GPIO/hal_gpio.c: 150:         ret = gpio_pin_direction_intialize(_pin_config
      +                          );
  4353   002E48  C017  F00D         	movff	gpio_pin_intialize@_pin_config,gpio_pin_direction_intialize@_pin_config
  4354   002E4C  C018  F00E         	movff	gpio_pin_intialize@_pin_config+1,gpio_pin_direction_intialize@_pin_config+1
  4355   002E50  EC2E  F00F         	call	_gpio_pin_direction_intialize	;wreg free
  4356   002E54  6E1A               	movwf	gpio_pin_intialize@ret^0,c
  4357                           
  4358                           ;MCAL_Layer/GPIO/hal_gpio.c: 151:         ret = gpio_pin_write_logic(_pin_config, _pin_c
      +                          onfig->logic);
  4359   002E56  C017  F00D         	movff	gpio_pin_intialize@_pin_config,gpio_pin_write_logic@_pin_config
  4360   002E5A  C018  F00E         	movff	gpio_pin_intialize@_pin_config+1,gpio_pin_write_logic@_pin_config+1
  4361   002E5E  C017  FFD9         	movff	gpio_pin_intialize@_pin_config,fsr2l
  4362   002E62  C018  FFDA         	movff	gpio_pin_intialize@_pin_config+1,fsr2h
  4363   002E66  0E00               	movlw	0
  4364   002E68  BEDF               	btfsc	indf2,7,c
  4365   002E6A  0E01               	movlw	1
  4366   002E6C  6E0F               	movwf	gpio_pin_write_logic@logic^0,c
  4367   002E6E  ECFC  F010         	call	_gpio_pin_write_logic	;wreg free
  4368   002E72  6E1A               	movwf	gpio_pin_intialize@ret^0,c
  4369   002E74                     l4180:
  4370                           
  4371                           ;MCAL_Layer/GPIO/hal_gpio.c: 153:     return ret;
  4372   002E74  501A               	movf	gpio_pin_intialize@ret^0,w,c
  4373   002E76  0012               	return		;funcret
  4374   002E78                     __end_of_gpio_pin_intialize:
  4375                           	callstack 0
  4376                           
  4377 ;; *************** function _gpio_pin_write_logic *****************
  4378 ;; Defined at:
  4379 ;;		line 75 in file "MCAL_Layer/GPIO/hal_gpio.c"
  4380 ;; Parameters:    Size  Location     Type
  4381 ;;  _pin_config     2   12[COMRAM] PTR const struct .
  4382 ;;		 -> dc_motor_2.dc_motor_pin(2), dc_motor_2(2), dc_motor_1.dc_motor_pin(2), dc_motor_1(2), 
  4383 ;;		 -> lcd.lcd_data(8), lcd(10), relay_turn_off@pin_obj(1), relay_turn_on@pin_obj(1), 
  4384 ;;		 -> relay_initialize@pin_obj(1), led_turn_off@pin_obj(1), led_turn_on@pin_obj(1), led_initialize@pin_obj(1), 
  4385 ;;  logic           1   14[COMRAM] enum E2968
  4386 ;; Auto vars:     Size  Location     Type
  4387 ;;  ret             1   21[COMRAM] unsigned char 
  4388 ;; Return value:  Size  Location     Type
  4389 ;;                  1    wreg      unsigned char 
  4390 ;; Registers used:
  4391 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  4392 ;; Tracked objects:
  4393 ;;		On entry : 0/0
  4394 ;;		On exit  : 0/0
  4395 ;;		Unchanged: 0/0
  4396 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4397 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4398 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4399 ;;      Temps:          6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4400 ;;      Totals:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4401 ;;Total ram usage:       10 bytes
  4402 ;; Hardware stack levels used: 1
  4403 ;; Hardware stack levels required when called: 4
  4404 ;; This function calls:
  4405 ;;		Nothing
  4406 ;; This function is called by:
  4407 ;;		_lcd_8bit_send_command
  4408 ;;		_lcd_8bit_send_char_data
  4409 ;;		_lcd_8bit_send_enable_signal
  4410 ;;		_dc_motor_move_right
  4411 ;;		_dc_motor_stop
  4412 ;;		_gpio_pin_intialize
  4413 ;;		_seven_segement_write_number
  4414 ;;		_lcd_4bit_send_command
  4415 ;;		_lcd_4bit_send_char_data
  4416 ;;		_lcd_send_4bits
  4417 ;;		_lcd_4bit_send_enable_signal
  4418 ;;		_dc_motor_move_left
  4419 ;;		_keypad_get_value
  4420 ;;		_led_turn_on
  4421 ;;		_led_turn_off
  4422 ;;		_relay_turn_on
  4423 ;;		_relay_turn_off
  4424 ;;		_Ultrasonic_Calculate_Distance
  4425 ;; This function uses a non-reentrant model
  4426 ;;
  4427                           
  4428                           	psect	text27
  4429   0021F8                     __ptext27:
  4430                           	callstack 0
  4431   0021F8                     _gpio_pin_write_logic:
  4432                           	callstack 22
  4433   0021F8                     
  4434                           ;MCAL_Layer/GPIO/hal_gpio.c: 76:     Std_ReturnType ret = (Std_ReturnType)0x01;
  4435   0021F8  0E01               	movlw	1
  4436   0021FA  6E16               	movwf	gpio_pin_write_logic@ret^0,c
  4437   0021FC                     
  4438                           ;MCAL_Layer/GPIO/hal_gpio.c: 77:     if(((void*)0) == _pin_config || _pin_config->pin > 
      +                          8 -1){
  4439   0021FC  500D               	movf	gpio_pin_write_logic@_pin_config^0,w,c
  4440   0021FE  100E               	iorwf	(gpio_pin_write_logic@_pin_config+1)^0,w,c
  4441   002200  B4D8               	btfsc	status,2,c
  4442   002202  EF05  F011         	goto	u2801
  4443   002206  EF07  F011         	goto	u2800
  4444   00220A                     u2801:
  4445   00220A  EF18  F011         	goto	l3970
  4446   00220E                     u2800:
  4447   00220E  C00D  FFD9         	movff	gpio_pin_write_logic@_pin_config,fsr2l
  4448   002212  C00E  FFDA         	movff	gpio_pin_write_logic@_pin_config+1,fsr2h
  4449   002216  30DF               	rrcf	223,w,c
  4450   002218  32E8               	rrcf	wreg,f,c
  4451   00221A  32E8               	rrcf	wreg,f,c
  4452   00221C  0B07               	andlw	7
  4453   00221E  6E10               	movwf	??_gpio_pin_write_logic^0,c
  4454   002220  0E07               	movlw	7
  4455   002222  6410               	cpfsgt	??_gpio_pin_write_logic^0,c
  4456   002224  EF16  F011         	goto	u2811
  4457   002228  EF18  F011         	goto	u2810
  4458   00222C                     u2811:
  4459   00222C  EF7B  F011         	goto	l3978
  4460   002230                     u2810:
  4461   002230                     l3970:
  4462                           
  4463                           ;MCAL_Layer/GPIO/hal_gpio.c: 78:         ret = (Std_ReturnType)0x00;
  4464   002230  0E00               	movlw	0
  4465   002232  6E16               	movwf	gpio_pin_write_logic@ret^0,c
  4466                           
  4467                           ;MCAL_Layer/GPIO/hal_gpio.c: 79:     }
  4468   002234  EF90  F011         	goto	l3980
  4469   002238                     l3972:
  4470                           
  4471                           ;MCAL_Layer/GPIO/hal_gpio.c: 83:                 (*lat_registers[_pin_config->port] &= ~
      +                          ((uint8)1 << _pin_config->pin));
  4472   002238  C00D  FFD9         	movff	gpio_pin_write_logic@_pin_config,fsr2l
  4473   00223C  C00E  FFDA         	movff	gpio_pin_write_logic@_pin_config+1,fsr2h
  4474   002240  30DF               	rrcf	223,w,c
  4475   002242  32E8               	rrcf	wreg,f,c
  4476   002244  32E8               	rrcf	wreg,f,c
  4477   002246  0B07               	andlw	7
  4478   002248  6E10               	movwf	??_gpio_pin_write_logic^0,c
  4479   00224A  0E01               	movlw	1
  4480   00224C  6E11               	movwf	(??_gpio_pin_write_logic+1)^0,c
  4481   00224E  2A10               	incf	??_gpio_pin_write_logic^0,f,c
  4482   002250  EF2C  F011         	goto	u2824
  4483   002254                     u2825:
  4484   002254  90D8               	bcf	status,0,c
  4485   002256  3611               	rlcf	(??_gpio_pin_write_logic+1)^0,f,c
  4486   002258                     u2824:
  4487   002258  2E10               	decfsz	??_gpio_pin_write_logic^0,f,c
  4488   00225A  EF2A  F011         	goto	u2825
  4489   00225E  5011               	movf	(??_gpio_pin_write_logic+1)^0,w,c
  4490   002260  0AFF               	xorlw	255
  4491   002262  6E12               	movwf	(??_gpio_pin_write_logic+2)^0,c
  4492   002264  C00D  FFD9         	movff	gpio_pin_write_logic@_pin_config,fsr2l
  4493   002268  C00E  FFDA         	movff	gpio_pin_write_logic@_pin_config+1,fsr2h
  4494   00226C  50DF               	movf	223,w,c
  4495   00226E  0B07               	andlw	7
  4496   002270  6E13               	movwf	(??_gpio_pin_write_logic+3)^0,c
  4497   002272  5013               	movf	(??_gpio_pin_write_logic+3)^0,w,c
  4498   002274  0D02               	mullw	2
  4499   002276  0E8A               	movlw	low _lat_registers
  4500   002278  24F3               	addwf	243,w,c
  4501   00227A  6ED9               	movwf	fsr2l,c
  4502   00227C  0E00               	movlw	high _lat_registers
  4503   00227E  20F4               	addwfc	prodh,w,c
  4504   002280  6EDA               	movwf	fsr2h,c
  4505   002282  CFDE F014          	movff	postinc2,??_gpio_pin_write_logic+4
  4506   002286  CFDD F015          	movff	postdec2,??_gpio_pin_write_logic+5
  4507   00228A  C014  FFD9         	movff	??_gpio_pin_write_logic+4,fsr2l
  4508   00228E  C015  FFDA         	movff	??_gpio_pin_write_logic+5,fsr2h
  4509   002292  5012               	movf	(??_gpio_pin_write_logic+2)^0,w,c
  4510   002294  16DF               	andwf	indf2,f,c
  4511                           
  4512                           ;MCAL_Layer/GPIO/hal_gpio.c: 84:                 break;
  4513   002296  EF90  F011         	goto	l3980
  4514   00229A                     l3974:
  4515                           
  4516                           ;MCAL_Layer/GPIO/hal_gpio.c: 86:                 (*lat_registers[_pin_config->port] |= (
      +                          (uint8)1 << _pin_config->pin));
  4517   00229A  C00D  FFD9         	movff	gpio_pin_write_logic@_pin_config,fsr2l
  4518   00229E  C00E  FFDA         	movff	gpio_pin_write_logic@_pin_config+1,fsr2h
  4519   0022A2  30DF               	rrcf	223,w,c
  4520   0022A4  32E8               	rrcf	wreg,f,c
  4521   0022A6  32E8               	rrcf	wreg,f,c
  4522   0022A8  0B07               	andlw	7
  4523   0022AA  6E10               	movwf	??_gpio_pin_write_logic^0,c
  4524   0022AC  0E01               	movlw	1
  4525   0022AE  6E11               	movwf	(??_gpio_pin_write_logic+1)^0,c
  4526   0022B0  2A10               	incf	??_gpio_pin_write_logic^0,f,c
  4527   0022B2  EF5D  F011         	goto	u2834
  4528   0022B6                     u2835:
  4529   0022B6  90D8               	bcf	status,0,c
  4530   0022B8  3611               	rlcf	(??_gpio_pin_write_logic+1)^0,f,c
  4531   0022BA                     u2834:
  4532   0022BA  2E10               	decfsz	??_gpio_pin_write_logic^0,f,c
  4533   0022BC  EF5B  F011         	goto	u2835
  4534   0022C0  C00D  FFD9         	movff	gpio_pin_write_logic@_pin_config,fsr2l
  4535   0022C4  C00E  FFDA         	movff	gpio_pin_write_logic@_pin_config+1,fsr2h
  4536   0022C8  50DF               	movf	223,w,c
  4537   0022CA  0B07               	andlw	7
  4538   0022CC  6E12               	movwf	(??_gpio_pin_write_logic+2)^0,c
  4539   0022CE  5012               	movf	(??_gpio_pin_write_logic+2)^0,w,c
  4540   0022D0  0D02               	mullw	2
  4541   0022D2  0E8A               	movlw	low _lat_registers
  4542   0022D4  24F3               	addwf	243,w,c
  4543   0022D6  6ED9               	movwf	fsr2l,c
  4544   0022D8  0E00               	movlw	high _lat_registers
  4545   0022DA  20F4               	addwfc	prodh,w,c
  4546   0022DC  6EDA               	movwf	fsr2h,c
  4547   0022DE  CFDE F013          	movff	postinc2,??_gpio_pin_write_logic+3
  4548   0022E2  CFDD F014          	movff	postdec2,??_gpio_pin_write_logic+4
  4549   0022E6  C013  FFD9         	movff	??_gpio_pin_write_logic+3,fsr2l
  4550   0022EA  C014  FFDA         	movff	??_gpio_pin_write_logic+4,fsr2h
  4551   0022EE  5011               	movf	(??_gpio_pin_write_logic+1)^0,w,c
  4552   0022F0  12DF               	iorwf	indf2,f,c
  4553                           
  4554                           ;MCAL_Layer/GPIO/hal_gpio.c: 87:                 break;
  4555   0022F2  EF90  F011         	goto	l3980
  4556   0022F6                     l3978:
  4557   0022F6  500F               	movf	gpio_pin_write_logic@logic^0,w,c
  4558   0022F8  6E10               	movwf	??_gpio_pin_write_logic^0,c
  4559   0022FA  6A11               	clrf	(??_gpio_pin_write_logic+1)^0,c
  4560                           
  4561                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  4562                           ; Switch size 1, requested type "simple"
  4563                           ; Number of cases is 1, Range of values is 0 to 0
  4564                           ; switch strategies available:
  4565                           ; Name         Instructions Cycles
  4566                           ; simple_byte            4     3 (average)
  4567                           ;	Chosen strategy is simple_byte
  4568   0022FC  5011               	movf	(??_gpio_pin_write_logic+1)^0,w,c
  4569   0022FE  0A00               	xorlw	0	; case 0
  4570   002300  B4D8               	btfsc	status,2,c
  4571   002302  EF85  F011         	goto	l6522
  4572   002306  EF18  F011         	goto	l3970
  4573   00230A                     l6522:
  4574                           
  4575                           ; Switch size 1, requested type "simple"
  4576                           ; Number of cases is 2, Range of values is 0 to 1
  4577                           ; switch strategies available:
  4578                           ; Name         Instructions Cycles
  4579                           ; simple_byte            7     4 (average)
  4580                           ;	Chosen strategy is simple_byte
  4581   00230A  5010               	movf	??_gpio_pin_write_logic^0,w,c
  4582   00230C  0A00               	xorlw	0	; case 0
  4583   00230E  B4D8               	btfsc	status,2,c
  4584   002310  EF1C  F011         	goto	l3972
  4585   002314  0A01               	xorlw	1	; case 1
  4586   002316  B4D8               	btfsc	status,2,c
  4587   002318  EF4D  F011         	goto	l3974
  4588   00231C  EF18  F011         	goto	l3970
  4589   002320                     l3980:
  4590                           
  4591                           ;MCAL_Layer/GPIO/hal_gpio.c: 91:     return ret;
  4592   002320  5016               	movf	gpio_pin_write_logic@ret^0,w,c
  4593   002322  0012               	return		;funcret
  4594   002324                     __end_of_gpio_pin_write_logic:
  4595                           	callstack 0
  4596                           
  4597 ;; *************** function _gpio_pin_direction_intialize *****************
  4598 ;; Defined at:
  4599 ;;		line 25 in file "MCAL_Layer/GPIO/hal_gpio.c"
  4600 ;; Parameters:    Size  Location     Type
  4601 ;;  _pin_config     2   12[COMRAM] PTR const struct .
  4602 ;;		 -> dc_motor_2.dc_motor_pin(2), dc_motor_2(2), dc_motor_1.dc_motor_pin(2), dc_motor_1(2), 
  4603 ;;		 -> lcd.lcd_data(8), lcd(10), relay_initialize@pin_obj(1), led_initialize@pin_obj(1), 
  4604 ;; Auto vars:     Size  Location     Type
  4605 ;;  ret             1   20[COMRAM] unsigned char 
  4606 ;; Return value:  Size  Location     Type
  4607 ;;                  1    wreg      unsigned char 
  4608 ;; Registers used:
  4609 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  4610 ;; Tracked objects:
  4611 ;;		On entry : 0/0
  4612 ;;		On exit  : 0/0
  4613 ;;		Unchanged: 0/0
  4614 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4615 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4616 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4617 ;;      Temps:          6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4618 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4619 ;;Total ram usage:        9 bytes
  4620 ;; Hardware stack levels used: 1
  4621 ;; Hardware stack levels required when called: 4
  4622 ;; This function calls:
  4623 ;;		Nothing
  4624 ;; This function is called by:
  4625 ;;		_gpio_pin_intialize
  4626 ;;		_button_initialize
  4627 ;;		_keypad_initialize
  4628 ;;		_Interrupt_RBx_Init
  4629 ;;		_Interrupt_INTx_Pin_Init
  4630 ;; This function uses a non-reentrant model
  4631 ;;
  4632                           
  4633                           	psect	text28
  4634   001E5C                     __ptext28:
  4635                           	callstack 0
  4636   001E5C                     _gpio_pin_direction_intialize:
  4637                           	callstack 22
  4638   001E5C                     
  4639                           ;MCAL_Layer/GPIO/hal_gpio.c: 26:     Std_ReturnType ret = (Std_ReturnType)0x01;
  4640   001E5C  0E01               	movlw	1
  4641   001E5E  6E15               	movwf	gpio_pin_direction_intialize@ret^0,c
  4642   001E60                     
  4643                           ;MCAL_Layer/GPIO/hal_gpio.c: 27:     if(((void*)0) == _pin_config || _pin_config->pin > 
      +                          8 -1){
  4644   001E60  500D               	movf	gpio_pin_direction_intialize@_pin_config^0,w,c
  4645   001E62  100E               	iorwf	(gpio_pin_direction_intialize@_pin_config+1)^0,w,c
  4646   001E64  B4D8               	btfsc	status,2,c
  4647   001E66  EF37  F00F         	goto	u2991
  4648   001E6A  EF39  F00F         	goto	u2990
  4649   001E6E                     u2991:
  4650   001E6E  EF4A  F00F         	goto	l4092
  4651   001E72                     u2990:
  4652   001E72  C00D  FFD9         	movff	gpio_pin_direction_intialize@_pin_config,fsr2l
  4653   001E76  C00E  FFDA         	movff	gpio_pin_direction_intialize@_pin_config+1,fsr2h
  4654   001E7A  30DF               	rrcf	223,w,c
  4655   001E7C  32E8               	rrcf	wreg,f,c
  4656   001E7E  32E8               	rrcf	wreg,f,c
  4657   001E80  0B07               	andlw	7
  4658   001E82  6E0F               	movwf	??_gpio_pin_direction_intialize^0,c
  4659   001E84  0E07               	movlw	7
  4660   001E86  640F               	cpfsgt	??_gpio_pin_direction_intialize^0,c
  4661   001E88  EF48  F00F         	goto	u3001
  4662   001E8C  EF4A  F00F         	goto	u3000
  4663   001E90                     u3001:
  4664   001E90  EFAD  F00F         	goto	l4100
  4665   001E94                     u3000:
  4666   001E94                     l4092:
  4667                           
  4668                           ;MCAL_Layer/GPIO/hal_gpio.c: 28:         ret = (Std_ReturnType)0x00;
  4669   001E94  0E00               	movlw	0
  4670   001E96  6E15               	movwf	gpio_pin_direction_intialize@ret^0,c
  4671                           
  4672                           ;MCAL_Layer/GPIO/hal_gpio.c: 29:     }
  4673   001E98  EFCE  F00F         	goto	l4102
  4674   001E9C                     l4094:
  4675                           
  4676                           ;MCAL_Layer/GPIO/hal_gpio.c: 33:                 (*tris_registers[_pin_config->port] &= 
      +                          ~((uint8)1 << _pin_config->pin));
  4677   001E9C  C00D  FFD9         	movff	gpio_pin_direction_intialize@_pin_config,fsr2l
  4678   001EA0  C00E  FFDA         	movff	gpio_pin_direction_intialize@_pin_config+1,fsr2h
  4679   001EA4  30DF               	rrcf	223,w,c
  4680   001EA6  32E8               	rrcf	wreg,f,c
  4681   001EA8  32E8               	rrcf	wreg,f,c
  4682   001EAA  0B07               	andlw	7
  4683   001EAC  6E0F               	movwf	??_gpio_pin_direction_intialize^0,c
  4684   001EAE  0E01               	movlw	1
  4685   001EB0  6E10               	movwf	(??_gpio_pin_direction_intialize+1)^0,c
  4686   001EB2  2A0F               	incf	??_gpio_pin_direction_intialize^0,f,c
  4687   001EB4  EF5E  F00F         	goto	u3014
  4688   001EB8                     u3015:
  4689   001EB8  90D8               	bcf	status,0,c
  4690   001EBA  3610               	rlcf	(??_gpio_pin_direction_intialize+1)^0,f,c
  4691   001EBC                     u3014:
  4692   001EBC  2E0F               	decfsz	??_gpio_pin_direction_intialize^0,f,c
  4693   001EBE  EF5C  F00F         	goto	u3015
  4694   001EC2  5010               	movf	(??_gpio_pin_direction_intialize+1)^0,w,c
  4695   001EC4  0AFF               	xorlw	255
  4696   001EC6  6E11               	movwf	(??_gpio_pin_direction_intialize+2)^0,c
  4697   001EC8  C00D  FFD9         	movff	gpio_pin_direction_intialize@_pin_config,fsr2l
  4698   001ECC  C00E  FFDA         	movff	gpio_pin_direction_intialize@_pin_config+1,fsr2h
  4699   001ED0  50DF               	movf	223,w,c
  4700   001ED2  0B07               	andlw	7
  4701   001ED4  6E12               	movwf	(??_gpio_pin_direction_intialize+3)^0,c
  4702   001ED6  5012               	movf	(??_gpio_pin_direction_intialize+3)^0,w,c
  4703   001ED8  0D02               	mullw	2
  4704   001EDA  0E94               	movlw	low _tris_registers
  4705   001EDC  24F3               	addwf	243,w,c
  4706   001EDE  6ED9               	movwf	fsr2l,c
  4707   001EE0  0E00               	movlw	high _tris_registers
  4708   001EE2  20F4               	addwfc	prodh,w,c
  4709   001EE4  6EDA               	movwf	fsr2h,c
  4710   001EE6  CFDE F013          	movff	postinc2,??_gpio_pin_direction_intialize+4
  4711   001EEA  CFDD F014          	movff	postdec2,??_gpio_pin_direction_intialize+5
  4712   001EEE  C013  FFD9         	movff	??_gpio_pin_direction_intialize+4,fsr2l
  4713   001EF2  C014  FFDA         	movff	??_gpio_pin_direction_intialize+5,fsr2h
  4714   001EF6  5011               	movf	(??_gpio_pin_direction_intialize+2)^0,w,c
  4715   001EF8  16DF               	andwf	indf2,f,c
  4716                           
  4717                           ;MCAL_Layer/GPIO/hal_gpio.c: 34:                 break;
  4718   001EFA  EFCE  F00F         	goto	l4102
  4719   001EFE                     l4096:
  4720                           
  4721                           ;MCAL_Layer/GPIO/hal_gpio.c: 36:                 (*tris_registers[_pin_config->port] |= 
      +                          ((uint8)1 << _pin_config->pin));
  4722   001EFE  C00D  FFD9         	movff	gpio_pin_direction_intialize@_pin_config,fsr2l
  4723   001F02  C00E  FFDA         	movff	gpio_pin_direction_intialize@_pin_config+1,fsr2h
  4724   001F06  30DF               	rrcf	223,w,c
  4725   001F08  32E8               	rrcf	wreg,f,c
  4726   001F0A  32E8               	rrcf	wreg,f,c
  4727   001F0C  0B07               	andlw	7
  4728   001F0E  6E0F               	movwf	??_gpio_pin_direction_intialize^0,c
  4729   001F10  0E01               	movlw	1
  4730   001F12  6E10               	movwf	(??_gpio_pin_direction_intialize+1)^0,c
  4731   001F14  2A0F               	incf	??_gpio_pin_direction_intialize^0,f,c
  4732   001F16  EF8F  F00F         	goto	u3024
  4733   001F1A                     u3025:
  4734   001F1A  90D8               	bcf	status,0,c
  4735   001F1C  3610               	rlcf	(??_gpio_pin_direction_intialize+1)^0,f,c
  4736   001F1E                     u3024:
  4737   001F1E  2E0F               	decfsz	??_gpio_pin_direction_intialize^0,f,c
  4738   001F20  EF8D  F00F         	goto	u3025
  4739   001F24  C00D  FFD9         	movff	gpio_pin_direction_intialize@_pin_config,fsr2l
  4740   001F28  C00E  FFDA         	movff	gpio_pin_direction_intialize@_pin_config+1,fsr2h
  4741   001F2C  50DF               	movf	223,w,c
  4742   001F2E  0B07               	andlw	7
  4743   001F30  6E11               	movwf	(??_gpio_pin_direction_intialize+2)^0,c
  4744   001F32  5011               	movf	(??_gpio_pin_direction_intialize+2)^0,w,c
  4745   001F34  0D02               	mullw	2
  4746   001F36  0E94               	movlw	low _tris_registers
  4747   001F38  24F3               	addwf	243,w,c
  4748   001F3A  6ED9               	movwf	fsr2l,c
  4749   001F3C  0E00               	movlw	high _tris_registers
  4750   001F3E  20F4               	addwfc	prodh,w,c
  4751   001F40  6EDA               	movwf	fsr2h,c
  4752   001F42  CFDE F012          	movff	postinc2,??_gpio_pin_direction_intialize+3
  4753   001F46  CFDD F013          	movff	postdec2,??_gpio_pin_direction_intialize+4
  4754   001F4A  C012  FFD9         	movff	??_gpio_pin_direction_intialize+3,fsr2l
  4755   001F4E  C013  FFDA         	movff	??_gpio_pin_direction_intialize+4,fsr2h
  4756   001F52  5010               	movf	(??_gpio_pin_direction_intialize+1)^0,w,c
  4757   001F54  12DF               	iorwf	indf2,f,c
  4758                           
  4759                           ;MCAL_Layer/GPIO/hal_gpio.c: 37:                 break;
  4760   001F56  EFCE  F00F         	goto	l4102
  4761   001F5A                     l4100:
  4762   001F5A  C00D  FFD9         	movff	gpio_pin_direction_intialize@_pin_config,fsr2l
  4763   001F5E  C00E  FFDA         	movff	gpio_pin_direction_intialize@_pin_config+1,fsr2h
  4764   001F62  BCDF               	btfsc	indf2,6,c
  4765   001F64  EFB6  F00F         	goto	u3031
  4766   001F68  EFB9  F00F         	goto	u3030
  4767   001F6C                     u3031:
  4768   001F6C  0E01               	movlw	1
  4769   001F6E  EFBA  F00F         	goto	u3040
  4770   001F72                     u3030:
  4771   001F72  0E00               	movlw	0
  4772   001F74                     u3040:
  4773   001F74  6E0F               	movwf	??_gpio_pin_direction_intialize^0,c
  4774   001F76  6A10               	clrf	(??_gpio_pin_direction_intialize+1)^0,c
  4775                           
  4776                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  4777                           ; Switch size 1, requested type "simple"
  4778                           ; Number of cases is 1, Range of values is 0 to 0
  4779                           ; switch strategies available:
  4780                           ; Name         Instructions Cycles
  4781                           ; simple_byte            4     3 (average)
  4782                           ;	Chosen strategy is simple_byte
  4783   001F78  5010               	movf	(??_gpio_pin_direction_intialize+1)^0,w,c
  4784   001F7A  0A00               	xorlw	0	; case 0
  4785   001F7C  B4D8               	btfsc	status,2,c
  4786   001F7E  EFC3  F00F         	goto	l6524
  4787   001F82  EF4A  F00F         	goto	l4092
  4788   001F86                     l6524:
  4789                           
  4790                           ; Switch size 1, requested type "simple"
  4791                           ; Number of cases is 2, Range of values is 0 to 1
  4792                           ; switch strategies available:
  4793                           ; Name         Instructions Cycles
  4794                           ; simple_byte            7     4 (average)
  4795                           ;	Chosen strategy is simple_byte
  4796   001F86  500F               	movf	??_gpio_pin_direction_intialize^0,w,c
  4797   001F88  0A00               	xorlw	0	; case 0
  4798   001F8A  B4D8               	btfsc	status,2,c
  4799   001F8C  EF4E  F00F         	goto	l4094
  4800   001F90  0A01               	xorlw	1	; case 1
  4801   001F92  B4D8               	btfsc	status,2,c
  4802   001F94  EF7F  F00F         	goto	l4096
  4803   001F98  EF4A  F00F         	goto	l4092
  4804   001F9C                     l4102:
  4805                           
  4806                           ;MCAL_Layer/GPIO/hal_gpio.c: 41:     return ret;
  4807   001F9C  5015               	movf	gpio_pin_direction_intialize@ret^0,w,c
  4808   001F9E  0012               	return		;funcret
  4809   001FA0                     __end_of_gpio_pin_direction_intialize:
  4810                           	callstack 0
  4811                           
  4812 ;; *************** function _ADC_INIT *****************
  4813 ;; Defined at:
  4814 ;;		line 23 in file "MCAL_Layer/ADC/hal_adc.c"
  4815 ;; Parameters:    Size  Location     Type
  4816 ;;  adc             2   16[COMRAM] PTR const struct .
  4817 ;;		 -> adc1(7), 
  4818 ;; Auto vars:     Size  Location     Type
  4819 ;;  ret             1   19[COMRAM] unsigned char 
  4820 ;; Return value:  Size  Location     Type
  4821 ;;                  1    wreg      unsigned char 
  4822 ;; Registers used:
  4823 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  4824 ;; Tracked objects:
  4825 ;;		On entry : 0/0
  4826 ;;		On exit  : 0/0
  4827 ;;		Unchanged: 0/0
  4828 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4829 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4830 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4831 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4832 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4833 ;;Total ram usage:        4 bytes
  4834 ;; Hardware stack levels used: 1
  4835 ;; Hardware stack levels required when called: 5
  4836 ;; This function calls:
  4837 ;;		_adc_input_channel_port_configuration
  4838 ;;		_adc_select_format
  4839 ;;		_configure_the_voltage_reference
  4840 ;; This function is called by:
  4841 ;;		_application_intialize
  4842 ;; This function uses a non-reentrant model
  4843 ;;
  4844                           
  4845                           	psect	text29
  4846   00297E                     __ptext29:
  4847                           	callstack 0
  4848   00297E                     _ADC_INIT:
  4849                           	callstack 24
  4850   00297E                     
  4851                           ;MCAL_Layer/ADC/hal_adc.c: 26:     if(((void*)0)==adc)
  4852   00297E  5011               	movf	ADC_INIT@adc^0,w,c
  4853   002980  1012               	iorwf	(ADC_INIT@adc+1)^0,w,c
  4854   002982  A4D8               	btfss	status,2,c
  4855   002984  EFC6  F014         	goto	u3511
  4856   002988  EFC8  F014         	goto	u3510
  4857   00298C                     u3511:
  4858   00298C  EFCC  F014         	goto	l392
  4859   002990                     u3510:
  4860   002990                     
  4861                           ;MCAL_Layer/ADC/hal_adc.c: 27:     {;MCAL_Layer/ADC/hal_adc.c: 28:         ret=(Std_Retu
      +                          rnType)0x00;
  4862   002990  0E00               	movlw	0
  4863   002992  6E14               	movwf	ADC_INIT@ret^0,c
  4864                           
  4865                           ;MCAL_Layer/ADC/hal_adc.c: 29:     }
  4866   002994  EF0E  F015         	goto	l4574
  4867   002998                     l392:
  4868                           
  4869                           ;MCAL_Layer/ADC/hal_adc.c: 31:     {;MCAL_Layer/ADC/hal_adc.c: 33:         (ADCON0bits.A
      +                          DON=0);
  4870   002998  90C2               	bcf	194,0,c	;volatile
  4871   00299A                     
  4872                           ;MCAL_Layer/ADC/hal_adc.c: 35:         ADCON2bits.ACQT=adc->asquisition_time;
  4873   00299A  EE20 F003          	lfsr	2,3
  4874   00299E  5011               	movf	ADC_INIT@adc^0,w,c
  4875   0029A0  26D9               	addwf	fsr2l,f,c
  4876   0029A2  5012               	movf	(ADC_INIT@adc+1)^0,w,c
  4877   0029A4  22DA               	addwfc	fsr2h,f,c
  4878   0029A6  50DF               	movf	indf2,w,c
  4879   0029A8  6E13               	movwf	??_ADC_INIT^0,c
  4880   0029AA  4613               	rlncf	??_ADC_INIT^0,f,c
  4881   0029AC  4613               	rlncf	??_ADC_INIT^0,f,c
  4882   0029AE  4613               	rlncf	??_ADC_INIT^0,f,c
  4883   0029B0  50C0               	movf	192,w,c	;volatile
  4884   0029B2  1813               	xorwf	??_ADC_INIT^0,w,c
  4885   0029B4  0BC7               	andlw	-57
  4886   0029B6  1813               	xorwf	??_ADC_INIT^0,w,c
  4887   0029B8  6EC0               	movwf	192,c	;volatile
  4888                           
  4889                           ;MCAL_Layer/ADC/hal_adc.c: 37:         ADCON2bits.ADCS=adc->conversion_clock;
  4890   0029BA  EE20 F004          	lfsr	2,4
  4891   0029BE  5011               	movf	ADC_INIT@adc^0,w,c
  4892   0029C0  26D9               	addwf	fsr2l,f,c
  4893   0029C2  5012               	movf	(ADC_INIT@adc+1)^0,w,c
  4894   0029C4  22DA               	addwfc	fsr2h,f,c
  4895   0029C6  50DF               	movf	indf2,w,c
  4896   0029C8  6E13               	movwf	??_ADC_INIT^0,c
  4897   0029CA  50C0               	movf	192,w,c	;volatile
  4898   0029CC  1813               	xorwf	??_ADC_INIT^0,w,c
  4899   0029CE  0BF8               	andlw	-8
  4900   0029D0  1813               	xorwf	??_ADC_INIT^0,w,c
  4901   0029D2  6EC0               	movwf	192,c	;volatile
  4902   0029D4                     
  4903                           ;MCAL_Layer/ADC/hal_adc.c: 38:         adc_input_channel_port_configuration(adc->adc_cha
      +                          nnel);
  4904   0029D4  EE20 F005          	lfsr	2,5
  4905   0029D8  5011               	movf	ADC_INIT@adc^0,w,c
  4906   0029DA  26D9               	addwf	fsr2l,f,c
  4907   0029DC  5012               	movf	(ADC_INIT@adc+1)^0,w,c
  4908   0029DE  22DA               	addwfc	fsr2h,f,c
  4909   0029E0  50DF               	movf	indf2,w,c
  4910   0029E2  EC82  F012         	call	_adc_input_channel_port_configuration
  4911   0029E6                     
  4912                           ;MCAL_Layer/ADC/hal_adc.c: 41:         (INTCONbits.GIE = 1);
  4913   0029E6  8EF2               	bsf	242,7,c	;volatile
  4914   0029E8                     
  4915                           ;MCAL_Layer/ADC/hal_adc.c: 42:         (INTCONbits.PEIE = 1);
  4916   0029E8  8CF2               	bsf	242,6,c	;volatile
  4917   0029EA                     
  4918                           ;MCAL_Layer/ADC/hal_adc.c: 43:         (PIE1bits.ADIE=1);
  4919   0029EA  8C9D               	bsf	157,6,c	;volatile
  4920   0029EC                     
  4921                           ;MCAL_Layer/ADC/hal_adc.c: 44:         (PIR1bits.ADIF=0);
  4922   0029EC  9C9E               	bcf	158,6,c	;volatile
  4923   0029EE                     
  4924                           ;MCAL_Layer/ADC/hal_adc.c: 51:          ADC_InterruptHandler=adc->ADC_INTERRUPTHANDLER;
  4925   0029EE  C011  FFD9         	movff	ADC_INIT@adc,fsr2l
  4926   0029F2  C012  FFDA         	movff	ADC_INIT@adc+1,fsr2h
  4927   0029F6  CFDE F0DB          	movff	postinc2,_ADC_InterruptHandler
  4928   0029FA  CFDD F0DC          	movff	postdec2,_ADC_InterruptHandler+1
  4929   0029FE                     
  4930                           ;MCAL_Layer/ADC/hal_adc.c: 55:         adc_select_format(adc);
  4931   0029FE  C011  F00D         	movff	ADC_INIT@adc,adc_select_format@adc
  4932   002A02  C012  F00E         	movff	ADC_INIT@adc+1,adc_select_format@adc+1
  4933   002A06  EC97  F016         	call	_adc_select_format	;wreg free
  4934   002A0A                     
  4935                           ;MCAL_Layer/ADC/hal_adc.c: 57:         configure_the_voltage_reference(adc);
  4936   002A0A  C011  F00D         	movff	ADC_INIT@adc,configure_the_voltage_reference@adc
  4937   002A0E  C012  F00E         	movff	ADC_INIT@adc+1,configure_the_voltage_reference@adc+1
  4938   002A12  EC22  F016         	call	_configure_the_voltage_reference	;wreg free
  4939   002A16                     
  4940                           ;MCAL_Layer/ADC/hal_adc.c: 59:         (ADCON0bits.ADON=1);
  4941   002A16  80C2               	bsf	194,0,c	;volatile
  4942   002A18                     
  4943                           ;MCAL_Layer/ADC/hal_adc.c: 60:         ret=(Std_ReturnType)0x01;
  4944   002A18  0E01               	movlw	1
  4945   002A1A  6E14               	movwf	ADC_INIT@ret^0,c
  4946   002A1C                     l4574:
  4947                           
  4948                           ;MCAL_Layer/ADC/hal_adc.c: 62:     return ret;
  4949   002A1C  5014               	movf	ADC_INIT@ret^0,w,c
  4950   002A1E  0012               	return		;funcret
  4951   002A20                     __end_of_ADC_INIT:
  4952                           	callstack 0
  4953                           
  4954 ;; *************** function _configure_the_voltage_reference *****************
  4955 ;; Defined at:
  4956 ;;		line 286 in file "MCAL_Layer/ADC/hal_adc.c"
  4957 ;; Parameters:    Size  Location     Type
  4958 ;;  adc             2   12[COMRAM] PTR const struct .
  4959 ;;		 -> adc1(7), 
  4960 ;; Auto vars:     Size  Location     Type
  4961 ;;  ret             1    0        unsigned char 
  4962 ;; Return value:  Size  Location     Type
  4963 ;;                  1    wreg      void 
  4964 ;; Registers used:
  4965 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  4966 ;; Tracked objects:
  4967 ;;		On entry : 0/0
  4968 ;;		On exit  : 0/0
  4969 ;;		Unchanged: 0/0
  4970 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4971 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4972 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4973 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4974 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4975 ;;Total ram usage:        4 bytes
  4976 ;; Hardware stack levels used: 1
  4977 ;; Hardware stack levels required when called: 4
  4978 ;; This function calls:
  4979 ;;		Nothing
  4980 ;; This function is called by:
  4981 ;;		_ADC_INIT
  4982 ;; This function uses a non-reentrant model
  4983 ;;
  4984                           
  4985                           	psect	text30
  4986   002C44                     __ptext30:
  4987                           	callstack 0
  4988   002C44                     _configure_the_voltage_reference:
  4989                           	callstack 24
  4990   002C44                     
  4991                           ;MCAL_Layer/ADC/hal_adc.c: 289:     if(((void*)0)==adc)
  4992   002C44  500D               	movf	configure_the_voltage_reference@adc^0,w,c
  4993   002C46  100E               	iorwf	(configure_the_voltage_reference@adc+1)^0,w,c
  4994   002C48  A4D8               	btfss	status,2,c
  4995   002C4A  EF29  F016         	goto	u3321
  4996   002C4E  EF2B  F016         	goto	u3320
  4997   002C52                     u3321:
  4998   002C52  EF39  F016         	goto	l4380
  4999   002C56                     u3320:
  5000   002C56                     
  5001                           ;MCAL_Layer/ADC/hal_adc.c: 292:     }
  5002   002C56  EF5C  F016         	goto	l488
  5003   002C5A                     l479:
  5004   002C5A  88C1               	bsf	193,4,c	;volatile
  5005   002C5C  8AC1               	bsf	193,5,c	;volatile
  5006   002C5E  EF5C  F016         	goto	l4382
  5007   002C62                     l483:
  5008   002C62  98C1               	bcf	193,4,c	;volatile
  5009   002C64  9AC1               	bcf	193,5,c	;volatile
  5010   002C66  EF5C  F016         	goto	l4382
  5011   002C6A                     l486:
  5012   002C6A  98C1               	bcf	193,4,c	;volatile
  5013   002C6C  9AC1               	bcf	193,5,c	;volatile
  5014   002C6E  EF5C  F016         	goto	l4382
  5015   002C72                     l4380:
  5016   002C72  EE20 F006          	lfsr	2,6
  5017   002C76  500D               	movf	configure_the_voltage_reference@adc^0,w,c
  5018   002C78  26D9               	addwf	fsr2l,f,c
  5019   002C7A  500E               	movf	(configure_the_voltage_reference@adc+1)^0,w,c
  5020   002C7C  22DA               	addwfc	fsr2h,f,c
  5021   002C7E  B0DF               	btfsc	indf2,0,c
  5022   002C80  EF44  F016         	goto	u3331
  5023   002C84  EF47  F016         	goto	u3330
  5024   002C88                     u3331:
  5025   002C88  0E01               	movlw	1
  5026   002C8A  EF48  F016         	goto	u3340
  5027   002C8E                     u3330:
  5028   002C8E  0E00               	movlw	0
  5029   002C90                     u3340:
  5030   002C90  6E0F               	movwf	??_configure_the_voltage_reference^0,c
  5031   002C92  6A10               	clrf	(??_configure_the_voltage_reference+1)^0,c
  5032                           
  5033                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  5034                           ; Switch size 1, requested type "simple"
  5035                           ; Number of cases is 1, Range of values is 0 to 0
  5036                           ; switch strategies available:
  5037                           ; Name         Instructions Cycles
  5038                           ; simple_byte            4     3 (average)
  5039                           ;	Chosen strategy is simple_byte
  5040   002C94  5010               	movf	(??_configure_the_voltage_reference+1)^0,w,c
  5041   002C96  0A00               	xorlw	0	; case 0
  5042   002C98  B4D8               	btfsc	status,2,c
  5043   002C9A  EF51  F016         	goto	l6526
  5044   002C9E  EF35  F016         	goto	l486
  5045   002CA2                     l6526:
  5046                           
  5047                           ; Switch size 1, requested type "simple"
  5048                           ; Number of cases is 2, Range of values is 0 to 1
  5049                           ; switch strategies available:
  5050                           ; Name         Instructions Cycles
  5051                           ; simple_byte            7     4 (average)
  5052                           ;	Chosen strategy is simple_byte
  5053   002CA2  500F               	movf	??_configure_the_voltage_reference^0,w,c
  5054   002CA4  0A00               	xorlw	0	; case 0
  5055   002CA6  B4D8               	btfsc	status,2,c
  5056   002CA8  EF31  F016         	goto	l483
  5057   002CAC  0A01               	xorlw	1	; case 1
  5058   002CAE  B4D8               	btfsc	status,2,c
  5059   002CB0  EF2D  F016         	goto	l479
  5060   002CB4  EF35  F016         	goto	l486
  5061   002CB8                     l4382:
  5062   002CB8                     l488:
  5063   002CB8  0012               	return		;funcret
  5064   002CBA                     __end_of_configure_the_voltage_reference:
  5065                           	callstack 0
  5066                           
  5067 ;; *************** function _adc_select_format *****************
  5068 ;; Defined at:
  5069 ;;		line 265 in file "MCAL_Layer/ADC/hal_adc.c"
  5070 ;; Parameters:    Size  Location     Type
  5071 ;;  adc             2   12[COMRAM] PTR const struct .
  5072 ;;		 -> adc1(7), 
  5073 ;; Auto vars:     Size  Location     Type
  5074 ;;  ret             1    0        unsigned char 
  5075 ;; Return value:  Size  Location     Type
  5076 ;;                  1    wreg      void 
  5077 ;; Registers used:
  5078 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  5079 ;; Tracked objects:
  5080 ;;		On entry : 0/0
  5081 ;;		On exit  : 0/0
  5082 ;;		Unchanged: 0/0
  5083 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5084 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5085 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5086 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5087 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5088 ;;Total ram usage:        4 bytes
  5089 ;; Hardware stack levels used: 1
  5090 ;; Hardware stack levels required when called: 4
  5091 ;; This function calls:
  5092 ;;		Nothing
  5093 ;; This function is called by:
  5094 ;;		_ADC_INIT
  5095 ;; This function uses a non-reentrant model
  5096 ;;
  5097                           
  5098                           	psect	text31
  5099   002D2E                     __ptext31:
  5100                           	callstack 0
  5101   002D2E                     _adc_select_format:
  5102                           	callstack 24
  5103   002D2E                     
  5104                           ;MCAL_Layer/ADC/hal_adc.c: 268:     if(((void*)0)==adc)
  5105   002D2E  500D               	movf	adc_select_format@adc^0,w,c
  5106   002D30  100E               	iorwf	(adc_select_format@adc+1)^0,w,c
  5107   002D32  A4D8               	btfss	status,2,c
  5108   002D34  EF9E  F016         	goto	u3291
  5109   002D38  EFA0  F016         	goto	u3290
  5110   002D3C                     u3291:
  5111   002D3C  EFAB  F016         	goto	l4366
  5112   002D40                     u3290:
  5113   002D40                     
  5114                           ;MCAL_Layer/ADC/hal_adc.c: 271:     }
  5115   002D40  EFCE  F016         	goto	l472
  5116   002D44                     l468:
  5117   002D44  8EC0               	bsf	192,7,c	;volatile
  5118   002D46  EFCE  F016         	goto	l4368
  5119   002D4A                     l470:
  5120   002D4A  9EC0               	bcf	192,7,c	;volatile
  5121   002D4C  EFCE  F016         	goto	l4368
  5122   002D50                     l471:
  5123   002D50  8EC0               	bsf	192,7,c	;volatile
  5124                           
  5125                           ;MCAL_Layer/ADC/hal_adc.c: 280:         }
  5126   002D52  EFCE  F016         	goto	l4368
  5127   002D56                     l4366:
  5128   002D56  EE20 F006          	lfsr	2,6
  5129   002D5A  500D               	movf	adc_select_format@adc^0,w,c
  5130   002D5C  26D9               	addwf	fsr2l,f,c
  5131   002D5E  500E               	movf	(adc_select_format@adc+1)^0,w,c
  5132   002D60  22DA               	addwfc	fsr2h,f,c
  5133   002D62  B2DF               	btfsc	indf2,1,c
  5134   002D64  EFB6  F016         	goto	u3301
  5135   002D68  EFB9  F016         	goto	u3300
  5136   002D6C                     u3301:
  5137   002D6C  0E01               	movlw	1
  5138   002D6E  EFBA  F016         	goto	u3310
  5139   002D72                     u3300:
  5140   002D72  0E00               	movlw	0
  5141   002D74                     u3310:
  5142   002D74  6E0F               	movwf	??_adc_select_format^0,c
  5143   002D76  6A10               	clrf	(??_adc_select_format+1)^0,c
  5144                           
  5145                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  5146                           ; Switch size 1, requested type "simple"
  5147                           ; Number of cases is 1, Range of values is 0 to 0
  5148                           ; switch strategies available:
  5149                           ; Name         Instructions Cycles
  5150                           ; simple_byte            4     3 (average)
  5151                           ;	Chosen strategy is simple_byte
  5152   002D78  5010               	movf	(??_adc_select_format+1)^0,w,c
  5153   002D7A  0A00               	xorlw	0	; case 0
  5154   002D7C  B4D8               	btfsc	status,2,c
  5155   002D7E  EFC3  F016         	goto	l6528
  5156   002D82  EFA8  F016         	goto	l471
  5157   002D86                     l6528:
  5158                           
  5159                           ; Switch size 1, requested type "simple"
  5160                           ; Number of cases is 2, Range of values is 0 to 1
  5161                           ; switch strategies available:
  5162                           ; Name         Instructions Cycles
  5163                           ; simple_byte            7     4 (average)
  5164                           ;	Chosen strategy is simple_byte
  5165   002D86  500F               	movf	??_adc_select_format^0,w,c
  5166   002D88  0A00               	xorlw	0	; case 0
  5167   002D8A  B4D8               	btfsc	status,2,c
  5168   002D8C  EFA5  F016         	goto	l470
  5169   002D90  0A01               	xorlw	1	; case 1
  5170   002D92  B4D8               	btfsc	status,2,c
  5171   002D94  EFA2  F016         	goto	l468
  5172   002D98  EFA8  F016         	goto	l471
  5173   002D9C                     l4368:
  5174   002D9C                     l472:
  5175   002D9C  0012               	return		;funcret
  5176   002D9E                     __end_of_adc_select_format:
  5177                           	callstack 0
  5178                           
  5179 ;; *************** function ___xxtofl *****************
  5180 ;; Defined at:
  5181 ;;		line 10 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\xxtofl.c"
  5182 ;; Parameters:    Size  Location     Type
  5183 ;;  sign            1    wreg     unsigned char 
  5184 ;;  val             4   12[COMRAM] long 
  5185 ;; Auto vars:     Size  Location     Type
  5186 ;;  sign            1   20[COMRAM] unsigned char 
  5187 ;;  arg             4   22[COMRAM] unsigned long 
  5188 ;;  exp             1   21[COMRAM] unsigned char 
  5189 ;; Return value:  Size  Location     Type
  5190 ;;                  4   12[COMRAM] unsigned char 
  5191 ;; Registers used:
  5192 ;;		wreg, status,2, status,0
  5193 ;; Tracked objects:
  5194 ;;		On entry : 0/0
  5195 ;;		On exit  : 0/0
  5196 ;;		Unchanged: 0/0
  5197 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5198 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5199 ;;      Locals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5200 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5201 ;;      Totals:        14       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5202 ;;Total ram usage:       14 bytes
  5203 ;; Hardware stack levels used: 1
  5204 ;; Hardware stack levels required when called: 4
  5205 ;; This function calls:
  5206 ;;		Nothing
  5207 ;; This function is called by:
  5208 ;;		_main
  5209 ;;		_Ultrasonic_Calculate_Distance
  5210 ;; This function uses a non-reentrant model
  5211 ;;
  5212                           
  5213                           	psect	text32
  5214   00199C                     __ptext32:
  5215                           	callstack 0
  5216   00199C                     ___xxtofl:
  5217                           	callstack 26
  5218                           
  5219                           ;incstack = 0
  5220                           ;___xxtofl@sign stored from wreg
  5221   00199C  6E15               	movwf	___xxtofl@sign^0,c
  5222   00199E  5015               	movf	___xxtofl@sign^0,w,c
  5223   0019A0  B4D8               	btfsc	status,2,c
  5224   0019A2  EFD5  F00C         	goto	u4021
  5225   0019A6  EFD7  F00C         	goto	u4020
  5226   0019AA                     u4021:
  5227   0019AA  EFF9  F00C         	goto	l1633
  5228   0019AE                     u4020:
  5229   0019AE  BE10               	btfsc	(___xxtofl@val+3)^0,7,c
  5230   0019B0  EFDE  F00C         	goto	u4030
  5231   0019B4  EFDC  F00C         	goto	u4031
  5232   0019B8                     u4031:
  5233   0019B8  EFF9  F00C         	goto	l1633
  5234   0019BC                     u4030:
  5235   0019BC  C00D  F011         	movff	___xxtofl@val,??___xxtofl
  5236   0019C0  C00E  F012         	movff	___xxtofl@val+1,??___xxtofl+1
  5237   0019C4  C00F  F013         	movff	___xxtofl@val+2,??___xxtofl+2
  5238   0019C8  C010  F014         	movff	___xxtofl@val+3,??___xxtofl+3
  5239   0019CC  1E11               	comf	??___xxtofl^0,f,c
  5240   0019CE  1E12               	comf	(??___xxtofl+1)^0,f,c
  5241   0019D0  1E13               	comf	(??___xxtofl+2)^0,f,c
  5242   0019D2  1E14               	comf	(??___xxtofl+3)^0,f,c
  5243   0019D4  2A11               	incf	??___xxtofl^0,f,c
  5244   0019D6  0E00               	movlw	0
  5245   0019D8  2212               	addwfc	(??___xxtofl+1)^0,f,c
  5246   0019DA  2213               	addwfc	(??___xxtofl+2)^0,f,c
  5247   0019DC  2214               	addwfc	(??___xxtofl+3)^0,f,c
  5248   0019DE  C011  F017         	movff	??___xxtofl,___xxtofl@arg
  5249   0019E2  C012  F018         	movff	??___xxtofl+1,___xxtofl@arg+1
  5250   0019E6  C013  F019         	movff	??___xxtofl+2,___xxtofl@arg+2
  5251   0019EA  C014  F01A         	movff	??___xxtofl+3,___xxtofl@arg+3
  5252   0019EE  EF01  F00D         	goto	l5046
  5253   0019F2                     l1633:
  5254   0019F2  C00D  F017         	movff	___xxtofl@val,___xxtofl@arg
  5255   0019F6  C00E  F018         	movff	___xxtofl@val+1,___xxtofl@arg+1
  5256   0019FA  C00F  F019         	movff	___xxtofl@val+2,___xxtofl@arg+2
  5257   0019FE  C010  F01A         	movff	___xxtofl@val+3,___xxtofl@arg+3
  5258   001A02                     l5046:
  5259   001A02  500D               	movf	___xxtofl@val^0,w,c
  5260   001A04  100E               	iorwf	(___xxtofl@val+1)^0,w,c
  5261   001A06  100F               	iorwf	(___xxtofl@val+2)^0,w,c
  5262   001A08  1010               	iorwf	(___xxtofl@val+3)^0,w,c
  5263   001A0A  A4D8               	btfss	status,2,c
  5264   001A0C  EF0A  F00D         	goto	u4041
  5265   001A10  EF0C  F00D         	goto	u4040
  5266   001A14                     u4041:
  5267   001A14  EF16  F00D         	goto	l5052
  5268   001A18                     u4040:
  5269   001A18  0E00               	movlw	0
  5270   001A1A  6E0D               	movwf	?___xxtofl^0,c
  5271   001A1C  0E00               	movlw	0
  5272   001A1E  6E0E               	movwf	(?___xxtofl+1)^0,c
  5273   001A20  0E00               	movlw	0
  5274   001A22  6E0F               	movwf	(?___xxtofl+2)^0,c
  5275   001A24  0E00               	movlw	0
  5276   001A26  6E10               	movwf	(?___xxtofl+3)^0,c
  5277   001A28  EFA7  F00D         	goto	l1636
  5278   001A2C                     l5052:
  5279   001A2C  0E96               	movlw	150
  5280   001A2E  6E16               	movwf	___xxtofl@exp^0,c
  5281   001A30  EF20  F00D         	goto	l5056
  5282   001A34                     l5054:
  5283   001A34  2A16               	incf	___xxtofl@exp^0,f,c
  5284   001A36  90D8               	bcf	status,0,c
  5285   001A38  321A               	rrcf	(___xxtofl@arg+3)^0,f,c
  5286   001A3A  3219               	rrcf	(___xxtofl@arg+2)^0,f,c
  5287   001A3C  3218               	rrcf	(___xxtofl@arg+1)^0,f,c
  5288   001A3E  3217               	rrcf	___xxtofl@arg^0,f,c
  5289   001A40                     l5056:
  5290   001A40  0E00               	movlw	0
  5291   001A42  1417               	andwf	___xxtofl@arg^0,w,c
  5292   001A44  6E11               	movwf	??___xxtofl^0,c
  5293   001A46  0E00               	movlw	0
  5294   001A48  1418               	andwf	(___xxtofl@arg+1)^0,w,c
  5295   001A4A  6E12               	movwf	(??___xxtofl+1)^0,c
  5296   001A4C  0E00               	movlw	0
  5297   001A4E  1419               	andwf	(___xxtofl@arg+2)^0,w,c
  5298   001A50  6E13               	movwf	(??___xxtofl+2)^0,c
  5299   001A52  0EFE               	movlw	254
  5300   001A54  141A               	andwf	(___xxtofl@arg+3)^0,w,c
  5301   001A56  6E14               	movwf	(??___xxtofl+3)^0,c
  5302   001A58  5011               	movf	??___xxtofl^0,w,c
  5303   001A5A  1012               	iorwf	(??___xxtofl+1)^0,w,c
  5304   001A5C  1013               	iorwf	(??___xxtofl+2)^0,w,c
  5305   001A5E  1014               	iorwf	(??___xxtofl+3)^0,w,c
  5306   001A60  A4D8               	btfss	status,2,c
  5307   001A62  EF35  F00D         	goto	u4051
  5308   001A66  EF37  F00D         	goto	u4050
  5309   001A6A                     u4051:
  5310   001A6A  EF1A  F00D         	goto	l5054
  5311   001A6E                     u4050:
  5312   001A6E  EF45  F00D         	goto	l1640
  5313   001A72                     l5058:
  5314   001A72  2A16               	incf	___xxtofl@exp^0,f,c
  5315   001A74  0E01               	movlw	1
  5316   001A76  2617               	addwf	___xxtofl@arg^0,f,c
  5317   001A78  0E00               	movlw	0
  5318   001A7A  2218               	addwfc	(___xxtofl@arg+1)^0,f,c
  5319   001A7C  2219               	addwfc	(___xxtofl@arg+2)^0,f,c
  5320   001A7E  221A               	addwfc	(___xxtofl@arg+3)^0,f,c
  5321   001A80  90D8               	bcf	status,0,c
  5322   001A82  321A               	rrcf	(___xxtofl@arg+3)^0,f,c
  5323   001A84  3219               	rrcf	(___xxtofl@arg+2)^0,f,c
  5324   001A86  3218               	rrcf	(___xxtofl@arg+1)^0,f,c
  5325   001A88  3217               	rrcf	___xxtofl@arg^0,f,c
  5326   001A8A                     l1640:
  5327   001A8A  0E00               	movlw	0
  5328   001A8C  1417               	andwf	___xxtofl@arg^0,w,c
  5329   001A8E  6E11               	movwf	??___xxtofl^0,c
  5330   001A90  0E00               	movlw	0
  5331   001A92  1418               	andwf	(___xxtofl@arg+1)^0,w,c
  5332   001A94  6E12               	movwf	(??___xxtofl+1)^0,c
  5333   001A96  0E00               	movlw	0
  5334   001A98  1419               	andwf	(___xxtofl@arg+2)^0,w,c
  5335   001A9A  6E13               	movwf	(??___xxtofl+2)^0,c
  5336   001A9C  0EFF               	movlw	255
  5337   001A9E  141A               	andwf	(___xxtofl@arg+3)^0,w,c
  5338   001AA0  6E14               	movwf	(??___xxtofl+3)^0,c
  5339   001AA2  5011               	movf	??___xxtofl^0,w,c
  5340   001AA4  1012               	iorwf	(??___xxtofl+1)^0,w,c
  5341   001AA6  1013               	iorwf	(??___xxtofl+2)^0,w,c
  5342   001AA8  1014               	iorwf	(??___xxtofl+3)^0,w,c
  5343   001AAA  A4D8               	btfss	status,2,c
  5344   001AAC  EF5A  F00D         	goto	u4061
  5345   001AB0  EF5C  F00D         	goto	u4060
  5346   001AB4                     u4061:
  5347   001AB4  EF39  F00D         	goto	l5058
  5348   001AB8                     u4060:
  5349   001AB8  EF64  F00D         	goto	l5066
  5350   001ABC                     l5064:
  5351   001ABC  0616               	decf	___xxtofl@exp^0,f,c
  5352   001ABE  90D8               	bcf	status,0,c
  5353   001AC0  3617               	rlcf	___xxtofl@arg^0,f,c
  5354   001AC2  3618               	rlcf	(___xxtofl@arg+1)^0,f,c
  5355   001AC4  3619               	rlcf	(___xxtofl@arg+2)^0,f,c
  5356   001AC6  361A               	rlcf	(___xxtofl@arg+3)^0,f,c
  5357   001AC8                     l5066:
  5358   001AC8  BE19               	btfsc	(___xxtofl@arg+2)^0,7,c
  5359   001ACA  EF69  F00D         	goto	u4071
  5360   001ACE  EF6B  F00D         	goto	u4070
  5361   001AD2                     u4071:
  5362   001AD2  EF73  F00D         	goto	l1647
  5363   001AD6                     u4070:
  5364   001AD6  0E02               	movlw	2
  5365   001AD8  6016               	cpfslt	___xxtofl@exp^0,c
  5366   001ADA  EF71  F00D         	goto	u4081
  5367   001ADE  EF73  F00D         	goto	u4080
  5368   001AE2                     u4081:
  5369   001AE2  EF5E  F00D         	goto	l5064
  5370   001AE6                     u4080:
  5371   001AE6                     l1647:
  5372   001AE6  B016               	btfsc	___xxtofl@exp^0,0,c
  5373   001AE8  EF78  F00D         	goto	u4091
  5374   001AEC  EF7A  F00D         	goto	u4090
  5375   001AF0                     u4091:
  5376   001AF0  EF7B  F00D         	goto	l5072
  5377   001AF4                     u4090:
  5378   001AF4  9E19               	bcf	(___xxtofl@arg+2)^0,7,c
  5379   001AF6                     l5072:
  5380   001AF6  90D8               	bcf	status,0,c
  5381   001AF8  3216               	rrcf	___xxtofl@exp^0,f,c
  5382   001AFA  C016  F011         	movff	___xxtofl@exp,??___xxtofl
  5383   001AFE  6A12               	clrf	(??___xxtofl+1)^0,c
  5384   001B00  6A13               	clrf	(??___xxtofl+2)^0,c
  5385   001B02  6A14               	clrf	(??___xxtofl+3)^0,c
  5386   001B04  C011  F014         	movff	??___xxtofl,??___xxtofl+3
  5387   001B08  6A13               	clrf	(??___xxtofl+2)^0,c
  5388   001B0A  6A12               	clrf	(??___xxtofl+1)^0,c
  5389   001B0C  6A11               	clrf	??___xxtofl^0,c
  5390   001B0E  5011               	movf	??___xxtofl^0,w,c
  5391   001B10  1217               	iorwf	___xxtofl@arg^0,f,c
  5392   001B12  5012               	movf	(??___xxtofl+1)^0,w,c
  5393   001B14  1218               	iorwf	(___xxtofl@arg+1)^0,f,c
  5394   001B16  5013               	movf	(??___xxtofl+2)^0,w,c
  5395   001B18  1219               	iorwf	(___xxtofl@arg+2)^0,f,c
  5396   001B1A  5014               	movf	(??___xxtofl+3)^0,w,c
  5397   001B1C  121A               	iorwf	(___xxtofl@arg+3)^0,f,c
  5398   001B1E  5015               	movf	___xxtofl@sign^0,w,c
  5399   001B20  B4D8               	btfsc	status,2,c
  5400   001B22  EF95  F00D         	goto	u4101
  5401   001B26  EF97  F00D         	goto	u4100
  5402   001B2A                     u4101:
  5403   001B2A  EF9F  F00D         	goto	l5082
  5404   001B2E                     u4100:
  5405   001B2E  BE10               	btfsc	(___xxtofl@val+3)^0,7,c
  5406   001B30  EF9E  F00D         	goto	u4110
  5407   001B34  EF9C  F00D         	goto	u4111
  5408   001B38                     u4111:
  5409   001B38  EF9F  F00D         	goto	l5082
  5410   001B3C                     u4110:
  5411   001B3C  8E1A               	bsf	(___xxtofl@arg+3)^0,7,c
  5412   001B3E                     l5082:
  5413   001B3E  C017  F00D         	movff	___xxtofl@arg,?___xxtofl
  5414   001B42  C018  F00E         	movff	___xxtofl@arg+1,?___xxtofl+1
  5415   001B46  C019  F00F         	movff	___xxtofl@arg+2,?___xxtofl+2
  5416   001B4A  C01A  F010         	movff	___xxtofl@arg+3,?___xxtofl+3
  5417   001B4E                     l1636:
  5418   001B4E  0012               	return		;funcret
  5419   001B50                     __end_of___xxtofl:
  5420                           	callstack 0
  5421                           
  5422 ;; *************** function ___lwdiv *****************
  5423 ;; Defined at:
  5424 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\lwdiv.c"
  5425 ;; Parameters:    Size  Location     Type
  5426 ;;  dividend        2   12[COMRAM] unsigned int 
  5427 ;;  divisor         2   14[COMRAM] unsigned int 
  5428 ;; Auto vars:     Size  Location     Type
  5429 ;;  quotient        2   16[COMRAM] unsigned int 
  5430 ;;  counter         1   18[COMRAM] unsigned char 
  5431 ;; Return value:  Size  Location     Type
  5432 ;;                  2   12[COMRAM] unsigned int 
  5433 ;; Registers used:
  5434 ;;		wreg, status,2, status,0
  5435 ;; Tracked objects:
  5436 ;;		On entry : 0/0
  5437 ;;		On exit  : 0/0
  5438 ;;		Unchanged: 0/0
  5439 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5440 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5441 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5442 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5443 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5444 ;;Total ram usage:        7 bytes
  5445 ;; Hardware stack levels used: 1
  5446 ;; Hardware stack levels required when called: 4
  5447 ;; This function calls:
  5448 ;;		Nothing
  5449 ;; This function is called by:
  5450 ;;		_main
  5451 ;; This function uses a non-reentrant model
  5452 ;;
  5453                           
  5454                           	psect	text33
  5455   002CBA                     __ptext33:
  5456                           	callstack 0
  5457   002CBA                     ___lwdiv:
  5458                           	callstack 26
  5459   002CBA  0E00               	movlw	0
  5460   002CBC  6E12               	movwf	(___lwdiv@quotient+1)^0,c
  5461   002CBE  0E00               	movlw	0
  5462   002CC0  6E11               	movwf	___lwdiv@quotient^0,c
  5463   002CC2  500F               	movf	___lwdiv@divisor^0,w,c
  5464   002CC4  1010               	iorwf	(___lwdiv@divisor+1)^0,w,c
  5465   002CC6  B4D8               	btfsc	status,2,c
  5466   002CC8  EF68  F016         	goto	u3991
  5467   002CCC  EF6A  F016         	goto	u3990
  5468   002CD0                     u3991:
  5469   002CD0  EF92  F016         	goto	l1469
  5470   002CD4                     u3990:
  5471   002CD4  0E01               	movlw	1
  5472   002CD6  6E13               	movwf	___lwdiv@counter^0,c
  5473   002CD8  EF72  F016         	goto	l5026
  5474   002CDC                     l5024:
  5475   002CDC  90D8               	bcf	status,0,c
  5476   002CDE  360F               	rlcf	___lwdiv@divisor^0,f,c
  5477   002CE0  3610               	rlcf	(___lwdiv@divisor+1)^0,f,c
  5478   002CE2  2A13               	incf	___lwdiv@counter^0,f,c
  5479   002CE4                     l5026:
  5480   002CE4  AE10               	btfss	(___lwdiv@divisor+1)^0,7,c
  5481   002CE6  EF77  F016         	goto	u4001
  5482   002CEA  EF79  F016         	goto	u4000
  5483   002CEE                     u4001:
  5484   002CEE  EF6E  F016         	goto	l5024
  5485   002CF2                     u4000:
  5486   002CF2                     l5028:
  5487   002CF2  90D8               	bcf	status,0,c
  5488   002CF4  3611               	rlcf	___lwdiv@quotient^0,f,c
  5489   002CF6  3612               	rlcf	(___lwdiv@quotient+1)^0,f,c
  5490   002CF8  500F               	movf	___lwdiv@divisor^0,w,c
  5491   002CFA  5C0D               	subwf	___lwdiv@dividend^0,w,c
  5492   002CFC  5010               	movf	(___lwdiv@divisor+1)^0,w,c
  5493   002CFE  580E               	subwfb	(___lwdiv@dividend+1)^0,w,c
  5494   002D00  A0D8               	btfss	status,0,c
  5495   002D02  EF85  F016         	goto	u4011
  5496   002D06  EF87  F016         	goto	u4010
  5497   002D0A                     u4011:
  5498   002D0A  EF8C  F016         	goto	l5036
  5499   002D0E                     u4010:
  5500   002D0E  500F               	movf	___lwdiv@divisor^0,w,c
  5501   002D10  5E0D               	subwf	___lwdiv@dividend^0,f,c
  5502   002D12  5010               	movf	(___lwdiv@divisor+1)^0,w,c
  5503   002D14  5A0E               	subwfb	(___lwdiv@dividend+1)^0,f,c
  5504   002D16  8011               	bsf	___lwdiv@quotient^0,0,c
  5505   002D18                     l5036:
  5506   002D18  90D8               	bcf	status,0,c
  5507   002D1A  3210               	rrcf	(___lwdiv@divisor+1)^0,f,c
  5508   002D1C  320F               	rrcf	___lwdiv@divisor^0,f,c
  5509   002D1E  2E13               	decfsz	___lwdiv@counter^0,f,c
  5510   002D20  EF79  F016         	goto	l5028
  5511   002D24                     l1469:
  5512   002D24  C011  F00D         	movff	___lwdiv@quotient,?___lwdiv
  5513   002D28  C012  F00E         	movff	___lwdiv@quotient+1,?___lwdiv+1
  5514   002D2C  0012               	return		;funcret
  5515   002D2E                     __end_of___lwdiv:
  5516                           	callstack 0
  5517                           
  5518 ;; *************** function ___fltol *****************
  5519 ;; Defined at:
  5520 ;;		line 43 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\fltol.c"
  5521 ;; Parameters:    Size  Location     Type
  5522 ;;  f1              4   51[COMRAM] unsigned int 
  5523 ;; Auto vars:     Size  Location     Type
  5524 ;;  exp1            1   60[COMRAM] unsigned char 
  5525 ;;  sign1           1   59[COMRAM] unsigned char 
  5526 ;; Return value:  Size  Location     Type
  5527 ;;                  4   51[COMRAM] long 
  5528 ;; Registers used:
  5529 ;;		wreg, status,2, status,0
  5530 ;; Tracked objects:
  5531 ;;		On entry : 0/0
  5532 ;;		On exit  : 0/0
  5533 ;;		Unchanged: 0/0
  5534 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5535 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5536 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5537 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5538 ;;      Totals:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5539 ;;Total ram usage:       10 bytes
  5540 ;; Hardware stack levels used: 1
  5541 ;; Hardware stack levels required when called: 4
  5542 ;; This function calls:
  5543 ;;		Nothing
  5544 ;; This function is called by:
  5545 ;;		_main
  5546 ;;		_Ultrasonic_Calculate_Distance
  5547 ;; This function uses a non-reentrant model
  5548 ;;
  5549                           
  5550                           	psect	text34
  5551   002324                     __ptext34:
  5552                           	callstack 0
  5553   002324                     ___fltol:
  5554                           	callstack 26
  5555   002324  3436               	rlcf	(___fltol@f1+2)^0,w,c
  5556   002326  3437               	rlcf	(___fltol@f1+3)^0,w,c
  5557   002328  6E3D               	movwf	___fltol@exp1^0,c
  5558   00232A  503D               	movf	___fltol@exp1^0,w,c
  5559   00232C  A4D8               	btfss	status,2,c
  5560   00232E  EF9B  F011         	goto	u3921
  5561   002332  EF9D  F011         	goto	u3920
  5562   002336                     u3921:
  5563   002336  EFA7  F011         	goto	l4980
  5564   00233A                     u3920:
  5565   00233A                     l4976:
  5566   00233A  0E00               	movlw	0
  5567   00233C  6E34               	movwf	?___fltol^0,c
  5568   00233E  0E00               	movlw	0
  5569   002340  6E35               	movwf	(?___fltol+1)^0,c
  5570   002342  0E00               	movlw	0
  5571   002344  6E36               	movwf	(?___fltol+2)^0,c
  5572   002346  0E00               	movlw	0
  5573   002348  6E37               	movwf	(?___fltol+3)^0,c
  5574   00234A  EF14  F012         	goto	l1275
  5575   00234E                     l4980:
  5576   00234E  C034  F038         	movff	___fltol@f1,??___fltol
  5577   002352  C035  F039         	movff	___fltol@f1+1,??___fltol+1
  5578   002356  C036  F03A         	movff	___fltol@f1+2,??___fltol+2
  5579   00235A  C037  F03B         	movff	___fltol@f1+3,??___fltol+3
  5580   00235E  0E20               	movlw	32
  5581   002360  EFB7  F011         	goto	u3930
  5582   002364                     u3935:
  5583   002364  90D8               	bcf	status,0,c
  5584   002366  323B               	rrcf	(??___fltol+3)^0,f,c
  5585   002368  323A               	rrcf	(??___fltol+2)^0,f,c
  5586   00236A  3239               	rrcf	(??___fltol+1)^0,f,c
  5587   00236C  3238               	rrcf	??___fltol^0,f,c
  5588   00236E                     u3930:
  5589   00236E  2EE8               	decfsz	wreg,f,c
  5590   002370  EFB2  F011         	goto	u3935
  5591   002374  5038               	movf	??___fltol^0,w,c
  5592   002376  6E3C               	movwf	___fltol@sign1^0,c
  5593   002378  8E36               	bsf	(___fltol@f1+2)^0,7,c
  5594   00237A  0EFF               	movlw	255
  5595   00237C  1634               	andwf	___fltol@f1^0,f,c
  5596   00237E  0EFF               	movlw	255
  5597   002380  1635               	andwf	(___fltol@f1+1)^0,f,c
  5598   002382  0EFF               	movlw	255
  5599   002384  1636               	andwf	(___fltol@f1+2)^0,f,c
  5600   002386  0E00               	movlw	0
  5601   002388  1637               	andwf	(___fltol@f1+3)^0,f,c
  5602   00238A  0E96               	movlw	150
  5603   00238C  5E3D               	subwf	___fltol@exp1^0,f,c
  5604   00238E  BE3D               	btfsc	___fltol@exp1^0,7,c
  5605   002390  EFCE  F011         	goto	u3940
  5606   002394  EFCC  F011         	goto	u3941
  5607   002398                     u3941:
  5608   002398  EFE4  F011         	goto	l5000
  5609   00239C                     u3940:
  5610   00239C  503D               	movf	___fltol@exp1^0,w,c
  5611   00239E  0A80               	xorlw	128
  5612   0023A0  0F97               	addlw	151
  5613   0023A2  B0D8               	btfsc	status,0,c
  5614   0023A4  EFD6  F011         	goto	u3951
  5615   0023A8  EFD8  F011         	goto	u3950
  5616   0023AC                     u3951:
  5617   0023AC  EFDA  F011         	goto	l4996
  5618   0023B0                     u3950:
  5619   0023B0  EF9D  F011         	goto	l4976
  5620   0023B4                     l4996:
  5621   0023B4  90D8               	bcf	status,0,c
  5622   0023B6  3237               	rrcf	(___fltol@f1+3)^0,f,c
  5623   0023B8  3236               	rrcf	(___fltol@f1+2)^0,f,c
  5624   0023BA  3235               	rrcf	(___fltol@f1+1)^0,f,c
  5625   0023BC  3234               	rrcf	___fltol@f1^0,f,c
  5626   0023BE  3E3D               	incfsz	___fltol@exp1^0,f,c
  5627   0023C0  EFDA  F011         	goto	l4996
  5628   0023C4  EFFC  F011         	goto	l5010
  5629   0023C8                     l5000:
  5630   0023C8  0E1F               	movlw	31
  5631   0023CA  643D               	cpfsgt	___fltol@exp1^0,c
  5632   0023CC  EFEA  F011         	goto	u3961
  5633   0023D0  EFEC  F011         	goto	u3960
  5634   0023D4                     u3961:
  5635   0023D4  EFF4  F011         	goto	l5008
  5636   0023D8                     u3960:
  5637   0023D8  EF9D  F011         	goto	l4976
  5638   0023DC                     l5006:
  5639   0023DC  90D8               	bcf	status,0,c
  5640   0023DE  3634               	rlcf	___fltol@f1^0,f,c
  5641   0023E0  3635               	rlcf	(___fltol@f1+1)^0,f,c
  5642   0023E2  3636               	rlcf	(___fltol@f1+2)^0,f,c
  5643   0023E4  3637               	rlcf	(___fltol@f1+3)^0,f,c
  5644   0023E6  063D               	decf	___fltol@exp1^0,f,c
  5645   0023E8                     l5008:
  5646   0023E8  503D               	movf	___fltol@exp1^0,w,c
  5647   0023EA  A4D8               	btfss	status,2,c
  5648   0023EC  EFFA  F011         	goto	u3971
  5649   0023F0  EFFC  F011         	goto	u3970
  5650   0023F4                     u3971:
  5651   0023F4  EFEE  F011         	goto	l5006
  5652   0023F8                     u3970:
  5653   0023F8                     l5010:
  5654   0023F8  503C               	movf	___fltol@sign1^0,w,c
  5655   0023FA  B4D8               	btfsc	status,2,c
  5656   0023FC  EF02  F012         	goto	u3981
  5657   002400  EF04  F012         	goto	u3980
  5658   002404                     u3981:
  5659   002404  EF0C  F012         	goto	l5014
  5660   002408                     u3980:
  5661   002408  1E37               	comf	(___fltol@f1+3)^0,f,c
  5662   00240A  1E36               	comf	(___fltol@f1+2)^0,f,c
  5663   00240C  1E35               	comf	(___fltol@f1+1)^0,f,c
  5664   00240E  6C34               	negf	___fltol@f1^0,c
  5665   002410  0E00               	movlw	0
  5666   002412  2235               	addwfc	(___fltol@f1+1)^0,f,c
  5667   002414  2236               	addwfc	(___fltol@f1+2)^0,f,c
  5668   002416  2237               	addwfc	(___fltol@f1+3)^0,f,c
  5669   002418                     l5014:
  5670   002418  C034  F034         	movff	___fltol@f1,?___fltol
  5671   00241C  C035  F035         	movff	___fltol@f1+1,?___fltol+1
  5672   002420  C036  F036         	movff	___fltol@f1+2,?___fltol+2
  5673   002424  C037  F037         	movff	___fltol@f1+3,?___fltol+3
  5674   002428                     l1275:
  5675   002428  0012               	return		;funcret
  5676   00242A                     __end_of___fltol:
  5677                           	callstack 0
  5678                           
  5679 ;; *************** function ___flmul *****************
  5680 ;; Defined at:
  5681 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\sprcmul.c"
  5682 ;; Parameters:    Size  Location     Type
  5683 ;;  b               4   26[COMRAM] long 
  5684 ;;  a               4   30[COMRAM] long 
  5685 ;; Auto vars:     Size  Location     Type
  5686 ;;  prod            4   45[COMRAM] struct .
  5687 ;;  grs             4   39[COMRAM] unsigned long 
  5688 ;;  temp            2   49[COMRAM] struct .
  5689 ;;  bexp            1   44[COMRAM] unsigned char 
  5690 ;;  aexp            1   43[COMRAM] unsigned char 
  5691 ;;  sign            1   38[COMRAM] unsigned char 
  5692 ;; Return value:  Size  Location     Type
  5693 ;;                  4   26[COMRAM] unsigned char 
  5694 ;; Registers used:
  5695 ;;		wreg, status,2, status,0, prodl, prodh
  5696 ;; Tracked objects:
  5697 ;;		On entry : 0/0
  5698 ;;		On exit  : 0/0
  5699 ;;		Unchanged: 0/0
  5700 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5701 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5702 ;;      Locals:        13       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5703 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5704 ;;      Totals:        25       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5705 ;;Total ram usage:       25 bytes
  5706 ;; Hardware stack levels used: 1
  5707 ;; Hardware stack levels required when called: 4
  5708 ;; This function calls:
  5709 ;;		Nothing
  5710 ;; This function is called by:
  5711 ;;		_main
  5712 ;; This function uses a non-reentrant model
  5713 ;;
  5714                           
  5715                           	psect	text35
  5716   00102C                     __ptext35:
  5717                           	callstack 0
  5718   00102C                     ___flmul:
  5719                           	callstack 26
  5720   00102C  501E               	movf	(___flmul@b+3)^0,w,c
  5721   00102E  0B80               	andlw	128
  5722   001030  6E27               	movwf	___flmul@sign^0,c
  5723   001032  501E               	movf	(___flmul@b+3)^0,w,c
  5724   001034  241E               	addwf	(___flmul@b+3)^0,w,c
  5725   001036  6E2D               	movwf	___flmul@bexp^0,c
  5726   001038  AE1D               	btfss	(___flmul@b+2)^0,7,c
  5727   00103A  EF21  F008         	goto	u3731
  5728   00103E  EF23  F008         	goto	u3730
  5729   001042                     u3731:
  5730   001042  EF24  F008         	goto	l4850
  5731   001046                     u3730:
  5732   001046  802D               	bsf	___flmul@bexp^0,0,c
  5733   001048                     l4850:
  5734   001048  502D               	movf	___flmul@bexp^0,w,c
  5735   00104A  B4D8               	btfsc	status,2,c
  5736   00104C  EF2A  F008         	goto	u3741
  5737   001050  EF2C  F008         	goto	u3740
  5738   001054                     u3741:
  5739   001054  EF3F  F008         	goto	l4858
  5740   001058                     u3740:
  5741   001058  282D               	incf	___flmul@bexp^0,w,c
  5742   00105A  A4D8               	btfss	status,2,c
  5743   00105C  EF32  F008         	goto	u3751
  5744   001060  EF34  F008         	goto	u3750
  5745   001064                     u3751:
  5746   001064  EF3C  F008         	goto	l4856
  5747   001068                     u3750:
  5748   001068  0E00               	movlw	0
  5749   00106A  6E1B               	movwf	___flmul@b^0,c
  5750   00106C  0E00               	movlw	0
  5751   00106E  6E1C               	movwf	(___flmul@b+1)^0,c
  5752   001070  0E00               	movlw	0
  5753   001072  6E1D               	movwf	(___flmul@b+2)^0,c
  5754   001074  0E00               	movlw	0
  5755   001076  6E1E               	movwf	(___flmul@b+3)^0,c
  5756   001078                     l4856:
  5757   001078  8E1D               	bsf	(___flmul@b+2)^0,7,c
  5758   00107A  EF47  F008         	goto	l4860
  5759   00107E                     l4858:
  5760   00107E  0E00               	movlw	0
  5761   001080  6E1B               	movwf	___flmul@b^0,c
  5762   001082  0E00               	movlw	0
  5763   001084  6E1C               	movwf	(___flmul@b+1)^0,c
  5764   001086  0E00               	movlw	0
  5765   001088  6E1D               	movwf	(___flmul@b+2)^0,c
  5766   00108A  0E00               	movlw	0
  5767   00108C  6E1E               	movwf	(___flmul@b+3)^0,c
  5768   00108E                     l4860:
  5769   00108E  5022               	movf	(___flmul@a+3)^0,w,c
  5770   001090  0B80               	andlw	128
  5771   001092  1A27               	xorwf	___flmul@sign^0,f,c
  5772   001094  5022               	movf	(___flmul@a+3)^0,w,c
  5773   001096  2422               	addwf	(___flmul@a+3)^0,w,c
  5774   001098  6E2C               	movwf	___flmul@aexp^0,c
  5775   00109A  AE21               	btfss	(___flmul@a+2)^0,7,c
  5776   00109C  EF52  F008         	goto	u3761
  5777   0010A0  EF54  F008         	goto	u3760
  5778   0010A4                     u3761:
  5779   0010A4  EF55  F008         	goto	l4868
  5780   0010A8                     u3760:
  5781   0010A8  802C               	bsf	___flmul@aexp^0,0,c
  5782   0010AA                     l4868:
  5783   0010AA  502C               	movf	___flmul@aexp^0,w,c
  5784   0010AC  B4D8               	btfsc	status,2,c
  5785   0010AE  EF5B  F008         	goto	u3771
  5786   0010B2  EF5D  F008         	goto	u3770
  5787   0010B6                     u3771:
  5788   0010B6  EF70  F008         	goto	l4876
  5789   0010BA                     u3770:
  5790   0010BA  282C               	incf	___flmul@aexp^0,w,c
  5791   0010BC  A4D8               	btfss	status,2,c
  5792   0010BE  EF63  F008         	goto	u3781
  5793   0010C2  EF65  F008         	goto	u3780
  5794   0010C6                     u3781:
  5795   0010C6  EF6D  F008         	goto	l4874
  5796   0010CA                     u3780:
  5797   0010CA  0E00               	movlw	0
  5798   0010CC  6E1F               	movwf	___flmul@a^0,c
  5799   0010CE  0E00               	movlw	0
  5800   0010D0  6E20               	movwf	(___flmul@a+1)^0,c
  5801   0010D2  0E00               	movlw	0
  5802   0010D4  6E21               	movwf	(___flmul@a+2)^0,c
  5803   0010D6  0E00               	movlw	0
  5804   0010D8  6E22               	movwf	(___flmul@a+3)^0,c
  5805   0010DA                     l4874:
  5806   0010DA  8E21               	bsf	(___flmul@a+2)^0,7,c
  5807   0010DC  EF78  F008         	goto	l1592
  5808   0010E0                     l4876:
  5809   0010E0  0E00               	movlw	0
  5810   0010E2  6E1F               	movwf	___flmul@a^0,c
  5811   0010E4  0E00               	movlw	0
  5812   0010E6  6E20               	movwf	(___flmul@a+1)^0,c
  5813   0010E8  0E00               	movlw	0
  5814   0010EA  6E21               	movwf	(___flmul@a+2)^0,c
  5815   0010EC  0E00               	movlw	0
  5816   0010EE  6E22               	movwf	(___flmul@a+3)^0,c
  5817   0010F0                     l1592:
  5818   0010F0  502C               	movf	___flmul@aexp^0,w,c
  5819   0010F2  B4D8               	btfsc	status,2,c
  5820   0010F4  EF7E  F008         	goto	u3791
  5821   0010F8  EF80  F008         	goto	u3790
  5822   0010FC                     u3791:
  5823   0010FC  EF88  F008         	goto	l4880
  5824   001100                     u3790:
  5825   001100  502D               	movf	___flmul@bexp^0,w,c
  5826   001102  A4D8               	btfss	status,2,c
  5827   001104  EF86  F008         	goto	u3801
  5828   001108  EF88  F008         	goto	u3800
  5829   00110C                     u3801:
  5830   00110C  EF92  F008         	goto	l4884
  5831   001110                     u3800:
  5832   001110                     l4880:
  5833   001110  0E00               	movlw	0
  5834   001112  6E1B               	movwf	?___flmul^0,c
  5835   001114  0E00               	movlw	0
  5836   001116  6E1C               	movwf	(?___flmul+1)^0,c
  5837   001118  0E00               	movlw	0
  5838   00111A  6E1D               	movwf	(?___flmul+2)^0,c
  5839   00111C  0E00               	movlw	0
  5840   00111E  6E1E               	movwf	(?___flmul+3)^0,c
  5841   001120  EF2A  F00A         	goto	l1596
  5842   001124                     l4884:
  5843   001124  5021               	movf	(___flmul@a+2)^0,w,c
  5844   001126  021B               	mulwf	___flmul@b^0,c
  5845   001128  CFF3 F032          	movff	prodl,___flmul@temp
  5846   00112C  CFF4 F033          	movff	prodh,___flmul@temp+1
  5847   001130  5032               	movf	___flmul@temp^0,w,c
  5848   001132  6E28               	movwf	___flmul@grs^0,c
  5849   001134  6A29               	clrf	(___flmul@grs+1)^0,c
  5850   001136  6A2A               	clrf	(___flmul@grs+2)^0,c
  5851   001138  6A2B               	clrf	(___flmul@grs+3)^0,c
  5852   00113A  5033               	movf	(___flmul@temp+1)^0,w,c
  5853   00113C  6E2E               	movwf	___flmul@prod^0,c
  5854   00113E  6A2F               	clrf	(___flmul@prod+1)^0,c
  5855   001140  6A30               	clrf	(___flmul@prod+2)^0,c
  5856   001142  6A31               	clrf	(___flmul@prod+3)^0,c
  5857   001144  5020               	movf	(___flmul@a+1)^0,w,c
  5858   001146  021C               	mulwf	(___flmul@b+1)^0,c
  5859   001148  CFF3 F032          	movff	prodl,___flmul@temp
  5860   00114C  CFF4 F033          	movff	prodh,___flmul@temp+1
  5861   001150  5032               	movf	___flmul@temp^0,w,c
  5862   001152  2628               	addwf	___flmul@grs^0,f,c
  5863   001154  0E00               	movlw	0
  5864   001156  2229               	addwfc	(___flmul@grs+1)^0,f,c
  5865   001158  222A               	addwfc	(___flmul@grs+2)^0,f,c
  5866   00115A  222B               	addwfc	(___flmul@grs+3)^0,f,c
  5867   00115C  5033               	movf	(___flmul@temp+1)^0,w,c
  5868   00115E  262E               	addwf	___flmul@prod^0,f,c
  5869   001160  0E00               	movlw	0
  5870   001162  222F               	addwfc	(___flmul@prod+1)^0,f,c
  5871   001164  2230               	addwfc	(___flmul@prod+2)^0,f,c
  5872   001166  2231               	addwfc	(___flmul@prod+3)^0,f,c
  5873   001168  501F               	movf	___flmul@a^0,w,c
  5874   00116A  021D               	mulwf	(___flmul@b+2)^0,c
  5875   00116C  CFF3 F032          	movff	prodl,___flmul@temp
  5876   001170  CFF4 F033          	movff	prodh,___flmul@temp+1
  5877   001174  5032               	movf	___flmul@temp^0,w,c
  5878   001176  2628               	addwf	___flmul@grs^0,f,c
  5879   001178  0E00               	movlw	0
  5880   00117A  2229               	addwfc	(___flmul@grs+1)^0,f,c
  5881   00117C  222A               	addwfc	(___flmul@grs+2)^0,f,c
  5882   00117E  222B               	addwfc	(___flmul@grs+3)^0,f,c
  5883   001180  5033               	movf	(___flmul@temp+1)^0,w,c
  5884   001182  262E               	addwf	___flmul@prod^0,f,c
  5885   001184  0E00               	movlw	0
  5886   001186  222F               	addwfc	(___flmul@prod+1)^0,f,c
  5887   001188  2230               	addwfc	(___flmul@prod+2)^0,f,c
  5888   00118A  2231               	addwfc	(___flmul@prod+3)^0,f,c
  5889   00118C  C02A  F02B         	movff	___flmul@grs+2,___flmul@grs+3
  5890   001190  C029  F02A         	movff	___flmul@grs+1,___flmul@grs+2
  5891   001194  C028  F029         	movff	___flmul@grs,___flmul@grs+1
  5892   001198  6A28               	clrf	___flmul@grs^0,c
  5893   00119A  501F               	movf	___flmul@a^0,w,c
  5894   00119C  021C               	mulwf	(___flmul@b+1)^0,c
  5895   00119E  CFF3 F032          	movff	prodl,___flmul@temp
  5896   0011A2  CFF4 F033          	movff	prodh,___flmul@temp+1
  5897   0011A6  5032               	movf	___flmul@temp^0,w,c
  5898   0011A8  2628               	addwf	___flmul@grs^0,f,c
  5899   0011AA  5033               	movf	(___flmul@temp+1)^0,w,c
  5900   0011AC  2229               	addwfc	(___flmul@grs+1)^0,f,c
  5901   0011AE  0E00               	movlw	0
  5902   0011B0  222A               	addwfc	(___flmul@grs+2)^0,f,c
  5903   0011B2  0E00               	movlw	0
  5904   0011B4  222B               	addwfc	(___flmul@grs+3)^0,f,c
  5905   0011B6  5020               	movf	(___flmul@a+1)^0,w,c
  5906   0011B8  021B               	mulwf	___flmul@b^0,c
  5907   0011BA  CFF3 F032          	movff	prodl,___flmul@temp
  5908   0011BE  CFF4 F033          	movff	prodh,___flmul@temp+1
  5909   0011C2  5032               	movf	___flmul@temp^0,w,c
  5910   0011C4  2628               	addwf	___flmul@grs^0,f,c
  5911   0011C6  5033               	movf	(___flmul@temp+1)^0,w,c
  5912   0011C8  2229               	addwfc	(___flmul@grs+1)^0,f,c
  5913   0011CA  0E00               	movlw	0
  5914   0011CC  222A               	addwfc	(___flmul@grs+2)^0,f,c
  5915   0011CE  0E00               	movlw	0
  5916   0011D0  222B               	addwfc	(___flmul@grs+3)^0,f,c
  5917   0011D2  C02A  F02B         	movff	___flmul@grs+2,___flmul@grs+3
  5918   0011D6  C029  F02A         	movff	___flmul@grs+1,___flmul@grs+2
  5919   0011DA  C028  F029         	movff	___flmul@grs,___flmul@grs+1
  5920   0011DE  6A28               	clrf	___flmul@grs^0,c
  5921   0011E0  501F               	movf	___flmul@a^0,w,c
  5922   0011E2  021B               	mulwf	___flmul@b^0,c
  5923   0011E4  CFF3 F032          	movff	prodl,___flmul@temp
  5924   0011E8  CFF4 F033          	movff	prodh,___flmul@temp+1
  5925   0011EC  5032               	movf	___flmul@temp^0,w,c
  5926   0011EE  2628               	addwf	___flmul@grs^0,f,c
  5927   0011F0  5033               	movf	(___flmul@temp+1)^0,w,c
  5928   0011F2  2229               	addwfc	(___flmul@grs+1)^0,f,c
  5929   0011F4  0E00               	movlw	0
  5930   0011F6  222A               	addwfc	(___flmul@grs+2)^0,f,c
  5931   0011F8  0E00               	movlw	0
  5932   0011FA  222B               	addwfc	(___flmul@grs+3)^0,f,c
  5933   0011FC  5021               	movf	(___flmul@a+2)^0,w,c
  5934   0011FE  021C               	mulwf	(___flmul@b+1)^0,c
  5935   001200  CFF3 F032          	movff	prodl,___flmul@temp
  5936   001204  CFF4 F033          	movff	prodh,___flmul@temp+1
  5937   001208  5032               	movf	___flmul@temp^0,w,c
  5938   00120A  262E               	addwf	___flmul@prod^0,f,c
  5939   00120C  5033               	movf	(___flmul@temp+1)^0,w,c
  5940   00120E  222F               	addwfc	(___flmul@prod+1)^0,f,c
  5941   001210  0E00               	movlw	0
  5942   001212  2230               	addwfc	(___flmul@prod+2)^0,f,c
  5943   001214  0E00               	movlw	0
  5944   001216  2231               	addwfc	(___flmul@prod+3)^0,f,c
  5945   001218  5020               	movf	(___flmul@a+1)^0,w,c
  5946   00121A  021D               	mulwf	(___flmul@b+2)^0,c
  5947   00121C  CFF3 F032          	movff	prodl,___flmul@temp
  5948   001220  CFF4 F033          	movff	prodh,___flmul@temp+1
  5949   001224  5032               	movf	___flmul@temp^0,w,c
  5950   001226  262E               	addwf	___flmul@prod^0,f,c
  5951   001228  5033               	movf	(___flmul@temp+1)^0,w,c
  5952   00122A  222F               	addwfc	(___flmul@prod+1)^0,f,c
  5953   00122C  0E00               	movlw	0
  5954   00122E  2230               	addwfc	(___flmul@prod+2)^0,f,c
  5955   001230  0E00               	movlw	0
  5956   001232  2231               	addwfc	(___flmul@prod+3)^0,f,c
  5957   001234  5021               	movf	(___flmul@a+2)^0,w,c
  5958   001236  021D               	mulwf	(___flmul@b+2)^0,c
  5959   001238  CFF3 F032          	movff	prodl,___flmul@temp
  5960   00123C  CFF4 F033          	movff	prodh,___flmul@temp+1
  5961   001240  5032               	movf	___flmul@temp^0,w,c
  5962   001242  6E23               	movwf	??___flmul^0,c
  5963   001244  5033               	movf	(___flmul@temp+1)^0,w,c
  5964   001246  6E24               	movwf	(??___flmul+1)^0,c
  5965   001248  6A25               	clrf	(??___flmul+2)^0,c
  5966   00124A  6A26               	clrf	(??___flmul+3)^0,c
  5967   00124C  C025  F026         	movff	??___flmul+2,??___flmul+3
  5968   001250  C024  F025         	movff	??___flmul+1,??___flmul+2
  5969   001254  C023  F024         	movff	??___flmul,??___flmul+1
  5970   001258  6A23               	clrf	??___flmul^0,c
  5971   00125A  5023               	movf	??___flmul^0,w,c
  5972   00125C  262E               	addwf	___flmul@prod^0,f,c
  5973   00125E  5024               	movf	(??___flmul+1)^0,w,c
  5974   001260  222F               	addwfc	(___flmul@prod+1)^0,f,c
  5975   001262  5025               	movf	(??___flmul+2)^0,w,c
  5976   001264  2230               	addwfc	(___flmul@prod+2)^0,f,c
  5977   001266  5026               	movf	(??___flmul+3)^0,w,c
  5978   001268  2231               	addwfc	(___flmul@prod+3)^0,f,c
  5979   00126A  C028  F023         	movff	___flmul@grs,??___flmul
  5980   00126E  C029  F024         	movff	___flmul@grs+1,??___flmul+1
  5981   001272  C02A  F025         	movff	___flmul@grs+2,??___flmul+2
  5982   001276  C02B  F026         	movff	___flmul@grs+3,??___flmul+3
  5983   00127A  0E19               	movlw	25
  5984   00127C  EF45  F009         	goto	u3810
  5985   001280                     u3815:
  5986   001280  90D8               	bcf	status,0,c
  5987   001282  3226               	rrcf	(??___flmul+3)^0,f,c
  5988   001284  3225               	rrcf	(??___flmul+2)^0,f,c
  5989   001286  3224               	rrcf	(??___flmul+1)^0,f,c
  5990   001288  3223               	rrcf	??___flmul^0,f,c
  5991   00128A                     u3810:
  5992   00128A  2EE8               	decfsz	wreg,f,c
  5993   00128C  EF40  F009         	goto	u3815
  5994   001290  5023               	movf	??___flmul^0,w,c
  5995   001292  262E               	addwf	___flmul@prod^0,f,c
  5996   001294  5024               	movf	(??___flmul+1)^0,w,c
  5997   001296  222F               	addwfc	(___flmul@prod+1)^0,f,c
  5998   001298  5025               	movf	(??___flmul+2)^0,w,c
  5999   00129A  2230               	addwfc	(___flmul@prod+2)^0,f,c
  6000   00129C  5026               	movf	(??___flmul+3)^0,w,c
  6001   00129E  2231               	addwfc	(___flmul@prod+3)^0,f,c
  6002   0012A0  C02A  F02B         	movff	___flmul@grs+2,___flmul@grs+3
  6003   0012A4  C029  F02A         	movff	___flmul@grs+1,___flmul@grs+2
  6004   0012A8  C028  F029         	movff	___flmul@grs,___flmul@grs+1
  6005   0012AC  6A28               	clrf	___flmul@grs^0,c
  6006   0012AE  502C               	movf	___flmul@aexp^0,w,c
  6007   0012B0  C02D  F023         	movff	___flmul@bexp,??___flmul
  6008   0012B4  6A24               	clrf	(??___flmul+1)^0,c
  6009   0012B6  2623               	addwf	??___flmul^0,f,c
  6010   0012B8  0E00               	movlw	0
  6011   0012BA  2224               	addwfc	(??___flmul+1)^0,f,c
  6012   0012BC  0E82               	movlw	130
  6013   0012BE  2423               	addwf	??___flmul^0,w,c
  6014   0012C0  6E32               	movwf	___flmul@temp^0,c
  6015   0012C2  0EFF               	movlw	255
  6016   0012C4  2024               	addwfc	(??___flmul+1)^0,w,c
  6017   0012C6  6E33               	movwf	(___flmul@temp+1)^0,c
  6018   0012C8  EF7B  F009         	goto	l4932
  6019   0012CC                     l4926:
  6020   0012CC  90D8               	bcf	status,0,c
  6021   0012CE  362E               	rlcf	___flmul@prod^0,f,c
  6022   0012D0  362F               	rlcf	(___flmul@prod+1)^0,f,c
  6023   0012D2  3630               	rlcf	(___flmul@prod+2)^0,f,c
  6024   0012D4  3631               	rlcf	(___flmul@prod+3)^0,f,c
  6025   0012D6  AE2B               	btfss	(___flmul@grs+3)^0,7,c
  6026   0012D8  EF70  F009         	goto	u3821
  6027   0012DC  EF72  F009         	goto	u3820
  6028   0012E0                     u3821:
  6029   0012E0  EF73  F009         	goto	l1599
  6030   0012E4                     u3820:
  6031   0012E4  802E               	bsf	___flmul@prod^0,0,c
  6032   0012E6                     l1599:
  6033   0012E6  90D8               	bcf	status,0,c
  6034   0012E8  3628               	rlcf	___flmul@grs^0,f,c
  6035   0012EA  3629               	rlcf	(___flmul@grs+1)^0,f,c
  6036   0012EC  362A               	rlcf	(___flmul@grs+2)^0,f,c
  6037   0012EE  362B               	rlcf	(___flmul@grs+3)^0,f,c
  6038   0012F0  0632               	decf	___flmul@temp^0,f,c
  6039   0012F2  A0D8               	btfss	status,0,c
  6040   0012F4  0633               	decf	(___flmul@temp+1)^0,f,c
  6041   0012F6                     l4932:
  6042   0012F6  AE30               	btfss	(___flmul@prod+2)^0,7,c
  6043   0012F8  EF80  F009         	goto	u3831
  6044   0012FC  EF82  F009         	goto	u3830
  6045   001300                     u3831:
  6046   001300  EF66  F009         	goto	l4926
  6047   001304                     u3830:
  6048   001304  0E00               	movlw	0
  6049   001306  6E2C               	movwf	___flmul@aexp^0,c
  6050   001308  AE2B               	btfss	(___flmul@grs+3)^0,7,c
  6051   00130A  EF89  F009         	goto	u3841
  6052   00130E  EF8B  F009         	goto	u3840
  6053   001312                     u3841:
  6054   001312  EFAF  F009         	goto	l1601
  6055   001316                     u3840:
  6056   001316  0EFF               	movlw	255
  6057   001318  1428               	andwf	___flmul@grs^0,w,c
  6058   00131A  6E23               	movwf	??___flmul^0,c
  6059   00131C  0EFF               	movlw	255
  6060   00131E  1429               	andwf	(___flmul@grs+1)^0,w,c
  6061   001320  6E24               	movwf	(??___flmul+1)^0,c
  6062   001322  0EFF               	movlw	255
  6063   001324  142A               	andwf	(___flmul@grs+2)^0,w,c
  6064   001326  6E25               	movwf	(??___flmul+2)^0,c
  6065   001328  0E7F               	movlw	127
  6066   00132A  142B               	andwf	(___flmul@grs+3)^0,w,c
  6067   00132C  6E26               	movwf	(??___flmul+3)^0,c
  6068   00132E  5023               	movf	??___flmul^0,w,c
  6069   001330  1024               	iorwf	(??___flmul+1)^0,w,c
  6070   001332  1025               	iorwf	(??___flmul+2)^0,w,c
  6071   001334  1026               	iorwf	(??___flmul+3)^0,w,c
  6072   001336  B4D8               	btfsc	status,2,c
  6073   001338  EFA0  F009         	goto	u3851
  6074   00133C  EFA2  F009         	goto	u3850
  6075   001340                     u3851:
  6076   001340  EFA6  F009         	goto	l1602
  6077   001344                     u3850:
  6078   001344                     l4940:
  6079   001344  0E01               	movlw	1
  6080   001346  6E2C               	movwf	___flmul@aexp^0,c
  6081   001348  EFAF  F009         	goto	l1601
  6082   00134C                     l1602:
  6083   00134C  A02E               	btfss	___flmul@prod^0,0,c
  6084   00134E  EFAB  F009         	goto	u3861
  6085   001352  EFAD  F009         	goto	u3860
  6086   001356                     u3861:
  6087   001356  EFAF  F009         	goto	l1601
  6088   00135A                     u3860:
  6089   00135A  EFA2  F009         	goto	l4940
  6090   00135E                     l1601:
  6091   00135E  502C               	movf	___flmul@aexp^0,w,c
  6092   001360  B4D8               	btfsc	status,2,c
  6093   001362  EFB5  F009         	goto	u3871
  6094   001366  EFB7  F009         	goto	u3870
  6095   00136A                     u3871:
  6096   00136A  EFDB  F009         	goto	l4952
  6097   00136E                     u3870:
  6098   00136E  0E01               	movlw	1
  6099   001370  262E               	addwf	___flmul@prod^0,f,c
  6100   001372  0E00               	movlw	0
  6101   001374  222F               	addwfc	(___flmul@prod+1)^0,f,c
  6102   001376  2230               	addwfc	(___flmul@prod+2)^0,f,c
  6103   001378  2231               	addwfc	(___flmul@prod+3)^0,f,c
  6104   00137A  A031               	btfss	(___flmul@prod+3)^0,0,c
  6105   00137C  EFC2  F009         	goto	u3881
  6106   001380  EFC4  F009         	goto	u3880
  6107   001384                     u3881:
  6108   001384  EFDB  F009         	goto	l4952
  6109   001388                     u3880:
  6110   001388  C02E  F023         	movff	___flmul@prod,??___flmul
  6111   00138C  C02F  F024         	movff	___flmul@prod+1,??___flmul+1
  6112   001390  C030  F025         	movff	___flmul@prod+2,??___flmul+2
  6113   001394  C031  F026         	movff	___flmul@prod+3,??___flmul+3
  6114   001398  3426               	rlcf	(??___flmul+3)^0,w,c
  6115   00139A  3226               	rrcf	(??___flmul+3)^0,f,c
  6116   00139C  3225               	rrcf	(??___flmul+2)^0,f,c
  6117   00139E  3224               	rrcf	(??___flmul+1)^0,f,c
  6118   0013A0  3223               	rrcf	??___flmul^0,f,c
  6119   0013A2  C023  F02E         	movff	??___flmul,___flmul@prod
  6120   0013A6  C024  F02F         	movff	??___flmul+1,___flmul@prod+1
  6121   0013AA  C025  F030         	movff	??___flmul+2,___flmul@prod+2
  6122   0013AE  C026  F031         	movff	??___flmul+3,___flmul@prod+3
  6123   0013B2  4A32               	infsnz	___flmul@temp^0,f,c
  6124   0013B4  2A33               	incf	(___flmul@temp+1)^0,f,c
  6125   0013B6                     l4952:
  6126   0013B6  BE33               	btfsc	(___flmul@temp+1)^0,7,c
  6127   0013B8  EFE6  F009         	goto	u3891
  6128   0013BC  5033               	movf	(___flmul@temp+1)^0,w,c
  6129   0013BE  E108               	bnz	u3890
  6130   0013C0  2832               	incf	___flmul@temp^0,w,c
  6131   0013C2  A0D8               	btfss	status,0,c
  6132   0013C4  EFE6  F009         	goto	u3891
  6133   0013C8  EFE8  F009         	goto	u3890
  6134   0013CC                     u3891:
  6135   0013CC  EFF2  F009         	goto	l4956
  6136   0013D0                     u3890:
  6137   0013D0  0E00               	movlw	0
  6138   0013D2  6E2E               	movwf	___flmul@prod^0,c
  6139   0013D4  0E00               	movlw	0
  6140   0013D6  6E2F               	movwf	(___flmul@prod+1)^0,c
  6141   0013D8  0E80               	movlw	128
  6142   0013DA  6E30               	movwf	(___flmul@prod+2)^0,c
  6143   0013DC  0E7F               	movlw	127
  6144   0013DE  6E31               	movwf	(___flmul@prod+3)^0,c
  6145   0013E0  EF20  F00A         	goto	l4968
  6146   0013E4                     l4956:
  6147   0013E4  BE33               	btfsc	(___flmul@temp+1)^0,7,c
  6148   0013E6  EFFF  F009         	goto	u3900
  6149   0013EA  5033               	movf	(___flmul@temp+1)^0,w,c
  6150   0013EC  E106               	bnz	u3901
  6151   0013EE  0432               	decf	___flmul@temp^0,w,c
  6152   0013F0  B0D8               	btfsc	status,0,c
  6153   0013F2  EFFD  F009         	goto	u3901
  6154   0013F6  EFFF  F009         	goto	u3900
  6155   0013FA                     u3901:
  6156   0013FA  EF0B  F00A         	goto	l1609
  6157   0013FE                     u3900:
  6158   0013FE  0E00               	movlw	0
  6159   001400  6E2E               	movwf	___flmul@prod^0,c
  6160   001402  0E00               	movlw	0
  6161   001404  6E2F               	movwf	(___flmul@prod+1)^0,c
  6162   001406  0E00               	movlw	0
  6163   001408  6E30               	movwf	(___flmul@prod+2)^0,c
  6164   00140A  0E00               	movlw	0
  6165   00140C  6E31               	movwf	(___flmul@prod+3)^0,c
  6166   00140E  0E00               	movlw	0
  6167   001410  6E27               	movwf	___flmul@sign^0,c
  6168   001412  EF20  F00A         	goto	l4968
  6169   001416                     l1609:
  6170   001416  C032  F02D         	movff	___flmul@temp,___flmul@bexp
  6171   00141A  0EFF               	movlw	255
  6172   00141C  162E               	andwf	___flmul@prod^0,f,c
  6173   00141E  0EFF               	movlw	255
  6174   001420  162F               	andwf	(___flmul@prod+1)^0,f,c
  6175   001422  0E7F               	movlw	127
  6176   001424  1630               	andwf	(___flmul@prod+2)^0,f,c
  6177   001426  0E00               	movlw	0
  6178   001428  1631               	andwf	(___flmul@prod+3)^0,f,c
  6179   00142A  A02D               	btfss	___flmul@bexp^0,0,c
  6180   00142C  EF1A  F00A         	goto	u3911
  6181   001430  EF1C  F00A         	goto	u3910
  6182   001434                     u3911:
  6183   001434  EF1D  F00A         	goto	l4966
  6184   001438                     u3910:
  6185   001438  8E30               	bsf	(___flmul@prod+2)^0,7,c
  6186   00143A                     l4966:
  6187   00143A  90D8               	bcf	status,0,c
  6188   00143C  302D               	rrcf	___flmul@bexp^0,w,c
  6189   00143E  6E31               	movwf	(___flmul@prod+3)^0,c
  6190   001440                     l4968:
  6191   001440  5027               	movf	___flmul@sign^0,w,c
  6192   001442  1231               	iorwf	(___flmul@prod+3)^0,f,c
  6193   001444  C02E  F01B         	movff	___flmul@prod,?___flmul
  6194   001448  C02F  F01C         	movff	___flmul@prod+1,?___flmul+1
  6195   00144C  C030  F01D         	movff	___flmul@prod+2,?___flmul+2
  6196   001450  C031  F01E         	movff	___flmul@prod+3,?___flmul+3
  6197   001454                     l1596:
  6198   001454  0012               	return		;funcret
  6199   001456                     __end_of___flmul:
  6200                           	callstack 0
  6201                           
  6202 ;; *************** function _ADC_get_conversion_interrupt *****************
  6203 ;; Defined at:
  6204 ;;		line 214 in file "MCAL_Layer/ADC/hal_adc.c"
  6205 ;; Parameters:    Size  Location     Type
  6206 ;;  adc             2   19[COMRAM] PTR const struct .
  6207 ;;		 -> adc1(7), 
  6208 ;;  channel         1   21[COMRAM] enum E3034
  6209 ;; Auto vars:     Size  Location     Type
  6210 ;;  ret             1    0        unsigned char 
  6211 ;;  coversion_st    1   22[COMRAM] unsigned char 
  6212 ;; Return value:  Size  Location     Type
  6213 ;;                  1    wreg      unsigned char 
  6214 ;; Registers used:
  6215 ;;		wreg, status,2, status,0, cstack
  6216 ;; Tracked objects:
  6217 ;;		On entry : 0/0
  6218 ;;		On exit  : 0/0
  6219 ;;		Unchanged: 0/0
  6220 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6221 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6222 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6223 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6224 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6225 ;;Total ram usage:        4 bytes
  6226 ;; Hardware stack levels used: 1
  6227 ;; Hardware stack levels required when called: 6
  6228 ;; This function calls:
  6229 ;;		_ADC_SELECT_CHANNEL
  6230 ;;		_ADC_START_CONVERSION
  6231 ;; This function is called by:
  6232 ;;		_main
  6233 ;; This function uses a non-reentrant model
  6234 ;;
  6235                           
  6236                           	psect	text36
  6237   0030E6                     __ptext36:
  6238                           	callstack 0
  6239   0030E6                     _ADC_get_conversion_interrupt:
  6240                           	callstack 24
  6241   0030E6                     
  6242                           ;MCAL_Layer/ADC/hal_adc.c: 217:     uint8 coversion_status=0;
  6243   0030E6  0E00               	movlw	0
  6244   0030E8  6E17               	movwf	ADC_get_conversion_interrupt@coversion_status^0,c
  6245   0030EA                     
  6246                           ;MCAL_Layer/ADC/hal_adc.c: 218:     if(((void*)0)==adc)
  6247   0030EA  5014               	movf	ADC_get_conversion_interrupt@adc^0,w,c
  6248   0030EC  1015               	iorwf	(ADC_get_conversion_interrupt@adc+1)^0,w,c
  6249   0030EE  A4D8               	btfss	status,2,c
  6250   0030F0  EF7C  F018         	goto	u3631
  6251   0030F4  EF7E  F018         	goto	u3630
  6252   0030F8                     u3631:
  6253   0030F8  EF80  F018         	goto	l4710
  6254   0030FC                     u3630:
  6255   0030FC                     
  6256                           ;MCAL_Layer/ADC/hal_adc.c: 221:     }
  6257   0030FC  EF8E  F018         	goto	l4712
  6258   003100                     l4710:
  6259                           
  6260                           ;MCAL_Layer/ADC/hal_adc.c: 223:     {;MCAL_Layer/ADC/hal_adc.c: 225:         ADC_SELECT_
      +                          CHANNEL(adc,channel);
  6261   003100  C014  F010         	movff	ADC_get_conversion_interrupt@adc,ADC_SELECT_CHANNEL@adc
  6262   003104  C015  F011         	movff	ADC_get_conversion_interrupt@adc+1,ADC_SELECT_CHANNEL@adc+1
  6263   003108  C016  F012         	movff	ADC_get_conversion_interrupt@channel,ADC_SELECT_CHANNEL@channel
  6264   00310C  ECC3  F018         	call	_ADC_SELECT_CHANNEL	;wreg free
  6265                           
  6266                           ;MCAL_Layer/ADC/hal_adc.c: 227:         ADC_START_CONVERSION(adc);
  6267   003110  C014  F00D         	movff	ADC_get_conversion_interrupt@adc,ADC_START_CONVERSION@adc
  6268   003114  C015  F00E         	movff	ADC_get_conversion_interrupt@adc+1,ADC_START_CONVERSION@adc+1
  6269   003118  EC06  F019         	call	_ADC_START_CONVERSION	;wreg free
  6270   00311C                     l4712:
  6271                           
  6272                           ;MCAL_Layer/ADC/hal_adc.c: 231:     return ret;
  6273   00311C  0E00               	movlw	0
  6274   00311E  0012               	return		;funcret
  6275   003120                     __end_of_ADC_get_conversion_interrupt:
  6276                           	callstack 0
  6277                           
  6278 ;; *************** function _ADC_START_CONVERSION *****************
  6279 ;; Defined at:
  6280 ;;		line 117 in file "MCAL_Layer/ADC/hal_adc.c"
  6281 ;; Parameters:    Size  Location     Type
  6282 ;;  adc             2   12[COMRAM] PTR const struct .
  6283 ;;		 -> adc1(7), 
  6284 ;; Auto vars:     Size  Location     Type
  6285 ;;  ret             1    0        unsigned char 
  6286 ;; Return value:  Size  Location     Type
  6287 ;;                  1    wreg      unsigned char 
  6288 ;; Registers used:
  6289 ;;		wreg, status,2, status,0
  6290 ;; Tracked objects:
  6291 ;;		On entry : 0/0
  6292 ;;		On exit  : 0/0
  6293 ;;		Unchanged: 0/0
  6294 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6295 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6296 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6297 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6298 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6299 ;;Total ram usage:        2 bytes
  6300 ;; Hardware stack levels used: 1
  6301 ;; Hardware stack levels required when called: 4
  6302 ;; This function calls:
  6303 ;;		Nothing
  6304 ;; This function is called by:
  6305 ;;		_ADC_get_conversion_interrupt
  6306 ;;		_ADC_get_conversion_blocking
  6307 ;; This function uses a non-reentrant model
  6308 ;;
  6309                           
  6310                           	psect	text37
  6311   00320C                     __ptext37:
  6312                           	callstack 0
  6313   00320C                     _ADC_START_CONVERSION:
  6314                           	callstack 25
  6315   00320C                     
  6316                           ;MCAL_Layer/ADC/hal_adc.c: 120:     if(((void*)0)==adc)
  6317   00320C  500D               	movf	ADC_START_CONVERSION@adc^0,w,c
  6318   00320E  100E               	iorwf	(ADC_START_CONVERSION@adc+1)^0,w,c
  6319   003210  A4D8               	btfss	status,2,c
  6320   003212  EF0D  F019         	goto	u3531
  6321   003216  EF0F  F019         	goto	u3530
  6322   00321A                     u3531:
  6323   00321A  EF11  F019         	goto	l407
  6324   00321E                     u3530:
  6325   00321E                     
  6326                           ;MCAL_Layer/ADC/hal_adc.c: 123:     }
  6327   00321E  EF12  F019         	goto	l409
  6328   003222                     l407:
  6329                           
  6330                           ;MCAL_Layer/ADC/hal_adc.c: 125:     {;MCAL_Layer/ADC/hal_adc.c: 126:         (ADCON0bits
      +                          .GODONE=1);
  6331   003222  82C2               	bsf	194,1,c	;volatile
  6332   003224                     l409:
  6333   003224  0012               	return		;funcret
  6334   003226                     __end_of_ADC_START_CONVERSION:
  6335                           	callstack 0
  6336                           
  6337 ;; *************** function _ADC_SELECT_CHANNEL *****************
  6338 ;; Defined at:
  6339 ;;		line 95 in file "MCAL_Layer/ADC/hal_adc.c"
  6340 ;; Parameters:    Size  Location     Type
  6341 ;;  adc             2   15[COMRAM] PTR const struct .
  6342 ;;		 -> adc1(7), 
  6343 ;;  channel         1   17[COMRAM] enum E3034
  6344 ;; Auto vars:     Size  Location     Type
  6345 ;;  ret             1    0        unsigned char 
  6346 ;; Return value:  Size  Location     Type
  6347 ;;                  1    wreg      unsigned char 
  6348 ;; Registers used:
  6349 ;;		wreg, status,2, status,0, cstack
  6350 ;; Tracked objects:
  6351 ;;		On entry : 0/0
  6352 ;;		On exit  : 0/0
  6353 ;;		Unchanged: 0/0
  6354 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6355 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6356 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6357 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6358 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6359 ;;Total ram usage:        4 bytes
  6360 ;; Hardware stack levels used: 1
  6361 ;; Hardware stack levels required when called: 5
  6362 ;; This function calls:
  6363 ;;		_adc_input_channel_port_configuration
  6364 ;; This function is called by:
  6365 ;;		_ADC_get_conversion_interrupt
  6366 ;;		_ADC_get_conversion_blocking
  6367 ;; This function uses a non-reentrant model
  6368 ;;
  6369                           
  6370                           	psect	text38
  6371   003186                     __ptext38:
  6372                           	callstack 0
  6373   003186                     _ADC_SELECT_CHANNEL:
  6374                           	callstack 24
  6375   003186                     
  6376                           ;MCAL_Layer/ADC/hal_adc.c: 98:     if(((void*)0)==adc)
  6377   003186  5010               	movf	ADC_SELECT_CHANNEL@adc^0,w,c
  6378   003188  1011               	iorwf	(ADC_SELECT_CHANNEL@adc+1)^0,w,c
  6379   00318A  A4D8               	btfss	status,2,c
  6380   00318C  EFCA  F018         	goto	u3521
  6381   003190  EFCC  F018         	goto	u3520
  6382   003194                     u3521:
  6383   003194  EFCE  F018         	goto	l4584
  6384   003198                     u3520:
  6385   003198                     
  6386                           ;MCAL_Layer/ADC/hal_adc.c: 101:     }
  6387   003198  EFDA  F018         	goto	l404
  6388   00319C                     l4584:
  6389                           
  6390                           ;MCAL_Layer/ADC/hal_adc.c: 103:     {;MCAL_Layer/ADC/hal_adc.c: 105:         ADCON0bits.
      +                          CHS=channel;
  6391   00319C  C012  F013         	movff	ADC_SELECT_CHANNEL@channel,??_ADC_SELECT_CHANNEL
  6392   0031A0  4613               	rlncf	??_ADC_SELECT_CHANNEL^0,f,c
  6393   0031A2  4613               	rlncf	??_ADC_SELECT_CHANNEL^0,f,c
  6394   0031A4  50C2               	movf	194,w,c	;volatile
  6395   0031A6  1813               	xorwf	??_ADC_SELECT_CHANNEL^0,w,c
  6396   0031A8  0BC3               	andlw	-61
  6397   0031AA  1813               	xorwf	??_ADC_SELECT_CHANNEL^0,w,c
  6398   0031AC  6EC2               	movwf	194,c	;volatile
  6399   0031AE                     
  6400                           ;MCAL_Layer/ADC/hal_adc.c: 106:         adc_input_channel_port_configuration(channel);
  6401   0031AE  5012               	movf	ADC_SELECT_CHANNEL@channel^0,w,c
  6402   0031B0  EC82  F012         	call	_adc_input_channel_port_configuration
  6403   0031B4                     l404:
  6404   0031B4  0012               	return		;funcret
  6405   0031B6                     __end_of_ADC_SELECT_CHANNEL:
  6406                           	callstack 0
  6407                           
  6408 ;; *************** function _adc_input_channel_port_configuration *****************
  6409 ;; Defined at:
  6410 ;;		line 237 in file "MCAL_Layer/ADC/hal_adc.c"
  6411 ;; Parameters:    Size  Location     Type
  6412 ;;  channel         1    wreg     const enum E3034
  6413 ;; Auto vars:     Size  Location     Type
  6414 ;;  channel         1   14[COMRAM] const enum E3034
  6415 ;;  ret             1    0        unsigned char 
  6416 ;; Return value:  Size  Location     Type
  6417 ;;                  1    wreg      void 
  6418 ;; Registers used:
  6419 ;;		wreg, status,2, status,0
  6420 ;; Tracked objects:
  6421 ;;		On entry : 0/0
  6422 ;;		On exit  : 0/0
  6423 ;;		Unchanged: 0/0
  6424 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6425 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6426 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6427 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6428 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6429 ;;Total ram usage:        3 bytes
  6430 ;; Hardware stack levels used: 1
  6431 ;; Hardware stack levels required when called: 4
  6432 ;; This function calls:
  6433 ;;		Nothing
  6434 ;; This function is called by:
  6435 ;;		_ADC_INIT
  6436 ;;		_ADC_SELECT_CHANNEL
  6437 ;; This function uses a non-reentrant model
  6438 ;;
  6439                           
  6440                           	psect	text39
  6441   002504                     __ptext39:
  6442                           	callstack 0
  6443   002504                     _adc_input_channel_port_configuration:
  6444                           	callstack 24
  6445                           
  6446                           ;incstack = 0
  6447                           ;adc_input_channel_port_configuration@channel stored from wreg
  6448   002504  6E0F               	movwf	adc_input_channel_port_configuration@channel^0,c
  6449   002506                     
  6450                           ;MCAL_Layer/ADC/hal_adc.c: 242:         switch(channel)
  6451   002506  EFAC  F012         	goto	l4352
  6452   00250A                     l4326:
  6453   00250A  8092               	bsf	146,0,c	;volatile
  6454   00250C  EFED  F012         	goto	l4354
  6455   002510                     l4328:
  6456   002510  8292               	bsf	146,1,c	;volatile
  6457   002512  EFED  F012         	goto	l4354
  6458   002516                     l4330:
  6459   002516  8492               	bsf	146,2,c	;volatile
  6460   002518  EFED  F012         	goto	l4354
  6461   00251C                     l4332:
  6462   00251C  8692               	bsf	146,3,c	;volatile
  6463   00251E  EFED  F012         	goto	l4354
  6464   002522                     l4334:
  6465   002522  8892               	bsf	146,4,c	;volatile
  6466   002524  EFED  F012         	goto	l4354
  6467   002528                     l4336:
  6468   002528  8096               	bsf	150,0,c	;volatile
  6469   00252A  EFED  F012         	goto	l4354
  6470   00252E                     l4338:
  6471   00252E  8296               	bsf	150,1,c	;volatile
  6472   002530  EFED  F012         	goto	l4354
  6473   002534                     l4340:
  6474   002534  8496               	bsf	150,2,c	;volatile
  6475   002536  EFED  F012         	goto	l4354
  6476   00253A                     l4342:
  6477   00253A  8493               	bsf	147,2,c	;volatile
  6478   00253C  EFED  F012         	goto	l4354
  6479   002540                     l4344:
  6480   002540  8693               	bsf	147,3,c	;volatile
  6481   002542  EFED  F012         	goto	l4354
  6482   002546                     l4346:
  6483   002546  8293               	bsf	147,1,c	;volatile
  6484   002548  EFED  F012         	goto	l4354
  6485   00254C                     l4348:
  6486   00254C  8893               	bsf	147,4,c	;volatile
  6487   00254E  EFED  F012         	goto	l4354
  6488   002552                     l4350:
  6489   002552  8093               	bsf	147,0,c	;volatile
  6490   002554  EFED  F012         	goto	l4354
  6491   002558                     l4352:
  6492   002558  500F               	movf	adc_input_channel_port_configuration@channel^0,w,c
  6493   00255A  6E0D               	movwf	??_adc_input_channel_port_configuration^0,c
  6494   00255C  6A0E               	clrf	(??_adc_input_channel_port_configuration+1)^0,c
  6495                           
  6496                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  6497                           ; Switch size 1, requested type "simple"
  6498                           ; Number of cases is 1, Range of values is 0 to 0
  6499                           ; switch strategies available:
  6500                           ; Name         Instructions Cycles
  6501                           ; simple_byte            4     3 (average)
  6502                           ;	Chosen strategy is simple_byte
  6503   00255E  500E               	movf	(??_adc_input_channel_port_configuration+1)^0,w,c
  6504   002560  0A00               	xorlw	0	; case 0
  6505   002562  B4D8               	btfsc	status,2,c
  6506   002564  EFB6  F012         	goto	l6530
  6507   002568  EFED  F012         	goto	l4354
  6508   00256C                     l6530:
  6509                           
  6510                           ; Switch size 1, requested type "simple"
  6511                           ; Number of cases is 13, Range of values is 0 to 12
  6512                           ; switch strategies available:
  6513                           ; Name         Instructions Cycles
  6514                           ; simple_byte           40    21 (average)
  6515                           ;	Chosen strategy is simple_byte
  6516   00256C  500D               	movf	??_adc_input_channel_port_configuration^0,w,c
  6517   00256E  0A00               	xorlw	0	; case 0
  6518   002570  B4D8               	btfsc	status,2,c
  6519   002572  EF85  F012         	goto	l4326
  6520   002576  0A01               	xorlw	1	; case 1
  6521   002578  B4D8               	btfsc	status,2,c
  6522   00257A  EF88  F012         	goto	l4328
  6523   00257E  0A03               	xorlw	3	; case 2
  6524   002580  B4D8               	btfsc	status,2,c
  6525   002582  EF8B  F012         	goto	l4330
  6526   002586  0A01               	xorlw	1	; case 3
  6527   002588  B4D8               	btfsc	status,2,c
  6528   00258A  EF8E  F012         	goto	l4332
  6529   00258E  0A07               	xorlw	7	; case 4
  6530   002590  B4D8               	btfsc	status,2,c
  6531   002592  EF91  F012         	goto	l4334
  6532   002596  0A01               	xorlw	1	; case 5
  6533   002598  B4D8               	btfsc	status,2,c
  6534   00259A  EF94  F012         	goto	l4336
  6535   00259E  0A03               	xorlw	3	; case 6
  6536   0025A0  B4D8               	btfsc	status,2,c
  6537   0025A2  EF97  F012         	goto	l4338
  6538   0025A6  0A01               	xorlw	1	; case 7
  6539   0025A8  B4D8               	btfsc	status,2,c
  6540   0025AA  EF9A  F012         	goto	l4340
  6541   0025AE  0A0F               	xorlw	15	; case 8
  6542   0025B0  B4D8               	btfsc	status,2,c
  6543   0025B2  EF9D  F012         	goto	l4342
  6544   0025B6  0A01               	xorlw	1	; case 9
  6545   0025B8  B4D8               	btfsc	status,2,c
  6546   0025BA  EFA0  F012         	goto	l4344
  6547   0025BE  0A03               	xorlw	3	; case 10
  6548   0025C0  B4D8               	btfsc	status,2,c
  6549   0025C2  EFA3  F012         	goto	l4346
  6550   0025C6  0A01               	xorlw	1	; case 11
  6551   0025C8  B4D8               	btfsc	status,2,c
  6552   0025CA  EFA6  F012         	goto	l4348
  6553   0025CE  0A07               	xorlw	7	; case 12
  6554   0025D0  B4D8               	btfsc	status,2,c
  6555   0025D2  EFA9  F012         	goto	l4350
  6556   0025D6  EFED  F012         	goto	l4354
  6557   0025DA                     l4354:
  6558   0025DA  0012               	return		;funcret
  6559   0025DC                     __end_of_adc_input_channel_port_configuration:
  6560                           	callstack 0
  6561                           
  6562 ;; *************** function _InterruptManager *****************
  6563 ;; Defined at:
  6564 ;;		line 32 in file "MCAL_Layer/Interrupt/mcal_interrupt_manager.c"
  6565 ;; Parameters:    Size  Location     Type
  6566 ;;		None
  6567 ;; Auto vars:     Size  Location     Type
  6568 ;;		None
  6569 ;; Return value:  Size  Location     Type
  6570 ;;                  1    wreg      void 
  6571 ;; Registers used:
  6572 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, cstack
  6573 ;; Tracked objects:
  6574 ;;		On entry : 0/0
  6575 ;;		On exit  : 0/0
  6576 ;;		Unchanged: 0/0
  6577 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6578 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6579 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6580 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6581 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6582 ;;Total ram usage:        4 bytes
  6583 ;; Hardware stack levels used: 1
  6584 ;; Hardware stack levels required when called: 3
  6585 ;; This function calls:
  6586 ;;		_ADC_ISR
  6587 ;;		_INT0_ISR
  6588 ;;		_INT1_ISR
  6589 ;;		_INT2_ISR
  6590 ;;		_RB4_ISR
  6591 ;;		_RB5_ISR
  6592 ;;		_RB6_ISR
  6593 ;;		_RB7_ISR
  6594 ;; This function is called by:
  6595 ;;		Interrupt level 2
  6596 ;; This function uses a non-reentrant model
  6597 ;;
  6598                           
  6599                           	psect	intcode
  6600   000008                     __pintcode:
  6601                           	callstack 0
  6602   000008                     _InterruptManager:
  6603                           	callstack 18
  6604                           
  6605                           ;incstack = 0
  6606   000008  8273               	bsf	int$flags,1,c	;set compiler interrupt flag (level 2)
  6607   00000A  ED2B  F00A         	call	int_func,f	;refresh shadow registers
  6608                           
  6609                           	psect	intcode_body
  6610   001456                     __pintcode_body:
  6611                           	callstack 18
  6612   001456                     int_func:
  6613                           	callstack 18
  6614   001456  0006               	pop		; remove dummy address from shadow register refresh
  6615   001458  CFFA F009          	movff	pclath,??_InterruptManager
  6616   00145C  CFFB F00A          	movff	pclatu,??_InterruptManager+1
  6617   001460  CFD9 F00B          	movff	fsr2l,??_InterruptManager+2
  6618   001464  CFDA F00C          	movff	fsr2h,??_InterruptManager+3
  6619   001468                     
  6620                           ;MCAL_Layer/Interrupt/mcal_interrupt_manager.c: 34:     if((1 == INTCONbits.INT0IE) && (
      +                          1 == INTCONbits.INT0IF)){
  6621   001468  A8F2               	btfss	242,4,c	;volatile
  6622   00146A  EF39  F00A         	goto	i2u487_41
  6623   00146E  EF3B  F00A         	goto	i2u487_40
  6624   001472                     i2u487_41:
  6625   001472  EF44  F00A         	goto	i2l885
  6626   001476                     i2u487_40:
  6627   001476  A2F2               	btfss	242,1,c	;volatile
  6628   001478  EF40  F00A         	goto	i2u488_41
  6629   00147C  EF42  F00A         	goto	i2u488_40
  6630   001480                     i2u488_41:
  6631   001480  EF44  F00A         	goto	i2l885
  6632   001484                     i2u488_40:
  6633   001484                     
  6634                           ;MCAL_Layer/Interrupt/mcal_interrupt_manager.c: 35:         INT0_ISR();
  6635   001484  EC56  F019         	call	_INT0_ISR	;wreg free
  6636   001488                     i2l885:
  6637                           
  6638                           ;MCAL_Layer/Interrupt/mcal_interrupt_manager.c: 38:     if((1 == INTCON3bits.INT1E) && (
      +                          1 == INTCON3bits.INT1F)){
  6639   001488  A6F0               	btfss	240,3,c	;volatile
  6640   00148A  EF49  F00A         	goto	i2u489_41
  6641   00148E  EF4B  F00A         	goto	i2u489_40
  6642   001492                     i2u489_41:
  6643   001492  EF54  F00A         	goto	i2l887
  6644   001496                     i2u489_40:
  6645   001496  A0F0               	btfss	240,0,c	;volatile
  6646   001498  EF50  F00A         	goto	i2u490_41
  6647   00149C  EF52  F00A         	goto	i2u490_40
  6648   0014A0                     i2u490_41:
  6649   0014A0  EF54  F00A         	goto	i2l887
  6650   0014A4                     i2u490_40:
  6651   0014A4                     
  6652                           ;MCAL_Layer/Interrupt/mcal_interrupt_manager.c: 39:         INT1_ISR();
  6653   0014A4  EC54  F019         	call	_INT1_ISR	;wreg free
  6654   0014A8                     i2l887:
  6655                           
  6656                           ;MCAL_Layer/Interrupt/mcal_interrupt_manager.c: 42:     if((1 == INTCON3bits.INT2IE) && 
      +                          (1 == INTCON3bits.INT2IF)){
  6657   0014A8  A8F0               	btfss	240,4,c	;volatile
  6658   0014AA  EF59  F00A         	goto	i2u491_41
  6659   0014AE  EF5B  F00A         	goto	i2u491_40
  6660   0014B2                     i2u491_41:
  6661   0014B2  EF64  F00A         	goto	i2l5762
  6662   0014B6                     i2u491_40:
  6663   0014B6  A2F0               	btfss	240,1,c	;volatile
  6664   0014B8  EF60  F00A         	goto	i2u492_41
  6665   0014BC  EF62  F00A         	goto	i2u492_40
  6666   0014C0                     i2u492_41:
  6667   0014C0  EF64  F00A         	goto	i2l5762
  6668   0014C4                     i2u492_40:
  6669   0014C4                     
  6670                           ;MCAL_Layer/Interrupt/mcal_interrupt_manager.c: 43:         INT2_ISR();
  6671   0014C4  EC52  F019         	call	_INT2_ISR	;wreg free
  6672   0014C8                     i2l5762:
  6673                           
  6674                           ;MCAL_Layer/Interrupt/mcal_interrupt_manager.c: 45:     if((1 == PIE1bits.ADIE) && (1 ==
      +                           PIR1bits.ADIF)){
  6675   0014C8  AC9D               	btfss	157,6,c	;volatile
  6676   0014CA  EF69  F00A         	goto	i2u493_41
  6677   0014CE  EF6B  F00A         	goto	i2u493_40
  6678   0014D2                     i2u493_41:
  6679   0014D2  EF74  F00A         	goto	i2l890
  6680   0014D6                     i2u493_40:
  6681   0014D6  AC9E               	btfss	158,6,c	;volatile
  6682   0014D8  EF70  F00A         	goto	i2u494_41
  6683   0014DC  EF72  F00A         	goto	i2u494_40
  6684   0014E0                     i2u494_41:
  6685   0014E0  EF74  F00A         	goto	i2l890
  6686   0014E4                     i2u494_40:
  6687   0014E4                     
  6688                           ;MCAL_Layer/Interrupt/mcal_interrupt_manager.c: 46:         ADC_ISR();
  6689   0014E4  ECDB  F018         	call	_ADC_ISR	;wreg free
  6690   0014E8                     i2l890:
  6691                           
  6692                           ;MCAL_Layer/Interrupt/mcal_interrupt_manager.c: 52:     if((1 == INTCONbits.RBIE) && (1 
      +                          == INTCONbits.RBIF) &&
  6693   0014E8  A6F2               	btfss	242,3,c	;volatile
  6694   0014EA  EF79  F00A         	goto	i2u495_41
  6695   0014EE  EF7B  F00A         	goto	i2u495_40
  6696   0014F2                     i2u495_41:
  6697   0014F2  EF96  F00A         	goto	i2l892
  6698   0014F6                     i2u495_40:
  6699   0014F6  A0F2               	btfss	242,0,c	;volatile
  6700   0014F8  EF80  F00A         	goto	i2u496_41
  6701   0014FC  EF82  F00A         	goto	i2u496_40
  6702   001500                     i2u496_41:
  6703   001500  EF96  F00A         	goto	i2l892
  6704   001504                     i2u496_40:
  6705   001504  A881               	btfss	129,4,c	;volatile
  6706   001506  EF87  F00A         	goto	i2u497_41
  6707   00150A  EF89  F00A         	goto	i2u497_40
  6708   00150E                     i2u497_41:
  6709   00150E  EF96  F00A         	goto	i2l892
  6710   001512                     i2u497_40:
  6711   001512  0472               	decf	_RB4_Flag^0,w,c	;volatile
  6712   001514  A4D8               	btfss	status,2,c
  6713   001516  EF8F  F00A         	goto	i2u498_41
  6714   00151A  EF91  F00A         	goto	i2u498_40
  6715   00151E                     i2u498_41:
  6716   00151E  EF96  F00A         	goto	i2l892
  6717   001522                     i2u498_40:
  6718   001522                     
  6719                           ;MCAL_Layer/Interrupt/mcal_interrupt_manager.c: 53:        (PORTBbits.RB4 == GPIO_HIGH) 
      +                          && (RB4_Flag == 1)){;MCAL_Layer/Interrupt/mcal_interrupt_manager.c: 54:         RB4_Flag
      +                           = 0;
  6720   001522  0E00               	movlw	0
  6721   001524  6E72               	movwf	_RB4_Flag^0,c	;volatile
  6722   001526                     
  6723                           ;MCAL_Layer/Interrupt/mcal_interrupt_manager.c: 55:         RB4_ISR(0);
  6724   001526  0E00               	movlw	0
  6725   001528  EC3A  F019         	call	_RB4_ISR
  6726   00152C                     i2l892:
  6727                           
  6728                           ;MCAL_Layer/Interrupt/mcal_interrupt_manager.c: 58:     if((1 == INTCONbits.RBIE) && (1 
      +                          == INTCONbits.RBIF) &&
  6729   00152C  A6F2               	btfss	242,3,c	;volatile
  6730   00152E  EF9B  F00A         	goto	i2u499_41
  6731   001532  EF9D  F00A         	goto	i2u499_40
  6732   001536                     i2u499_41:
  6733   001536  EFB8  F00A         	goto	i2l894
  6734   00153A                     i2u499_40:
  6735   00153A  A0F2               	btfss	242,0,c	;volatile
  6736   00153C  EFA2  F00A         	goto	i2u500_41
  6737   001540  EFA4  F00A         	goto	i2u500_40
  6738   001544                     i2u500_41:
  6739   001544  EFB8  F00A         	goto	i2l894
  6740   001548                     i2u500_40:
  6741   001548  B881               	btfsc	129,4,c	;volatile
  6742   00154A  EFA9  F00A         	goto	i2u501_41
  6743   00154E  EFAB  F00A         	goto	i2u501_40
  6744   001552                     i2u501_41:
  6745   001552  EFB8  F00A         	goto	i2l894
  6746   001556                     i2u501_40:
  6747   001556  5072               	movf	_RB4_Flag^0,w,c	;volatile
  6748   001558  A4D8               	btfss	status,2,c
  6749   00155A  EFB1  F00A         	goto	i2u502_41
  6750   00155E  EFB3  F00A         	goto	i2u502_40
  6751   001562                     i2u502_41:
  6752   001562  EFB8  F00A         	goto	i2l894
  6753   001566                     i2u502_40:
  6754   001566                     
  6755                           ;MCAL_Layer/Interrupt/mcal_interrupt_manager.c: 59:        (PORTBbits.RB4 == GPIO_LOW) &
      +                          & (RB4_Flag == 0)){;MCAL_Layer/Interrupt/mcal_interrupt_manager.c: 60:         RB4_Flag 
      +                          = 1;
  6756   001566  0E01               	movlw	1
  6757   001568  6E72               	movwf	_RB4_Flag^0,c	;volatile
  6758   00156A                     
  6759                           ;MCAL_Layer/Interrupt/mcal_interrupt_manager.c: 61:         RB4_ISR(1);
  6760   00156A  0E01               	movlw	1
  6761   00156C  EC3A  F019         	call	_RB4_ISR
  6762   001570                     i2l894:
  6763                           
  6764                           ;MCAL_Layer/Interrupt/mcal_interrupt_manager.c: 64:     if((1 == INTCONbits.RBIE) && (1 
      +                          == INTCONbits.RBIF) &&
  6765   001570  A6F2               	btfss	242,3,c	;volatile
  6766   001572  EFBD  F00A         	goto	i2u503_41
  6767   001576  EFBF  F00A         	goto	i2u503_40
  6768   00157A                     i2u503_41:
  6769   00157A  EFDA  F00A         	goto	i2l896
  6770   00157E                     i2u503_40:
  6771   00157E  A0F2               	btfss	242,0,c	;volatile
  6772   001580  EFC4  F00A         	goto	i2u504_41
  6773   001584  EFC6  F00A         	goto	i2u504_40
  6774   001588                     i2u504_41:
  6775   001588  EFDA  F00A         	goto	i2l896
  6776   00158C                     i2u504_40:
  6777   00158C  AA81               	btfss	129,5,c	;volatile
  6778   00158E  EFCB  F00A         	goto	i2u505_41
  6779   001592  EFCD  F00A         	goto	i2u505_40
  6780   001596                     i2u505_41:
  6781   001596  EFDA  F00A         	goto	i2l896
  6782   00159A                     i2u505_40:
  6783   00159A  0471               	decf	_RB5_Flag^0,w,c	;volatile
  6784   00159C  A4D8               	btfss	status,2,c
  6785   00159E  EFD3  F00A         	goto	i2u506_41
  6786   0015A2  EFD5  F00A         	goto	i2u506_40
  6787   0015A6                     i2u506_41:
  6788   0015A6  EFDA  F00A         	goto	i2l896
  6789   0015AA                     i2u506_40:
  6790   0015AA                     
  6791                           ;MCAL_Layer/Interrupt/mcal_interrupt_manager.c: 65:        (PORTBbits.RB5 == GPIO_HIGH) 
      +                          && (RB5_Flag == 1)){;MCAL_Layer/Interrupt/mcal_interrupt_manager.c: 66:         RB5_Flag
      +                           = 0;
  6792   0015AA  0E00               	movlw	0
  6793   0015AC  6E71               	movwf	_RB5_Flag^0,c	;volatile
  6794   0015AE                     
  6795                           ;MCAL_Layer/Interrupt/mcal_interrupt_manager.c: 67:         RB5_ISR(0);
  6796   0015AE  0E00               	movlw	0
  6797   0015B0  EC2D  F019         	call	_RB5_ISR
  6798   0015B4                     i2l896:
  6799                           
  6800                           ;MCAL_Layer/Interrupt/mcal_interrupt_manager.c: 70:     if((1 == INTCONbits.RBIE) && (1 
      +                          == INTCONbits.RBIF) &&
  6801   0015B4  A6F2               	btfss	242,3,c	;volatile
  6802   0015B6  EFDF  F00A         	goto	i2u507_41
  6803   0015BA  EFE1  F00A         	goto	i2u507_40
  6804   0015BE                     i2u507_41:
  6805   0015BE  EFFC  F00A         	goto	i2l898
  6806   0015C2                     i2u507_40:
  6807   0015C2  A0F2               	btfss	242,0,c	;volatile
  6808   0015C4  EFE6  F00A         	goto	i2u508_41
  6809   0015C8  EFE8  F00A         	goto	i2u508_40
  6810   0015CC                     i2u508_41:
  6811   0015CC  EFFC  F00A         	goto	i2l898
  6812   0015D0                     i2u508_40:
  6813   0015D0  BA81               	btfsc	129,5,c	;volatile
  6814   0015D2  EFED  F00A         	goto	i2u509_41
  6815   0015D6  EFEF  F00A         	goto	i2u509_40
  6816   0015DA                     i2u509_41:
  6817   0015DA  EFFC  F00A         	goto	i2l898
  6818   0015DE                     i2u509_40:
  6819   0015DE  5071               	movf	_RB5_Flag^0,w,c	;volatile
  6820   0015E0  A4D8               	btfss	status,2,c
  6821   0015E2  EFF5  F00A         	goto	i2u510_41
  6822   0015E6  EFF7  F00A         	goto	i2u510_40
  6823   0015EA                     i2u510_41:
  6824   0015EA  EFFC  F00A         	goto	i2l898
  6825   0015EE                     i2u510_40:
  6826   0015EE                     
  6827                           ;MCAL_Layer/Interrupt/mcal_interrupt_manager.c: 71:        (PORTBbits.RB5 == GPIO_LOW) &
      +                          & (RB5_Flag == 0)){;MCAL_Layer/Interrupt/mcal_interrupt_manager.c: 72:         RB5_Flag 
      +                          = 1;
  6828   0015EE  0E01               	movlw	1
  6829   0015F0  6E71               	movwf	_RB5_Flag^0,c	;volatile
  6830   0015F2                     
  6831                           ;MCAL_Layer/Interrupt/mcal_interrupt_manager.c: 73:         RB5_ISR(1);
  6832   0015F2  0E01               	movlw	1
  6833   0015F4  EC2D  F019         	call	_RB5_ISR
  6834   0015F8                     i2l898:
  6835                           
  6836                           ;MCAL_Layer/Interrupt/mcal_interrupt_manager.c: 76:     if((1 == INTCONbits.RBIE) && (1 
      +                          == INTCONbits.RBIF) &&
  6837   0015F8  A6F2               	btfss	242,3,c	;volatile
  6838   0015FA  EF01  F00B         	goto	i2u511_41
  6839   0015FE  EF03  F00B         	goto	i2u511_40
  6840   001602                     i2u511_41:
  6841   001602  EF1E  F00B         	goto	i2l900
  6842   001606                     i2u511_40:
  6843   001606  A0F2               	btfss	242,0,c	;volatile
  6844   001608  EF08  F00B         	goto	i2u512_41
  6845   00160C  EF0A  F00B         	goto	i2u512_40
  6846   001610                     i2u512_41:
  6847   001610  EF1E  F00B         	goto	i2l900
  6848   001614                     i2u512_40:
  6849   001614  AC81               	btfss	129,6,c	;volatile
  6850   001616  EF0F  F00B         	goto	i2u513_41
  6851   00161A  EF11  F00B         	goto	i2u513_40
  6852   00161E                     i2u513_41:
  6853   00161E  EF1E  F00B         	goto	i2l900
  6854   001622                     i2u513_40:
  6855   001622  0470               	decf	_RB6_Flag^0,w,c	;volatile
  6856   001624  A4D8               	btfss	status,2,c
  6857   001626  EF17  F00B         	goto	i2u514_41
  6858   00162A  EF19  F00B         	goto	i2u514_40
  6859   00162E                     i2u514_41:
  6860   00162E  EF1E  F00B         	goto	i2l900
  6861   001632                     i2u514_40:
  6862   001632                     
  6863                           ;MCAL_Layer/Interrupt/mcal_interrupt_manager.c: 77:        (PORTBbits.RB6 == GPIO_HIGH) 
      +                          && (RB6_Flag == 1)){;MCAL_Layer/Interrupt/mcal_interrupt_manager.c: 78:         RB6_Flag
      +                           = 0;
  6864   001632  0E00               	movlw	0
  6865   001634  6E70               	movwf	_RB6_Flag^0,c	;volatile
  6866   001636                     
  6867                           ;MCAL_Layer/Interrupt/mcal_interrupt_manager.c: 79:         RB6_ISR(0);
  6868   001636  0E00               	movlw	0
  6869   001638  EC20  F019         	call	_RB6_ISR
  6870   00163C                     i2l900:
  6871                           
  6872                           ;MCAL_Layer/Interrupt/mcal_interrupt_manager.c: 82:     if((1 == INTCONbits.RBIE) && (1 
      +                          == INTCONbits.RBIF) &&
  6873   00163C  A6F2               	btfss	242,3,c	;volatile
  6874   00163E  EF23  F00B         	goto	i2u515_41
  6875   001642  EF25  F00B         	goto	i2u515_40
  6876   001646                     i2u515_41:
  6877   001646  EF40  F00B         	goto	i2l902
  6878   00164A                     i2u515_40:
  6879   00164A  A0F2               	btfss	242,0,c	;volatile
  6880   00164C  EF2A  F00B         	goto	i2u516_41
  6881   001650  EF2C  F00B         	goto	i2u516_40
  6882   001654                     i2u516_41:
  6883   001654  EF40  F00B         	goto	i2l902
  6884   001658                     i2u516_40:
  6885   001658  BC81               	btfsc	129,6,c	;volatile
  6886   00165A  EF31  F00B         	goto	i2u517_41
  6887   00165E  EF33  F00B         	goto	i2u517_40
  6888   001662                     i2u517_41:
  6889   001662  EF40  F00B         	goto	i2l902
  6890   001666                     i2u517_40:
  6891   001666  5070               	movf	_RB6_Flag^0,w,c	;volatile
  6892   001668  A4D8               	btfss	status,2,c
  6893   00166A  EF39  F00B         	goto	i2u518_41
  6894   00166E  EF3B  F00B         	goto	i2u518_40
  6895   001672                     i2u518_41:
  6896   001672  EF40  F00B         	goto	i2l902
  6897   001676                     i2u518_40:
  6898   001676                     
  6899                           ;MCAL_Layer/Interrupt/mcal_interrupt_manager.c: 83:        (PORTBbits.RB6 == GPIO_LOW) &
      +                          & (RB6_Flag == 0)){;MCAL_Layer/Interrupt/mcal_interrupt_manager.c: 84:         RB6_Flag 
      +                          = 1;
  6900   001676  0E01               	movlw	1
  6901   001678  6E70               	movwf	_RB6_Flag^0,c	;volatile
  6902   00167A                     
  6903                           ;MCAL_Layer/Interrupt/mcal_interrupt_manager.c: 85:         RB6_ISR(1);
  6904   00167A  0E01               	movlw	1
  6905   00167C  EC20  F019         	call	_RB6_ISR
  6906   001680                     i2l902:
  6907                           
  6908                           ;MCAL_Layer/Interrupt/mcal_interrupt_manager.c: 88:     if((1 == INTCONbits.RBIE) && (1 
      +                          == INTCONbits.RBIF) &&
  6909   001680  A6F2               	btfss	242,3,c	;volatile
  6910   001682  EF45  F00B         	goto	i2u519_41
  6911   001686  EF47  F00B         	goto	i2u519_40
  6912   00168A                     i2u519_41:
  6913   00168A  EF62  F00B         	goto	i2l904
  6914   00168E                     i2u519_40:
  6915   00168E  A0F2               	btfss	242,0,c	;volatile
  6916   001690  EF4C  F00B         	goto	i2u520_41
  6917   001694  EF4E  F00B         	goto	i2u520_40
  6918   001698                     i2u520_41:
  6919   001698  EF62  F00B         	goto	i2l904
  6920   00169C                     i2u520_40:
  6921   00169C  AE81               	btfss	129,7,c	;volatile
  6922   00169E  EF53  F00B         	goto	i2u521_41
  6923   0016A2  EF55  F00B         	goto	i2u521_40
  6924   0016A6                     i2u521_41:
  6925   0016A6  EF62  F00B         	goto	i2l904
  6926   0016AA                     i2u521_40:
  6927   0016AA  046F               	decf	_RB7_Flag^0,w,c	;volatile
  6928   0016AC  A4D8               	btfss	status,2,c
  6929   0016AE  EF5B  F00B         	goto	i2u522_41
  6930   0016B2  EF5D  F00B         	goto	i2u522_40
  6931   0016B6                     i2u522_41:
  6932   0016B6  EF62  F00B         	goto	i2l904
  6933   0016BA                     i2u522_40:
  6934   0016BA                     
  6935                           ;MCAL_Layer/Interrupt/mcal_interrupt_manager.c: 89:        (PORTBbits.RB7 == GPIO_HIGH) 
      +                          && (RB7_Flag == 1)){;MCAL_Layer/Interrupt/mcal_interrupt_manager.c: 90:         RB7_Flag
      +                           = 0;
  6936   0016BA  0E00               	movlw	0
  6937   0016BC  6E6F               	movwf	_RB7_Flag^0,c	;volatile
  6938   0016BE                     
  6939                           ;MCAL_Layer/Interrupt/mcal_interrupt_manager.c: 91:         RB7_ISR(0);
  6940   0016BE  0E00               	movlw	0
  6941   0016C0  EC13  F019         	call	_RB7_ISR
  6942   0016C4                     i2l904:
  6943                           
  6944                           ;MCAL_Layer/Interrupt/mcal_interrupt_manager.c: 94:     if((1 == INTCONbits.RBIE) && (1 
      +                          == INTCONbits.RBIF) &&
  6945   0016C4  A6F2               	btfss	242,3,c	;volatile
  6946   0016C6  EF67  F00B         	goto	i2u523_41
  6947   0016CA  EF69  F00B         	goto	i2u523_40
  6948   0016CE                     i2u523_41:
  6949   0016CE  EF84  F00B         	goto	i2l907
  6950   0016D2                     i2u523_40:
  6951   0016D2  A0F2               	btfss	242,0,c	;volatile
  6952   0016D4  EF6E  F00B         	goto	i2u524_41
  6953   0016D8  EF70  F00B         	goto	i2u524_40
  6954   0016DC                     i2u524_41:
  6955   0016DC  EF84  F00B         	goto	i2l907
  6956   0016E0                     i2u524_40:
  6957   0016E0  BE81               	btfsc	129,7,c	;volatile
  6958   0016E2  EF75  F00B         	goto	i2u525_41
  6959   0016E6  EF77  F00B         	goto	i2u525_40
  6960   0016EA                     i2u525_41:
  6961   0016EA  EF84  F00B         	goto	i2l907
  6962   0016EE                     i2u525_40:
  6963   0016EE  506F               	movf	_RB7_Flag^0,w,c	;volatile
  6964   0016F0  A4D8               	btfss	status,2,c
  6965   0016F2  EF7D  F00B         	goto	i2u526_41
  6966   0016F6  EF7F  F00B         	goto	i2u526_40
  6967   0016FA                     i2u526_41:
  6968   0016FA  EF84  F00B         	goto	i2l907
  6969   0016FE                     i2u526_40:
  6970   0016FE                     
  6971                           ;MCAL_Layer/Interrupt/mcal_interrupt_manager.c: 95:        (PORTBbits.RB7 == GPIO_LOW) &
      +                          & (RB7_Flag == 0)){;MCAL_Layer/Interrupt/mcal_interrupt_manager.c: 96:         RB7_Flag 
      +                          = 1;
  6972   0016FE  0E01               	movlw	1
  6973   001700  6E6F               	movwf	_RB7_Flag^0,c	;volatile
  6974   001702                     
  6975                           ;MCAL_Layer/Interrupt/mcal_interrupt_manager.c: 97:         RB7_ISR(1);
  6976   001702  0E01               	movlw	1
  6977   001704  EC13  F019         	call	_RB7_ISR
  6978   001708                     i2l907:
  6979   001708  C00C  FFDA         	movff	??_InterruptManager+3,fsr2h
  6980   00170C  C00B  FFD9         	movff	??_InterruptManager+2,fsr2l
  6981   001710  C00A  FFFB         	movff	??_InterruptManager+1,pclatu
  6982   001714  C009  FFFA         	movff	??_InterruptManager,pclath
  6983   001718  9273               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
  6984   00171A  0011               	retfie		f
  6985   00171C                     __end_of_InterruptManager:
  6986                           	callstack 0
  6987                           
  6988 ;; *************** function _RB7_ISR *****************
  6989 ;; Defined at:
  6990 ;;		line 164 in file "MCAL_Layer/Interrupt/mcal_external_interrupt.c"
  6991 ;; Parameters:    Size  Location     Type
  6992 ;;  RB7_Source      1    wreg     unsigned char 
  6993 ;; Auto vars:     Size  Location     Type
  6994 ;;  RB7_Source      1    0[COMRAM] unsigned char 
  6995 ;; Return value:  Size  Location     Type
  6996 ;;                  1    wreg      void 
  6997 ;; Registers used:
  6998 ;;		wreg, status,2, status,0
  6999 ;; Tracked objects:
  7000 ;;		On entry : 0/0
  7001 ;;		On exit  : 0/0
  7002 ;;		Unchanged: 0/0
  7003 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7004 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7005 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7006 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7007 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7008 ;;Total ram usage:        1 bytes
  7009 ;; Hardware stack levels used: 1
  7010 ;; This function calls:
  7011 ;;		Nothing
  7012 ;; This function is called by:
  7013 ;;		_InterruptManager
  7014 ;; This function uses a non-reentrant model
  7015 ;;
  7016                           
  7017                           	psect	text41
  7018   003226                     __ptext41:
  7019                           	callstack 0
  7020   003226                     _RB7_ISR:
  7021                           	callstack 20
  7022                           
  7023                           ;incstack = 0
  7024                           ;RB7_ISR@RB7_Source stored from wreg
  7025   003226  6E01               	movwf	RB7_ISR@RB7_Source^0,c
  7026   003228                     
  7027                           ;MCAL_Layer/Interrupt/mcal_external_interrupt.c: 166:     (INTCONbits.RBIF = 0);
  7028   003228  90F2               	bcf	242,0,c	;volatile
  7029   00322A                     
  7030                           ;MCAL_Layer/Interrupt/mcal_external_interrupt.c: 169:     if(0 == RB7_Source){
  7031   00322A  5001               	movf	RB7_ISR@RB7_Source^0,w,c
  7032   00322C  A4D8               	btfss	status,2,c
  7033   00322E  EF1B  F019         	goto	i2u369_41
  7034   003232  EF1D  F019         	goto	i2u369_40
  7035   003236                     i2u369_41:
  7036   003236  EF1F  F019         	goto	i2l4790
  7037   00323A                     i2u369_40:
  7038   00323A  EF1F  F019         	goto	i2l736
  7039   00323E                     i2l4790:
  7040   00323E                     i2l736:
  7041   00323E  0012               	return		;funcret
  7042   003240                     __end_of_RB7_ISR:
  7043                           	callstack 0
  7044                           
  7045 ;; *************** function _RB6_ISR *****************
  7046 ;; Defined at:
  7047 ;;		line 145 in file "MCAL_Layer/Interrupt/mcal_external_interrupt.c"
  7048 ;; Parameters:    Size  Location     Type
  7049 ;;  RB6_Source      1    wreg     unsigned char 
  7050 ;; Auto vars:     Size  Location     Type
  7051 ;;  RB6_Source      1    0[COMRAM] unsigned char 
  7052 ;; Return value:  Size  Location     Type
  7053 ;;                  1    wreg      void 
  7054 ;; Registers used:
  7055 ;;		wreg, status,2, status,0
  7056 ;; Tracked objects:
  7057 ;;		On entry : 0/0
  7058 ;;		On exit  : 0/0
  7059 ;;		Unchanged: 0/0
  7060 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7061 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7062 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7063 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7064 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7065 ;;Total ram usage:        1 bytes
  7066 ;; Hardware stack levels used: 1
  7067 ;; This function calls:
  7068 ;;		Nothing
  7069 ;; This function is called by:
  7070 ;;		_InterruptManager
  7071 ;; This function uses a non-reentrant model
  7072 ;;
  7073                           
  7074                           	psect	text42
  7075   003240                     __ptext42:
  7076                           	callstack 0
  7077   003240                     _RB6_ISR:
  7078                           	callstack 20
  7079                           
  7080                           ;incstack = 0
  7081                           ;RB6_ISR@RB6_Source stored from wreg
  7082   003240  6E01               	movwf	RB6_ISR@RB6_Source^0,c
  7083   003242                     
  7084                           ;MCAL_Layer/Interrupt/mcal_external_interrupt.c: 147:     (INTCONbits.RBIF = 0);
  7085   003242  90F2               	bcf	242,0,c	;volatile
  7086   003244                     
  7087                           ;MCAL_Layer/Interrupt/mcal_external_interrupt.c: 150:     if(0 == RB6_Source){
  7088   003244  5001               	movf	RB6_ISR@RB6_Source^0,w,c
  7089   003246  A4D8               	btfss	status,2,c
  7090   003248  EF28  F019         	goto	i2u368_41
  7091   00324C  EF2A  F019         	goto	i2u368_40
  7092   003250                     i2u368_41:
  7093   003250  EF2C  F019         	goto	i2l4776
  7094   003254                     i2u368_40:
  7095   003254  EF2C  F019         	goto	i2l725
  7096   003258                     i2l4776:
  7097   003258                     i2l725:
  7098   003258  0012               	return		;funcret
  7099   00325A                     __end_of_RB6_ISR:
  7100                           	callstack 0
  7101                           
  7102 ;; *************** function _RB5_ISR *****************
  7103 ;; Defined at:
  7104 ;;		line 126 in file "MCAL_Layer/Interrupt/mcal_external_interrupt.c"
  7105 ;; Parameters:    Size  Location     Type
  7106 ;;  RB5_Source      1    wreg     unsigned char 
  7107 ;; Auto vars:     Size  Location     Type
  7108 ;;  RB5_Source      1    0[COMRAM] unsigned char 
  7109 ;; Return value:  Size  Location     Type
  7110 ;;                  1    wreg      void 
  7111 ;; Registers used:
  7112 ;;		wreg, status,2, status,0
  7113 ;; Tracked objects:
  7114 ;;		On entry : 0/0
  7115 ;;		On exit  : 0/0
  7116 ;;		Unchanged: 0/0
  7117 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7118 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7119 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7120 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7121 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7122 ;;Total ram usage:        1 bytes
  7123 ;; Hardware stack levels used: 1
  7124 ;; This function calls:
  7125 ;;		Nothing
  7126 ;; This function is called by:
  7127 ;;		_InterruptManager
  7128 ;; This function uses a non-reentrant model
  7129 ;;
  7130                           
  7131                           	psect	text43
  7132   00325A                     __ptext43:
  7133                           	callstack 0
  7134   00325A                     _RB5_ISR:
  7135                           	callstack 20
  7136                           
  7137                           ;incstack = 0
  7138                           ;RB5_ISR@RB5_Source stored from wreg
  7139   00325A  6E01               	movwf	RB5_ISR@RB5_Source^0,c
  7140   00325C                     
  7141                           ;MCAL_Layer/Interrupt/mcal_external_interrupt.c: 128:     (INTCONbits.RBIF = 0);
  7142   00325C  90F2               	bcf	242,0,c	;volatile
  7143   00325E                     
  7144                           ;MCAL_Layer/Interrupt/mcal_external_interrupt.c: 131:     if(0 == RB5_Source){
  7145   00325E  5001               	movf	RB5_ISR@RB5_Source^0,w,c
  7146   003260  A4D8               	btfss	status,2,c
  7147   003262  EF35  F019         	goto	i2u367_41
  7148   003266  EF37  F019         	goto	i2u367_40
  7149   00326A                     i2u367_41:
  7150   00326A  EF39  F019         	goto	i2l4762
  7151   00326E                     i2u367_40:
  7152   00326E  EF39  F019         	goto	i2l714
  7153   003272                     i2l4762:
  7154   003272                     i2l714:
  7155   003272  0012               	return		;funcret
  7156   003274                     __end_of_RB5_ISR:
  7157                           	callstack 0
  7158                           
  7159 ;; *************** function _RB4_ISR *****************
  7160 ;; Defined at:
  7161 ;;		line 107 in file "MCAL_Layer/Interrupt/mcal_external_interrupt.c"
  7162 ;; Parameters:    Size  Location     Type
  7163 ;;  RB4_Source      1    wreg     unsigned char 
  7164 ;; Auto vars:     Size  Location     Type
  7165 ;;  RB4_Source      1    0[COMRAM] unsigned char 
  7166 ;; Return value:  Size  Location     Type
  7167 ;;                  1    wreg      void 
  7168 ;; Registers used:
  7169 ;;		wreg, status,2, status,0
  7170 ;; Tracked objects:
  7171 ;;		On entry : 0/0
  7172 ;;		On exit  : 0/0
  7173 ;;		Unchanged: 0/0
  7174 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7175 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7176 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7177 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7178 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7179 ;;Total ram usage:        1 bytes
  7180 ;; Hardware stack levels used: 1
  7181 ;; This function calls:
  7182 ;;		Nothing
  7183 ;; This function is called by:
  7184 ;;		_InterruptManager
  7185 ;; This function uses a non-reentrant model
  7186 ;;
  7187                           
  7188                           	psect	text44
  7189   003274                     __ptext44:
  7190                           	callstack 0
  7191   003274                     _RB4_ISR:
  7192                           	callstack 20
  7193                           
  7194                           ;incstack = 0
  7195                           ;RB4_ISR@RB4_Source stored from wreg
  7196   003274  6E01               	movwf	RB4_ISR@RB4_Source^0,c
  7197   003276                     
  7198                           ;MCAL_Layer/Interrupt/mcal_external_interrupt.c: 109:     (INTCONbits.RBIF = 0);
  7199   003276  90F2               	bcf	242,0,c	;volatile
  7200   003278                     
  7201                           ;MCAL_Layer/Interrupt/mcal_external_interrupt.c: 112:     if(0 == RB4_Source){
  7202   003278  5001               	movf	RB4_ISR@RB4_Source^0,w,c
  7203   00327A  A4D8               	btfss	status,2,c
  7204   00327C  EF42  F019         	goto	i2u366_41
  7205   003280  EF44  F019         	goto	i2u366_40
  7206   003284                     i2u366_41:
  7207   003284  EF46  F019         	goto	i2l4748
  7208   003288                     i2u366_40:
  7209   003288  EF46  F019         	goto	i2l703
  7210   00328C                     i2l4748:
  7211   00328C                     i2l703:
  7212   00328C  0012               	return		;funcret
  7213   00328E                     __end_of_RB4_ISR:
  7214                           	callstack 0
  7215                           
  7216 ;; *************** function _INT2_ISR *****************
  7217 ;; Defined at:
  7218 ;;		line 95 in file "MCAL_Layer/Interrupt/mcal_external_interrupt.c"
  7219 ;; Parameters:    Size  Location     Type
  7220 ;;		None
  7221 ;; Auto vars:     Size  Location     Type
  7222 ;;		None
  7223 ;; Return value:  Size  Location     Type
  7224 ;;                  1    wreg      void 
  7225 ;; Registers used:
  7226 ;;		None
  7227 ;; Tracked objects:
  7228 ;;		On entry : 0/0
  7229 ;;		On exit  : 0/0
  7230 ;;		Unchanged: 0/0
  7231 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7232 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7233 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7234 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7235 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7236 ;;Total ram usage:        0 bytes
  7237 ;; Hardware stack levels used: 1
  7238 ;; This function calls:
  7239 ;;		Nothing
  7240 ;; This function is called by:
  7241 ;;		_InterruptManager
  7242 ;; This function uses a non-reentrant model
  7243 ;;
  7244                           
  7245                           	psect	text45
  7246   0032A4                     __ptext45:
  7247                           	callstack 0
  7248   0032A4                     _INT2_ISR:
  7249                           	callstack 20
  7250   0032A4                     
  7251                           ;MCAL_Layer/Interrupt/mcal_external_interrupt.c: 97:     (INTCON3bits.INT2IF = 0);
  7252   0032A4  92F0               	bcf	240,1,c	;volatile
  7253   0032A6  0012               	return		;funcret
  7254   0032A8                     __end_of_INT2_ISR:
  7255                           	callstack 0
  7256                           
  7257 ;; *************** function _INT1_ISR *****************
  7258 ;; Defined at:
  7259 ;;		line 86 in file "MCAL_Layer/Interrupt/mcal_external_interrupt.c"
  7260 ;; Parameters:    Size  Location     Type
  7261 ;;		None
  7262 ;; Auto vars:     Size  Location     Type
  7263 ;;		None
  7264 ;; Return value:  Size  Location     Type
  7265 ;;                  1    wreg      void 
  7266 ;; Registers used:
  7267 ;;		None
  7268 ;; Tracked objects:
  7269 ;;		On entry : 0/0
  7270 ;;		On exit  : 0/0
  7271 ;;		Unchanged: 0/0
  7272 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7273 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7274 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7275 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7276 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7277 ;;Total ram usage:        0 bytes
  7278 ;; Hardware stack levels used: 1
  7279 ;; This function calls:
  7280 ;;		Nothing
  7281 ;; This function is called by:
  7282 ;;		_InterruptManager
  7283 ;; This function uses a non-reentrant model
  7284 ;;
  7285                           
  7286                           	psect	text46
  7287   0032A8                     __ptext46:
  7288                           	callstack 0
  7289   0032A8                     _INT1_ISR:
  7290                           	callstack 20
  7291   0032A8                     
  7292                           ;MCAL_Layer/Interrupt/mcal_external_interrupt.c: 88:     (INTCON3bits.INT1IF = 0);
  7293   0032A8  90F0               	bcf	240,0,c	;volatile
  7294   0032AA  0012               	return		;funcret
  7295   0032AC                     __end_of_INT1_ISR:
  7296                           	callstack 0
  7297                           
  7298 ;; *************** function _INT0_ISR *****************
  7299 ;; Defined at:
  7300 ;;		line 74 in file "MCAL_Layer/Interrupt/mcal_external_interrupt.c"
  7301 ;; Parameters:    Size  Location     Type
  7302 ;;		None
  7303 ;; Auto vars:     Size  Location     Type
  7304 ;;		None
  7305 ;; Return value:  Size  Location     Type
  7306 ;;                  1    wreg      void 
  7307 ;; Registers used:
  7308 ;;		None
  7309 ;; Tracked objects:
  7310 ;;		On entry : 0/0
  7311 ;;		On exit  : 0/0
  7312 ;;		Unchanged: 0/0
  7313 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7314 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7315 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7316 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7317 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7318 ;;Total ram usage:        0 bytes
  7319 ;; Hardware stack levels used: 1
  7320 ;; This function calls:
  7321 ;;		Nothing
  7322 ;; This function is called by:
  7323 ;;		_InterruptManager
  7324 ;; This function uses a non-reentrant model
  7325 ;;
  7326                           
  7327                           	psect	text47
  7328   0032AC                     __ptext47:
  7329                           	callstack 0
  7330   0032AC                     _INT0_ISR:
  7331                           	callstack 20
  7332   0032AC                     
  7333                           ;MCAL_Layer/Interrupt/mcal_external_interrupt.c: 76:     (INTCONbits.INT0IF = 0);
  7334   0032AC  92F2               	bcf	242,1,c	;volatile
  7335   0032AE  0012               	return		;funcret
  7336   0032B0                     __end_of_INT0_ISR:
  7337                           	callstack 0
  7338                           
  7339 ;; *************** function _ADC_ISR *****************
  7340 ;; Defined at:
  7341 ;;		line 307 in file "MCAL_Layer/ADC/hal_adc.c"
  7342 ;; Parameters:    Size  Location     Type
  7343 ;;		None
  7344 ;; Auto vars:     Size  Location     Type
  7345 ;;		None
  7346 ;; Return value:  Size  Location     Type
  7347 ;;                  1    wreg      void 
  7348 ;; Registers used:
  7349 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, cstack
  7350 ;; Tracked objects:
  7351 ;;		On entry : 0/0
  7352 ;;		On exit  : 0/0
  7353 ;;		Unchanged: 0/0
  7354 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7355 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7356 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7357 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7358 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7359 ;;Total ram usage:        0 bytes
  7360 ;; Hardware stack levels used: 1
  7361 ;; Hardware stack levels required when called: 2
  7362 ;; This function calls:
  7363 ;;		NULL
  7364 ;;		_adc_defaultinterrupthandler
  7365 ;; This function is called by:
  7366 ;;		_InterruptManager
  7367 ;; This function uses a non-reentrant model
  7368 ;;
  7369                           
  7370                           	psect	text48
  7371   0031B6                     __ptext48:
  7372                           	callstack 0
  7373   0031B6                     _ADC_ISR:
  7374                           	callstack 18
  7375   0031B6                     
  7376                           ;MCAL_Layer/ADC/hal_adc.c: 309:     (PIR1bits.ADIF=0);
  7377   0031B6  9C9E               	bcf	158,6,c	;volatile
  7378   0031B8                     
  7379                           ;MCAL_Layer/ADC/hal_adc.c: 310:     if(ADC_InterruptHandler)
  7380   0031B8  0100               	movlb	0	; () banked
  7381   0031BA  51DB               	movf	_ADC_InterruptHandler& (0+255),w,b
  7382   0031BC  11DC               	iorwf	(_ADC_InterruptHandler+1)& (0+255),w,b
  7383   0031BE  B4D8               	btfsc	status,2,c
  7384   0031C0  EFE4  F018         	goto	i2u364_41
  7385   0031C4  EFE6  F018         	goto	i2u364_40
  7386   0031C8                     i2u364_41:
  7387   0031C8  EFF2  F018         	goto	i2l492
  7388   0031CC                     i2u364_40:
  7389   0031CC                     
  7390                           ; BSR set to: 0
  7391                           ;MCAL_Layer/ADC/hal_adc.c: 311:     {;MCAL_Layer/ADC/hal_adc.c: 312:         ADC_Interru
      +                          ptHandler();
  7392   0031CC  D802               	call	i2u365_48
  7393   0031CE  EFF2  F018         	goto	i2u365_49
  7394   0031D2                     i2u365_48:
  7395   0031D2  0005               	push	
  7396   0031D4  6EFA               	movwf	pclath,c
  7397   0031D6  51DB               	movf	_ADC_InterruptHandler& (0+255),w,b
  7398   0031D8  6EFD               	movwf	tosl,c
  7399   0031DA  51DC               	movf	(_ADC_InterruptHandler+1)& (0+255),w,b
  7400   0031DC  6EFE               	movwf	tosh,c
  7401   0031DE  6AFF               	clrf	tosu,c
  7402   0031E0  50FA               	movf	pclath,w,c
  7403   0031E2  0012               	return		;indir
  7404   0031E4                     i2u365_49:
  7405   0031E4                     i2l492:
  7406   0031E4  0012               	return		;funcret
  7407   0031E6                     __end_of_ADC_ISR:
  7408                           	callstack 0
  7409                           
  7410 ;; *************** function _adc_defaultinterrupthandler *****************
  7411 ;; Defined at:
  7412 ;;		line 32 in file "application.c"
  7413 ;; Parameters:    Size  Location     Type
  7414 ;;		None
  7415 ;; Auto vars:     Size  Location     Type
  7416 ;;		None
  7417 ;; Return value:  Size  Location     Type
  7418 ;;                  1    wreg      void 
  7419 ;; Registers used:
  7420 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  7421 ;; Tracked objects:
  7422 ;;		On entry : 0/0
  7423 ;;		On exit  : 0/0
  7424 ;;		Unchanged: 0/0
  7425 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7426 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7427 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7428 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7429 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7430 ;;Total ram usage:        0 bytes
  7431 ;; Hardware stack levels used: 1
  7432 ;; Hardware stack levels required when called: 1
  7433 ;; This function calls:
  7434 ;;		_ADC_get_conversion_result
  7435 ;; This function is called by:
  7436 ;;		_ADC_ISR
  7437 ;; This function uses a non-reentrant model
  7438 ;;
  7439                           
  7440                           	psect	text49
  7441   003154                     __ptext49:
  7442                           	callstack 0
  7443   003154                     _adc_defaultinterrupthandler:
  7444                           	callstack 18
  7445   003154                     
  7446                           ;application.c: 35:             ret=ADC_get_conversion_result(&adc1,&adc_res_1);
  7447   003154  0EB0               	movlw	low _adc1
  7448   003156  6E01               	movwf	ADC_get_conversion_result@adc^0,c
  7449   003158  0E00               	movlw	high _adc1
  7450   00315A  6E02               	movwf	(ADC_get_conversion_result@adc+1)^0,c
  7451   00315C  0EED               	movlw	low _adc_res_1
  7452   00315E  6E03               	movwf	ADC_get_conversion_result@conversion_result^0,c
  7453   003160  0E00               	movlw	high _adc_res_1
  7454   003162  6E04               	movwf	(ADC_get_conversion_result@conversion_result+1)^0,c
  7455   003164  EC15  F012         	call	_ADC_get_conversion_result	;wreg free
  7456   003168  0100               	movlb	0	; () banked
  7457   00316A  6FFB               	movwf	_ret& (0+255),b
  7458                           
  7459                           ;application.c: 36:             ret=ADC_get_conversion_result(&adc1,&adc_res_2);
  7460   00316C  0EB0               	movlw	low _adc1
  7461   00316E  6E01               	movwf	ADC_get_conversion_result@adc^0,c
  7462   003170  0E00               	movlw	high _adc1
  7463   003172  6E02               	movwf	(ADC_get_conversion_result@adc+1)^0,c
  7464   003174  0EEB               	movlw	low _adc_res_2
  7465   003176  6E03               	movwf	ADC_get_conversion_result@conversion_result^0,c
  7466   003178  0E00               	movlw	high _adc_res_2
  7467   00317A  6E04               	movwf	(ADC_get_conversion_result@conversion_result+1)^0,c
  7468   00317C  EC15  F012         	call	_ADC_get_conversion_result	;wreg free
  7469   003180  0100               	movlb	0	; () banked
  7470   003182  6FFB               	movwf	_ret& (0+255),b
  7471   003184                     
  7472                           ; BSR set to: 0
  7473   003184  0012               	return		;funcret
  7474   003186                     __end_of_adc_defaultinterrupthandler:
  7475                           	callstack 0
  7476                           
  7477 ;; *************** function _ADC_get_conversion_result *****************
  7478 ;; Defined at:
  7479 ;;		line 157 in file "MCAL_Layer/ADC/hal_adc.c"
  7480 ;; Parameters:    Size  Location     Type
  7481 ;;  adc             2    0[COMRAM] PTR const struct .
  7482 ;;		 -> adc1(7), 
  7483 ;;  conversion_r    2    2[COMRAM] PTR unsigned short 
  7484 ;;		 -> adc_res_2(2), adc_res_1(2), 
  7485 ;; Auto vars:     Size  Location     Type
  7486 ;;  ret             1    7[COMRAM] unsigned char 
  7487 ;; Return value:  Size  Location     Type
  7488 ;;                  1    wreg      unsigned char 
  7489 ;; Registers used:
  7490 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  7491 ;; Tracked objects:
  7492 ;;		On entry : 0/0
  7493 ;;		On exit  : 0/0
  7494 ;;		Unchanged: 0/0
  7495 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7496 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7497 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7498 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7499 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7500 ;;Total ram usage:        8 bytes
  7501 ;; Hardware stack levels used: 1
  7502 ;; This function calls:
  7503 ;;		Nothing
  7504 ;; This function is called by:
  7505 ;;		_adc_defaultinterrupthandler
  7506 ;;		_ADC_get_conversion_blocking
  7507 ;; This function uses a non-reentrant model
  7508 ;;
  7509                           
  7510                           	psect	text50
  7511   00242A                     __ptext50:
  7512                           	callstack 0
  7513   00242A                     _ADC_get_conversion_result:
  7514                           	callstack 18
  7515   00242A                     
  7516                           ;MCAL_Layer/ADC/hal_adc.c: 160:     if(((void*)0)==adc||((void*)0)==conversion_result)
  7517   00242A  5001               	movf	ADC_get_conversion_result@adc^0,w,c
  7518   00242C  1002               	iorwf	(ADC_get_conversion_result@adc+1)^0,w,c
  7519   00242E  B4D8               	btfsc	status,2,c
  7520   002430  EF1C  F012         	goto	i2u335_41
  7521   002434  EF1E  F012         	goto	i2u335_40
  7522   002438                     i2u335_41:
  7523   002438  EF27  F012         	goto	i2l4394
  7524   00243C                     i2u335_40:
  7525   00243C  5003               	movf	ADC_get_conversion_result@conversion_result^0,w,c
  7526   00243E  1004               	iorwf	(ADC_get_conversion_result@conversion_result+1)^0,w,c
  7527   002440  A4D8               	btfss	status,2,c
  7528   002442  EF25  F012         	goto	i2u336_41
  7529   002446  EF27  F012         	goto	i2u336_40
  7530   00244A                     i2u336_41:
  7531   00244A  EF5B  F012         	goto	i2l4402
  7532   00244E                     i2u336_40:
  7533   00244E                     i2l4394:
  7534                           
  7535                           ;MCAL_Layer/ADC/hal_adc.c: 161:     {;MCAL_Layer/ADC/hal_adc.c: 162:         ret=(Std_Re
      +                          turnType)0x00;
  7536   00244E  0E00               	movlw	0
  7537   002450  6E08               	movwf	ADC_get_conversion_result@ret^0,c
  7538                           
  7539                           ;MCAL_Layer/ADC/hal_adc.c: 163:     }
  7540   002452  EF80  F012         	goto	i2l422
  7541   002456                     i2l4396:
  7542   002456  50C3               	movf	195,w,c	;volatile
  7543   002458  CFC4 F005          	movff	4036,??_ADC_get_conversion_result	;volatile
  7544   00245C  6A06               	clrf	(??_ADC_get_conversion_result+1)^0,c
  7545   00245E  C005  F006         	movff	??_ADC_get_conversion_result,??_ADC_get_conversion_result+1
  7546   002462  6A05               	clrf	??_ADC_get_conversion_result^0,c
  7547   002464  2605               	addwf	??_ADC_get_conversion_result^0,f,c
  7548   002466  0E00               	movlw	0
  7549   002468  2206               	addwfc	(??_ADC_get_conversion_result+1)^0,f,c
  7550   00246A  C003  FFD9         	movff	ADC_get_conversion_result@conversion_result,fsr2l
  7551   00246E  C004  FFDA         	movff	ADC_get_conversion_result@conversion_result+1,fsr2h
  7552   002472  C005  FFDE         	movff	??_ADC_get_conversion_result,postinc2
  7553   002476  C006  FFDD         	movff	??_ADC_get_conversion_result+1,postdec2
  7554   00247A  EF7E  F012         	goto	i2l4404
  7555   00247E                     i2l4398:
  7556   00247E  50C3               	movf	195,w,c	;volatile
  7557   002480  CFC4 F005          	movff	4036,??_ADC_get_conversion_result	;volatile
  7558   002484  6A06               	clrf	(??_ADC_get_conversion_result+1)^0,c
  7559   002486  C005  F006         	movff	??_ADC_get_conversion_result,??_ADC_get_conversion_result+1
  7560   00248A  6A05               	clrf	??_ADC_get_conversion_result^0,c
  7561   00248C  2605               	addwf	??_ADC_get_conversion_result^0,f,c
  7562   00248E  0E00               	movlw	0
  7563   002490  2206               	addwfc	(??_ADC_get_conversion_result+1)^0,f,c
  7564   002492  0E06               	movlw	6
  7565   002494  6E07               	movwf	(??_ADC_get_conversion_result+2)^0,c
  7566   002496                     i2u337_45:
  7567   002496  3406               	rlcf	(??_ADC_get_conversion_result+1)^0,w,c
  7568   002498  3206               	rrcf	(??_ADC_get_conversion_result+1)^0,f,c
  7569   00249A  3205               	rrcf	??_ADC_get_conversion_result^0,f,c
  7570   00249C  2E07               	decfsz	(??_ADC_get_conversion_result+2)^0,f,c
  7571   00249E  EF4B  F012         	goto	i2u337_45
  7572   0024A2  C003  FFD9         	movff	ADC_get_conversion_result@conversion_result,fsr2l
  7573   0024A6  C004  FFDA         	movff	ADC_get_conversion_result@conversion_result+1,fsr2h
  7574   0024AA  C005  FFDE         	movff	??_ADC_get_conversion_result,postinc2
  7575   0024AE  C006  FFDD         	movff	??_ADC_get_conversion_result+1,postdec2
  7576   0024B2  EF7E  F012         	goto	i2l4404
  7577   0024B6                     i2l4402:
  7578   0024B6  EE20 F006          	lfsr	2,6
  7579   0024BA  5001               	movf	ADC_get_conversion_result@adc^0,w,c
  7580   0024BC  26D9               	addwf	fsr2l,f,c
  7581   0024BE  5002               	movf	(ADC_get_conversion_result@adc+1)^0,w,c
  7582   0024C0  22DA               	addwfc	fsr2h,f,c
  7583   0024C2  B2DF               	btfsc	indf2,1,c
  7584   0024C4  EF66  F012         	goto	i2u338_41
  7585   0024C8  EF69  F012         	goto	i2u338_40
  7586   0024CC                     i2u338_41:
  7587   0024CC  0E01               	movlw	1
  7588   0024CE  EF6A  F012         	goto	i2u339_40
  7589   0024D2                     i2u338_40:
  7590   0024D2  0E00               	movlw	0
  7591   0024D4                     i2u339_40:
  7592   0024D4  6E05               	movwf	??_ADC_get_conversion_result^0,c
  7593   0024D6  6A06               	clrf	(??_ADC_get_conversion_result+1)^0,c
  7594                           
  7595                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  7596                           ; Switch size 1, requested type "simple"
  7597                           ; Number of cases is 1, Range of values is 0 to 0
  7598                           ; switch strategies available:
  7599                           ; Name         Instructions Cycles
  7600                           ; simple_byte            4     3 (average)
  7601                           ;	Chosen strategy is simple_byte
  7602   0024D8  5006               	movf	(??_ADC_get_conversion_result+1)^0,w,c
  7603   0024DA  0A00               	xorlw	0	; case 0
  7604   0024DC  B4D8               	btfsc	status,2,c
  7605   0024DE  EF73  F012         	goto	i2l6532
  7606   0024E2  EF2B  F012         	goto	i2l4396
  7607   0024E6                     i2l6532:
  7608                           
  7609                           ; Switch size 1, requested type "simple"
  7610                           ; Number of cases is 2, Range of values is 0 to 1
  7611                           ; switch strategies available:
  7612                           ; Name         Instructions Cycles
  7613                           ; simple_byte            7     4 (average)
  7614                           ;	Chosen strategy is simple_byte
  7615   0024E6  5005               	movf	??_ADC_get_conversion_result^0,w,c
  7616   0024E8  0A00               	xorlw	0	; case 0
  7617   0024EA  B4D8               	btfsc	status,2,c
  7618   0024EC  EF3F  F012         	goto	i2l4398
  7619   0024F0  0A01               	xorlw	1	; case 1
  7620   0024F2  B4D8               	btfsc	status,2,c
  7621   0024F4  EF2B  F012         	goto	i2l4396
  7622   0024F8  EF2B  F012         	goto	i2l4396
  7623   0024FC                     i2l4404:
  7624                           
  7625                           ;MCAL_Layer/ADC/hal_adc.c: 173:         ret=(Std_ReturnType)0x01;
  7626   0024FC  0E01               	movlw	1
  7627   0024FE  6E08               	movwf	ADC_get_conversion_result@ret^0,c
  7628   002500                     i2l422:
  7629                           
  7630                           ;MCAL_Layer/ADC/hal_adc.c: 175:     return ret;
  7631   002500  5008               	movf	ADC_get_conversion_result@ret^0,w,c
  7632   002502  0012               	return		;funcret
  7633   002504                     __end_of_ADC_get_conversion_result:
  7634                           	callstack 0
  7635                           
  7636                           	psect	text51
  7637   000000                     __ptext51:
  7638                           	callstack 0
  7639   000000                     
  7640                           	psect	rparam
  7641   000000                     
  7642                           	psect	temp
  7643   000073                     btemp:
  7644                           	callstack 0
  7645   000073                     	ds	1
  7646   000000                     int$flags	set	btemp
  7647   000000                     wtemp8	set	btemp+1
  7648   000000                     ttemp5	set	btemp+1
  7649   000000                     ttemp6	set	btemp+4
  7650   000000                     ttemp7	set	btemp+8
  7651                           
  7652                           	psect	idloc
  7653                           
  7654                           ;Config register IDLOC0 @ 0x200000
  7655                           ;	unspecified, using default values
  7656   200000                     	org	2097152
  7657   200000  FF                 	db	255
  7658                           
  7659                           ;Config register IDLOC1 @ 0x200001
  7660                           ;	unspecified, using default values
  7661   200001                     	org	2097153
  7662   200001  FF                 	db	255
  7663                           
  7664                           ;Config register IDLOC2 @ 0x200002
  7665                           ;	unspecified, using default values
  7666   200002                     	org	2097154
  7667   200002  FF                 	db	255
  7668                           
  7669                           ;Config register IDLOC3 @ 0x200003
  7670                           ;	unspecified, using default values
  7671   200003                     	org	2097155
  7672   200003  FF                 	db	255
  7673                           
  7674                           ;Config register IDLOC4 @ 0x200004
  7675                           ;	unspecified, using default values
  7676   200004                     	org	2097156
  7677   200004  FF                 	db	255
  7678                           
  7679                           ;Config register IDLOC5 @ 0x200005
  7680                           ;	unspecified, using default values
  7681   200005                     	org	2097157
  7682   200005  FF                 	db	255
  7683                           
  7684                           ;Config register IDLOC6 @ 0x200006
  7685                           ;	unspecified, using default values
  7686   200006                     	org	2097158
  7687   200006  FF                 	db	255
  7688                           
  7689                           ;Config register IDLOC7 @ 0x200007
  7690                           ;	unspecified, using default values
  7691   200007                     	org	2097159
  7692   200007  FF                 	db	255
  7693                           
  7694                           	psect	config
  7695                           
  7696                           ; Padding undefined space
  7697   300000                     	org	3145728
  7698   300000  FF                 	db	255
  7699                           
  7700                           ;Config register CONFIG1H @ 0x300001
  7701                           ;	Oscillator Selection bits
  7702                           ;	OSC = HS, HS oscillator
  7703                           ;	Fail-Safe Clock Monitor Enable bit
  7704                           ;	FCMEN = OFF, Fail-Safe Clock Monitor disabled
  7705                           ;	Internal/External Oscillator Switchover bit
  7706                           ;	IESO = OFF, Oscillator Switchover mode disabled
  7707   300001                     	org	3145729
  7708   300001  02                 	db	2
  7709                           
  7710                           ;Config register CONFIG2L @ 0x300002
  7711                           ;	Power-up Timer Enable bit
  7712                           ;	PWRT = OFF, PWRT disabled
  7713                           ;	Brown-out Reset Enable bits
  7714                           ;	BOREN = OFF, Brown-out Reset disabled in hardware and software
  7715                           ;	Brown Out Reset Voltage bits
  7716                           ;	BORV = 1, 
  7717   300002                     	org	3145730
  7718   300002  09                 	db	9
  7719                           
  7720                           ;Config register CONFIG2H @ 0x300003
  7721                           ;	Watchdog Timer Enable bit
  7722                           ;	WDT = OFF, WDT disabled (control is placed on the SWDTEN bit)
  7723                           ;	Watchdog Timer Postscale Select bits
  7724                           ;	WDTPS = 512, 1:512
  7725   300003                     	org	3145731
  7726   300003  12                 	db	18
  7727                           
  7728                           ; Padding undefined space
  7729   300004                     	org	3145732
  7730   300004  FF                 	db	255
  7731                           
  7732                           ;Config register CONFIG3H @ 0x300005
  7733                           ;	CCP2 MUX bit
  7734                           ;	CCP2MX = PORTC, CCP2 input/output is multiplexed with RC1
  7735                           ;	PORTB A/D Enable bit
  7736                           ;	PBADEN = OFF, PORTB<4:0> pins are configured as digital I/O on Reset
  7737                           ;	Low-Power Timer1 Oscillator Enable bit
  7738                           ;	LPT1OSC = OFF, Timer1 configured for higher power operation
  7739                           ;	MCLR Pin Enable bit
  7740                           ;	MCLRE = ON, MCLR pin enabled; RE3 input pin disabled
  7741   300005                     	org	3145733
  7742   300005  81                 	db	129
  7743                           
  7744                           ;Config register CONFIG4L @ 0x300006
  7745                           ;	Stack Full/Underflow Reset Enable bit
  7746                           ;	STVREN = ON, Stack full/underflow will cause Reset
  7747                           ;	Single-Supply ICSP Enable bit
  7748                           ;	LVP = OFF, Single-Supply ICSP disabled
  7749                           ;	Extended Instruction Set Enable bit
  7750                           ;	XINST = OFF, Instruction set extension and Indexed Addressing mode disabled (Legacy mo
      +                          de)
  7751                           ;	Background Debugger Enable bit
  7752                           ;	DEBUG = 0x1, unprogrammed default
  7753   300006                     	org	3145734
  7754   300006  81                 	db	129
  7755                           
  7756                           ; Padding undefined space
  7757   300007                     	org	3145735
  7758   300007  FF                 	db	255
  7759                           
  7760                           ;Config register CONFIG5L @ 0x300008
  7761                           ;	Code Protection bit
  7762                           ;	CP0 = OFF, Block 0 (000800-003FFFh) not code-protected
  7763                           ;	Code Protection bit
  7764                           ;	CP1 = OFF, Block 1 (004000-007FFFh) not code-protected
  7765                           ;	Code Protection bit
  7766                           ;	CP2 = OFF, Block 2 (008000-00BFFFh) not code-protected
  7767                           ;	Code Protection bit
  7768                           ;	CP3 = OFF, Block 3 (00C000-00FFFFh) not code-protected
  7769   300008                     	org	3145736
  7770   300008  0F                 	db	15
  7771                           
  7772                           ;Config register CONFIG5H @ 0x300009
  7773                           ;	Boot Block Code Protection bit
  7774                           ;	CPB = OFF, Boot block (000000-0007FFh) not code-protected
  7775                           ;	Data EEPROM Code Protection bit
  7776                           ;	CPD = OFF, Data EEPROM not code-protected
  7777   300009                     	org	3145737
  7778   300009  C0                 	db	192
  7779                           
  7780                           ;Config register CONFIG6L @ 0x30000A
  7781                           ;	Write Protection bit
  7782                           ;	WRT0 = OFF, Block 0 (000800-003FFFh) not write-protected
  7783                           ;	Write Protection bit
  7784                           ;	WRT1 = OFF, Block 1 (004000-007FFFh) not write-protected
  7785                           ;	Write Protection bit
  7786                           ;	WRT2 = OFF, Block 2 (008000-00BFFFh) not write-protected
  7787                           ;	Write Protection bit
  7788                           ;	WRT3 = OFF, Block 3 (00C000-00FFFFh) not write-protected
  7789   30000A                     	org	3145738
  7790   30000A  0F                 	db	15
  7791                           
  7792                           ;Config register CONFIG6H @ 0x30000B
  7793                           ;	Configuration Register Write Protection bit
  7794                           ;	WRTC = OFF, Configuration registers (300000-3000FFh) not write-protected
  7795                           ;	Boot Block Write Protection bit
  7796                           ;	WRTB = OFF, Boot Block (000000-0007FFh) not write-protected
  7797                           ;	Data EEPROM Write Protection bit
  7798                           ;	WRTD = OFF, Data EEPROM not write-protected
  7799   30000B                     	org	3145739
  7800   30000B  E0                 	db	224
  7801                           
  7802                           ;Config register CONFIG7L @ 0x30000C
  7803                           ;	Table Read Protection bit
  7804                           ;	EBTR0 = OFF, Block 0 (000800-003FFFh) not protected from table reads executed in other
      +                           blocks
  7805                           ;	Table Read Protection bit
  7806                           ;	EBTR1 = OFF, Block 1 (004000-007FFFh) not protected from table reads executed in other
      +                           blocks
  7807                           ;	Table Read Protection bit
  7808                           ;	EBTR2 = OFF, Block 2 (008000-00BFFFh) not protected from table reads executed in other
      +                           blocks
  7809                           ;	Table Read Protection bit
  7810                           ;	EBTR3 = OFF, Block 3 (00C000-00FFFFh) not protected from table reads executed in other
      +                           blocks
  7811   30000C                     	org	3145740
  7812   30000C  0F                 	db	15
  7813                           
  7814                           ;Config register CONFIG7H @ 0x30000D
  7815                           ;	Boot Block Table Read Protection bit
  7816                           ;	EBTRB = OFF, Boot Block (000000-0007FFh) not protected from table reads executed in ot
      +                          her blocks
  7817   30000D                     	org	3145741
  7818   30000D  40                 	db	64
  7819                           tosu	equ	0xFFF
  7820                           tosh	equ	0xFFE
  7821                           tosl	equ	0xFFD
  7822                           stkptr	equ	0xFFC
  7823                           pclatu	equ	0xFFB
  7824                           pclath	equ	0xFFA
  7825                           pcl	equ	0xFF9
  7826                           tblptru	equ	0xFF8
  7827                           tblptrh	equ	0xFF7
  7828                           tblptrl	equ	0xFF6
  7829                           tablat	equ	0xFF5
  7830                           prodh	equ	0xFF4
  7831                           prodl	equ	0xFF3
  7832                           indf0	equ	0xFEF
  7833                           postinc0	equ	0xFEE
  7834                           postdec0	equ	0xFED
  7835                           preinc0	equ	0xFEC
  7836                           plusw0	equ	0xFEB
  7837                           fsr0h	equ	0xFEA
  7838                           fsr0l	equ	0xFE9
  7839                           wreg	equ	0xFE8
  7840                           indf1	equ	0xFE7
  7841                           postinc1	equ	0xFE6
  7842                           postdec1	equ	0xFE5
  7843                           preinc1	equ	0xFE4
  7844                           plusw1	equ	0xFE3
  7845                           fsr1h	equ	0xFE2
  7846                           fsr1l	equ	0xFE1
  7847                           bsr	equ	0xFE0
  7848                           indf2	equ	0xFDF
  7849                           postinc2	equ	0xFDE
  7850                           postdec2	equ	0xFDD
  7851                           preinc2	equ	0xFDC
  7852                           plusw2	equ	0xFDB
  7853                           fsr2h	equ	0xFDA
  7854                           fsr2l	equ	0xFD9
  7855                           status	equ	0xFD8

Data Sizes:
    Strings     26
    Constant    16
    Data        63
    BSS         96
    Persistent  1
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM          126     98     114
    BANK0           128     12     124
    BANK1           256      0      32
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          256      0       0
    BANK14          256      0       0
    BANK15          128      0       0

Pointer List with Targets:

    fputs@s	PTR const unsigned char  size(2) Largest target is 32
		 -> dbuf(BANK1[32]), 

    fputs@fp	PTR struct _IO_FILE size(2) Largest target is 12
		 -> sprintf@f(COMRAM[12]), 

    fputc@fp...source	PTR const unsigned char  size(2) Largest target is 0

    fputc@fp...buffer	PTR unsigned char  size(2) Largest target is 0

    fputc@fp	PTR struct _IO_FILE size(2) Largest target is 12
		 -> sprintf@f(COMRAM[12]), 

    vfprintf@ap	PTR PTR void  size(2) Largest target is 2
		 -> sprintf@ap(COMRAM[2]), 

    vfprintf@fp	PTR struct _IO_FILE size(2) Largest target is 12
		 -> sprintf@f(COMRAM[12]), 

    vfprintf@fmt	PTR const unsigned char  size(2) Largest target is 3
		 -> STR_3(CODE[3]), STR_2(CODE[3]), STR_1(CODE[3]), 

    vfprintf@cfmt	PTR unsigned char  size(2) Largest target is 3
		 -> STR_3(CODE[3]), STR_2(CODE[3]), STR_1(CODE[3]), 

    vfpfcnvrt@fp	PTR struct _IO_FILE size(2) Largest target is 12
		 -> sprintf@f(COMRAM[12]), 

    vfpfcnvrt@ap	PTR PTR void  size(2) Largest target is 2
		 -> sprintf@ap(COMRAM[2]), 

    vfpfcnvrt@cp	PTR unsigned char  size(2) Largest target is 3
		 -> STR_3(CODE[3]), STR_2(CODE[3]), STR_1(CODE[3]), 

    vfpfcnvrt@fmt	PTR PTR unsigned char  size(2) Largest target is 2
		 -> vfprintf@cfmt(COMRAM[2]), 

    S2519$vp	PTR void  size(2) Largest target is 0

    convarg.vp	PTR void  size(2) Largest target is 0

    dtoa@fp	PTR struct _IO_FILE size(2) Largest target is 12
		 -> sprintf@f(COMRAM[12]), 

    pad@buf	PTR unsigned char  size(2) Largest target is 32
		 -> dbuf(BANK1[32]), 

    pad@fp	PTR struct _IO_FILE size(2) Largest target is 12
		 -> sprintf@f(COMRAM[12]), 

    sprintf@fmt	PTR const unsigned char  size(2) Largest target is 3
		 -> STR_3(CODE[3]), STR_2(CODE[3]), STR_1(CODE[3]), 

    sprintf@s	PTR unsigned char  size(2) Largest target is 6
		 -> convert_uint16_to_string@Temp_String(BANK0[6]), 

    sprintf@ap	PTR void [1] size(2) Largest target is 2
		 -> ?_sprintf(COMRAM[2]), 

    S2466$source	PTR const unsigned char  size(2) Largest target is 0

    f...source	PTR const unsigned char  size(2) Largest target is 0

    S2466$buffer	PTR unsigned char  size(2) Largest target is 0

    f...buffer	PTR unsigned char  size(2) Largest target is 0

    memset@dest	PTR void  size(2) Largest target is 6
		 -> adc_rss_txt_2(BANK0[6]), adc_rss_txt_1(BANK0[6]), 

    memset@s	PTR unsigned char  size(2) Largest target is 6
		 -> adc_rss_txt_2(BANK0[6]), adc_rss_txt_1(BANK0[6]), 

    adc1.ADC_INTERRUPTHANDLER	PTR FTN()void  size(2) Largest target is 1
		 -> adc_defaultinterrupthandler(), 

    Interrupt_INTx_SetInterruptHandler@int_obj.EXT_InterruptHandler	PTR FTN()void  size(2) Largest target is 0

    Interrupt_INTx_Clear_Flag@int_obj.EXT_InterruptHandler	PTR FTN()void  size(2) Largest target is 0

    Interrupt_INTx_Pin_Init@int_obj.EXT_InterruptHandler	PTR FTN()void  size(2) Largest target is 0

    Interrupt_INTx_Edge_Init@int_obj.EXT_InterruptHandler	PTR FTN()void  size(2) Largest target is 0

    Interrupt_INTx_Disable@int_obj.EXT_InterruptHandler	PTR FTN()void  size(2) Largest target is 0

    S1380$EXT_InterruptHandler	PTR FTN()void  size(2) Largest target is 0

    Interrupt_INTx_Enable@int_obj.EXT_InterruptHandler	PTR FTN()void  size(2) Largest target is 0

    S1496$EXT_InterruptHandler_LOW	PTR FTN()void  size(2) Largest target is 0

    Interrupt_RBx_Init@int_obj.EXT_InterruptHandler_LOW	PTR FTN()void  size(2) Largest target is 0

    S1496$EXT_InterruptHandler_HIGH	PTR FTN()void  size(2) Largest target is 0

    Interrupt_RBx_Init@int_obj.EXT_InterruptHandler_HIGH	PTR FTN()void  size(2) Largest target is 0

    RB7_InterruptHandler_LOW	PTR FTN()void  size(2) Largest target is 1
		 -> NULL(), 

    RB7_InterruptHandler_HIGH	PTR FTN()void  size(2) Largest target is 1
		 -> NULL(), 

    RB6_InterruptHandler_LOW	PTR FTN()void  size(2) Largest target is 1
		 -> NULL(), 

    RB6_InterruptHandler_HIGH	PTR FTN()void  size(2) Largest target is 1
		 -> NULL(), 

    RB5_InterruptHandler_LOW	PTR FTN()void  size(2) Largest target is 1
		 -> NULL(), 

    RB5_InterruptHandler_HIGH	PTR FTN()void  size(2) Largest target is 1
		 -> NULL(), 

    RB4_InterruptHandler_LOW	PTR FTN()void  size(2) Largest target is 1
		 -> NULL(), 

    RB4_InterruptHandler_HIGH	PTR FTN()void  size(2) Largest target is 1
		 -> NULL(), 

    INT2_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> NULL(), 

    INT1_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> NULL(), 

    INT0_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> NULL(), 

    gpio_pin_intialize@_pin_config	PTR const struct . size(2) Largest target is 10
		 -> dc_motor_2.dc_motor_pin(BANK0[2]), dc_motor_2(BANK0[2]), dc_motor_1.dc_motor_pin(BANK0[2]), dc_motor_1(BANK0[2]), 
		 -> lcd.lcd_data(BANK0[8]), lcd(BANK0[10]), relay_initialize@pin_obj(COMRAM[1]), led_initialize@pin_obj(COMRAM[1]), 

    gpio_pin_write_logic@_pin_config	PTR const struct . size(2) Largest target is 10
		 -> dc_motor_2.dc_motor_pin(BANK0[2]), dc_motor_2(BANK0[2]), dc_motor_1.dc_motor_pin(BANK0[2]), dc_motor_1(BANK0[2]), 
		 -> lcd.lcd_data(BANK0[8]), lcd(BANK0[10]), relay_turn_off@pin_obj(COMRAM[1]), relay_turn_on@pin_obj(COMRAM[1]), 
		 -> relay_initialize@pin_obj(COMRAM[1]), led_turn_off@pin_obj(COMRAM[1]), led_turn_on@pin_obj(COMRAM[1]), led_initialize@pin_obj(COMRAM[1]), 

    gpio_pin_direction_intialize@_pin_config	PTR const struct . size(2) Largest target is 10
		 -> dc_motor_2.dc_motor_pin(BANK0[2]), dc_motor_2(BANK0[2]), dc_motor_1.dc_motor_pin(BANK0[2]), dc_motor_1(BANK0[2]), 
		 -> lcd.lcd_data(BANK0[8]), lcd(BANK0[10]), relay_initialize@pin_obj(COMRAM[1]), led_initialize@pin_obj(COMRAM[1]), 

    port_registers	PTR volatile unsigned char [5] size(2) Largest target is 1
		 -> PORTE(BITBIGSFRlllll[1]), PORTD(BITBIGSFRlllll[1]), PORTC(BITBIGSFRlllll[1]), PORTB(BITBIGSFRlllll[1]), 
		 -> PORTA(BITBIGSFRlllll[1]), 

    lat_registers	PTR volatile unsigned char [5] size(2) Largest target is 1
		 -> LATE(BITBIGSFRllllh[1]), LATD(BITBIGSFRllllh[1]), LATC(BITBIGSFRllllh[1]), LATB(BITBIGSFRllllh[1]), 
		 -> LATA(BITBIGSFRlllll[1]), 

    tris_registers	PTR volatile unsigned char [5] size(2) Largest target is 1
		 -> TRISD(ABS[1]), TRISC(ABS[1]), TRISB(ABS[1]), TRISE(ABS[1]), 
		 -> TRISA(BITBIGSFRlllll[1]), 

    configure_the_voltage_reference@adc.ADC_INTERRUPTHANDLER	PTR FTN()void  size(2) Largest target is 1
		 -> adc_defaultinterrupthandler(), 

    configure_the_voltage_reference@adc	PTR const struct . size(2) Largest target is 7
		 -> adc1(BANK0[7]), 

    adc_select_format@adc.ADC_INTERRUPTHANDLER	PTR FTN()void  size(2) Largest target is 1
		 -> adc_defaultinterrupthandler(), 

    adc_select_format@adc	PTR const struct . size(2) Largest target is 7
		 -> adc1(BANK0[7]), 

    ADC_get_conversion_interrupt@adc	PTR const struct . size(2) Largest target is 7
		 -> adc1(BANK0[7]), 

    ADC_get_conversion_result@adc.ADC_INTERRUPTHANDLER	PTR FTN()void  size(2) Largest target is 1
		 -> adc_defaultinterrupthandler(), 

    ADC_get_conversion_result@conversion_result	PTR unsigned short  size(2) Largest target is 2
		 -> adc_res_2(BANK0[2]), adc_res_1(BANK0[2]), 

    ADC_get_conversion_result@adc	PTR const struct . size(2) Largest target is 7
		 -> adc1(BANK0[7]), 

    ADC_START_CONVERSION@adc	PTR const struct . size(2) Largest target is 7
		 -> adc1(BANK0[7]), 

    ADC_SELECT_CHANNEL@adc	PTR const struct . size(2) Largest target is 7
		 -> adc1(BANK0[7]), 

    ADC_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> adc_defaultinterrupthandler(), NULL(), 

    S764$ADC_INTERRUPTHANDLER	PTR FTN()void  size(2) Largest target is 1
		 -> adc_defaultinterrupthandler(), 

    ADC_INIT@adc.ADC_INTERRUPTHANDLER	PTR FTN()void  size(2) Largest target is 1
		 -> adc_defaultinterrupthandler(), 

    ADC_INIT@adc	PTR const struct . size(2) Largest target is 7
		 -> adc1(BANK0[7]), 

    dc_motor_stop@_dc_motor	PTR const struct . size(2) Largest target is 2
		 -> dc_motor_2(BANK0[2]), dc_motor_1(BANK0[2]), 

    dc_motor_move_right@_dc_motor	PTR const struct . size(2) Largest target is 2
		 -> dc_motor_2(BANK0[2]), dc_motor_1(BANK0[2]), 

    dc_motor_initialize@_dc_motor	PTR const struct . size(2) Largest target is 2
		 -> dc_motor_2(BANK0[2]), dc_motor_1(BANK0[2]), 

    lcd_8bit_set_cursor@lcd	PTR const struct . size(2) Largest target is 10
		 -> lcd(BANK0[10]), 

    lcd_8bit_send_enable_signal@lcd	PTR const struct . size(2) Largest target is 10
		 -> lcd(BANK0[10]), 

    convert_uint16_to_string@str	PTR unsigned char  size(2) Largest target is 6
		 -> adc_rss_txt_2(BANK0[6]), adc_rss_txt_1(BANK0[6]), 

    sp__memset	PTR void  size(2) Largest target is 6
		 -> adc_rss_txt_2(BANK0[6]), adc_rss_txt_1(BANK0[6]), 

    lcd_8bit_send_string_pos@str	PTR unsigned char  size(2) Largest target is 9
		 -> adc_rss_txt_2(BANK0[6]), adc_rss_txt_1(BANK0[6]), STR_6(CODE[7]), STR_5(CODE[7]), 
		 -> STR_4(CODE[9]), 

    lcd_8bit_send_string_pos@lcd	PTR const struct . size(2) Largest target is 10
		 -> lcd(BANK0[10]), 

    lcd_8bit_send_string@str	PTR unsigned char  size(2) Largest target is 9
		 -> adc_rss_txt_2(BANK0[6]), adc_rss_txt_1(BANK0[6]), STR_6(CODE[7]), STR_5(CODE[7]), 
		 -> STR_4(CODE[9]), 

    lcd_8bit_send_string@lcd	PTR const struct . size(2) Largest target is 10
		 -> lcd(BANK0[10]), 

    lcd_8bit_send_char_data@lcd	PTR const struct . size(2) Largest target is 10
		 -> lcd(BANK0[10]), 

    lcd_8bit_send_command@lcd	PTR const struct . size(2) Largest target is 10
		 -> lcd(BANK0[10]), 

    lcd_8bit_intialize@lcd	PTR const struct . size(2) Largest target is 10
		 -> lcd(BANK0[10]), 


Critical Paths under _main in COMRAM

    _lcd_8bit_send_string_pos->_lcd_8bit_set_cursor
    _lcd_8bit_set_cursor->_lcd_8bit_send_command
    _lcd_8bit_send_string->_lcd_8bit_send_char_data
    _lcd_8bit_send_char_data->_lcd_8bit_send_enable_signal
    _dc_motor_stop->_gpio_pin_write_logic
    _dc_motor_move_right->_gpio_pin_write_logic
    _convert_uint16_to_string->_sprintf
    _sprintf->_vfprintf
    _vfprintf->_vfpfcnvrt
    _vfpfcnvrt->_dtoa
    _dtoa->_pad
    _pad->_fputs
    _fputs->_fputc
    _abs->___awmod
    _ecu_layer_intialize->_lcd_8bit_intialize
    _lcd_8bit_intialize->_lcd_8bit_send_command
    _lcd_8bit_send_command->_lcd_8bit_send_enable_signal
    _lcd_8bit_send_enable_signal->_gpio_pin_write_logic
    _dc_motor_initialize->_gpio_pin_intialize
    _gpio_pin_intialize->_gpio_pin_write_logic
    _ADC_INIT->_adc_select_format
    _ADC_INIT->_configure_the_voltage_reference
    ___fltol->___flmul
    ___flmul->___xxtofl
    _ADC_get_conversion_interrupt->_ADC_SELECT_CHANNEL
    _ADC_SELECT_CHANNEL->_adc_input_channel_port_configuration

Critical Paths under _InterruptManager in COMRAM

    _adc_defaultinterrupthandler->_ADC_get_conversion_result

Critical Paths under _main in BANK0

    _main->_convert_uint16_to_string

Critical Paths under _InterruptManager in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _InterruptManager in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _InterruptManager in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _InterruptManager in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _InterruptManager in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _InterruptManager in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _InterruptManager in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _InterruptManager in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _InterruptManager in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _InterruptManager in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _InterruptManager in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _InterruptManager in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _InterruptManager in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _InterruptManager in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Critical Paths under _InterruptManager in BANK14

    None.

Critical Paths under _main in BANK15

    None.

Critical Paths under _InterruptManager in BANK15

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 2     2      0   94362
                                             96 COMRAM     2     2      0
       _ADC_get_conversion_interrupt
                            ___flmul
                            ___fltol
                            ___lwdiv
                           ___xxtofl
              _application_intialize
           _convert_uint16_to_string
                _dc_motor_move_right
                      _dc_motor_stop
              _lcd_8bit_send_command
           _lcd_8bit_send_string_pos
 ---------------------------------------------------------------------------------
 (1) _lcd_8bit_send_string_pos                             7     1      6   27040
                                             41 COMRAM     7     1      6
               _lcd_8bit_send_string
                _lcd_8bit_set_cursor
 ---------------------------------------------------------------------------------
 (2) _lcd_8bit_set_cursor                                  7     3      4   13801
                                             34 COMRAM     7     3      4
              _lcd_8bit_send_command
 ---------------------------------------------------------------------------------
 (2) _lcd_8bit_send_string                                 5     1      4   11561
                                             34 COMRAM     5     1      4
            _lcd_8bit_send_char_data
 ---------------------------------------------------------------------------------
 (3) _lcd_8bit_send_char_data                              9     6      3   11295
                                             25 COMRAM     9     6      3
               _gpio_pin_write_logic
        _lcd_8bit_send_enable_signal
 ---------------------------------------------------------------------------------
 (1) _dc_motor_stop                                        3     1      2    5437
                                             22 COMRAM     3     1      2
               _gpio_pin_write_logic
 ---------------------------------------------------------------------------------
 (1) _dc_motor_move_right                                  3     1      2    5437
                                             22 COMRAM     3     1      2
               _gpio_pin_write_logic
 ---------------------------------------------------------------------------------
 (1) _convert_uint16_to_string                            12     8      4   10234
                                              0 BANK0     12     8      4
                             _memset
                            _sprintf
 ---------------------------------------------------------------------------------
 (2) _sprintf                                             24    16      8    7642
                                             74 COMRAM    22    14      8
                           _vfprintf
 ---------------------------------------------------------------------------------
 (3) _vfprintf                                             8     2      6    6796
                                             66 COMRAM     8     2      6
                          _vfpfcnvrt
 ---------------------------------------------------------------------------------
 (4) _vfpfcnvrt                                           19    13      6    6335
                                             52 COMRAM    14     8      6
                               _dtoa
                              _fputc
 ---------------------------------------------------------------------------------
 (5) _dtoa                                                13     9      4    4768
                                             39 COMRAM    13     9      4
                            ___awdiv
                            ___awmod
                                _abs
                                _pad
 ---------------------------------------------------------------------------------
 (6) _pad                                                 11     5      6    2533
                                             28 COMRAM    11     5      6
                              _fputc
                              _fputs
 ---------------------------------------------------------------------------------
 (7) _fputs                                                7     3      4    1177
                                             21 COMRAM     7     3      4
                              _fputc
 ---------------------------------------------------------------------------------
 (5) _fputc                                                9     5      4     857
                                             12 COMRAM     9     5      4
                              _putch
 ---------------------------------------------------------------------------------
 (6) _putch                                                1     1      0       0
 ---------------------------------------------------------------------------------
 (6) _abs                                                  4     2      2     183
                                             18 COMRAM     4     2      2
                            ___awmod (ARG)
 ---------------------------------------------------------------------------------
 (6) ___awmod                                              6     2      4     613
                                             12 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (6) ___awdiv                                              8     4      4     625
                                             12 COMRAM     8     4      4
 ---------------------------------------------------------------------------------
 (2) _memset                                              12     6      6    1827
                                             12 COMRAM    12     6      6
 ---------------------------------------------------------------------------------
 (1) _application_intialize                                1     1      0   28723
                           _ADC_INIT
                _ecu_layer_intialize
 ---------------------------------------------------------------------------------
 (2) _ecu_layer_intialize                                  1     1      0   28196
                _dc_motor_initialize
                 _lcd_8bit_intialize
 ---------------------------------------------------------------------------------
 (3) _lcd_8bit_intialize                                   6     4      2   20768
                                             34 COMRAM     6     4      2
                 _gpio_pin_intialize
              _lcd_8bit_send_command
 ---------------------------------------------------------------------------------
 (3) _lcd_8bit_send_command                                9     6      3   13119
                                             25 COMRAM     9     6      3
               _gpio_pin_write_logic
        _lcd_8bit_send_enable_signal
 ---------------------------------------------------------------------------------
 (4) _lcd_8bit_send_enable_signal                          3     1      2    5416
                                             22 COMRAM     3     1      2
               _gpio_pin_write_logic
 ---------------------------------------------------------------------------------
 (3) _dc_motor_initialize                                  3     1      2    7424
                                             26 COMRAM     3     1      2
                 _gpio_pin_intialize
 ---------------------------------------------------------------------------------
 (4) _gpio_pin_intialize                                   4     2      2    7182
                                             22 COMRAM     4     2      2
       _gpio_pin_direction_intialize
               _gpio_pin_write_logic
 ---------------------------------------------------------------------------------
 (5) _gpio_pin_write_logic                                10     7      3    5195
                                             12 COMRAM    10     7      3
 ---------------------------------------------------------------------------------
 (5) _gpio_pin_direction_intialize                         9     7      2     559
                                             12 COMRAM     9     7      2
 ---------------------------------------------------------------------------------
 (2) _ADC_INIT                                             4     2      2     525
                                             16 COMRAM     4     2      2
_adc_input_channel_port_configuratio
                  _adc_select_format
    _configure_the_voltage_reference
 ---------------------------------------------------------------------------------
 (3) _configure_the_voltage_reference                      5     3      2     123
                                             12 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (3) _adc_select_format                                    5     3      2     123
                                             12 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (1) ___xxtofl                                            14    10      4     550
                                             12 COMRAM    14    10      4
 ---------------------------------------------------------------------------------
 (1) ___lwdiv                                              7     3      4     466
                                             12 COMRAM     7     3      4
 ---------------------------------------------------------------------------------
 (1) ___fltol                                             10     6      4     457
                                             51 COMRAM    10     6      4
                            ___flmul (ARG)
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (1) ___flmul                                             25    17      8    1896
                                             26 COMRAM    25    17      8
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (1) _ADC_get_conversion_interrupt                         5     2      3    1003
                                             19 COMRAM     4     1      3
                 _ADC_SELECT_CHANNEL
               _ADC_START_CONVERSION
 ---------------------------------------------------------------------------------
 (2) _ADC_START_CONVERSION                                 3     1      2     183
                                             12 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (2) _ADC_SELECT_CHANNEL                                   5     2      3     403
                                             15 COMRAM     4     1      3
_adc_input_channel_port_configuratio
 ---------------------------------------------------------------------------------
 (3) _adc_input_channel_port_configuration                 4     4      0      24
                                             12 COMRAM     3     3      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 7
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (10) _InterruptManager                                    4     4      0     789
                                              8 COMRAM     4     4      0
                            _ADC_ISR
                           _INT0_ISR
                           _INT1_ISR
                           _INT2_ISR
                            _RB4_ISR
                            _RB5_ISR
                            _RB6_ISR
                            _RB7_ISR
 ---------------------------------------------------------------------------------
 (11) _RB7_ISR                                             1     1      0      44
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (11) _RB6_ISR                                             1     1      0      44
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (11) _RB5_ISR                                             1     1      0      44
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (11) _RB4_ISR                                             1     1      0      44
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (11) _INT2_ISR                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (11) _INT1_ISR                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (11) _INT0_ISR                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (11) _ADC_ISR                                             0     0      0     613
                                NULL *
        _adc_defaultinterrupthandler *
 ---------------------------------------------------------------------------------
 (12) _adc_defaultinterrupthandler                         0     0      0     613
          _ADC_get_conversion_result
 ---------------------------------------------------------------------------------
 (13) _ADC_get_conversion_result                           8     4      4     613
                                              0 COMRAM     8     4      4
 ---------------------------------------------------------------------------------
 (12) NULL(Fake)                                           0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 13
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _ADC_get_conversion_interrupt
     _ADC_SELECT_CHANNEL
       _adc_input_channel_port_configuration
     _ADC_START_CONVERSION
   ___flmul
     ___xxtofl (ARG)
   ___fltol
     ___flmul (ARG)
     ___xxtofl (ARG)
   ___lwdiv
   ___xxtofl
   _application_intialize
     _ADC_INIT
       _adc_input_channel_port_configuration
       _adc_select_format
       _configure_the_voltage_reference
     _ecu_layer_intialize
       _dc_motor_initialize
         _gpio_pin_intialize
           _gpio_pin_direction_intialize
           _gpio_pin_write_logic
       _lcd_8bit_intialize
         _gpio_pin_intialize
         _lcd_8bit_send_command
           _gpio_pin_write_logic
           _lcd_8bit_send_enable_signal
             _gpio_pin_write_logic
   _convert_uint16_to_string
     _memset
     _sprintf
       _vfprintf
         _vfpfcnvrt
           _dtoa
             ___awdiv
             ___awmod
             _abs
               ___awmod (ARG)
             _pad
               _fputc
                 _putch
               _fputs
                 _fputc
           _fputc
   _dc_motor_move_right
     _gpio_pin_write_logic
   _dc_motor_stop
     _gpio_pin_write_logic
   _lcd_8bit_send_command
   _lcd_8bit_send_string_pos
     _lcd_8bit_send_string
       _lcd_8bit_send_char_data
         _gpio_pin_write_logic
         _lcd_8bit_send_enable_signal
     _lcd_8bit_set_cursor
       _lcd_8bit_send_command

 _InterruptManager (ROOT)
   _ADC_ISR
     NULL(Fake) *
     _adc_defaultinterrupthandler *
       _ADC_get_conversion_result
   _INT0_ISR
   _INT1_ISR
   _INT2_ISR
   _RB4_ISR
   _RB5_ISR
   _RB6_ISR
   _RB7_ISR

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             F7F      0       0      44        0.0%
EEDATA             400      0       0       0        0.0%
BITBANK14          100      0       0      33        0.0%
BANK14             100      0       0      34        0.0%
BITBANK13          100      0       0      31        0.0%
BANK13             100      0       0      32        0.0%
BITBANK12          100      0       0      29        0.0%
BANK12             100      0       0      30        0.0%
BITBANK11          100      0       0      27        0.0%
BANK11             100      0       0      28        0.0%
BITBANK10          100      0       0      25        0.0%
BANK10             100      0       0      26        0.0%
BITBANK9           100      0       0      23        0.0%
BANK9              100      0       0      24        0.0%
BITBANK8           100      0       0      21        0.0%
BANK8              100      0       0      22        0.0%
BITBANK7           100      0       0      19        0.0%
BANK7              100      0       0      20        0.0%
BITBANK6           100      0       0      17        0.0%
BANK6              100      0       0      18        0.0%
BITBANK5           100      0       0      15        0.0%
BANK5              100      0       0      16        0.0%
BITBANK4           100      0       0      13        0.0%
BANK4              100      0       0      14        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0      20       7       12.5%
BITBANK15           80      0       0      35        0.0%
BANK15              80      0       0      36        0.0%
BITBANK0            80      0       0       4        0.0%
BANK0               80      C      7C       5       96.9%
BITCOMRAM           7E      0       0       0        0.0%
COMRAM              7E     62      72       1       90.5%
BITBIGSFRhlhl       2B      0       0      38        0.0%
BITBIGSFRllhh       15      0       0      39        0.0%
BITBIGSFRhh          D      0       0      37        0.0%
BITBIGSFRllhll       7      0       0      40        0.0%
BITBIGSFRlllhh       6      0       0      41        0.0%
BITBIGSFRllllh       4      0       0      42        0.0%
BITBIGSFRlllll       4      0       0      43        0.0%
BIGSFR               0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0     10E      12        0.0%
DATA                 0      0     10E       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.41 build 20230208172133 
Symbol Table                                                                                   Sat Sep 09 18:09:16 2023

                          ??_InterruptManager 0009                                  ___awdiv@sign 0012  
                                         l121 2B3E                                           l114 21F6  
                                         l211 30A8                                           l141 2BC8  
                                         l216 2FE6                                           l128 2AAE  
                                         l226 2FA0                                           l146 2F5A  
                                         l404 31B4                                           l182 3152  
                                         l407 3222                                           l168 2824  
                                         l192 297C                                           l409 3224  
                                         l443 311E                                           l605 2E76  
                                         l462 25DA                                           l470 2D4A  
                                         l471 2D50                                           l359 320A  
                                         l472 2D9C                                           l392 2998  
                                         l394 2A1E                                           l483 2C62  
                                         l468 2D44                                           l565 1F9E  
                                         l486 2C6A                                           l479 2C5A  
                                         l488 2CB8                                           l584 2322  
                                         l975 329E                                           _abs 302C  
                                         _lcd 00A6                                           _pad 2BCA  
                   _RB5_InterruptHandler_HIGH 00CF                               __end_of_ADC_ISR 31E6  
                                         _ret 00FB                                  ___awmod@sign 0012  
                         led_initialize@F3048 006E                                           prod 0FF3  
                   ?_lcd_8bit_send_string_pos 002A                         relay_initialize@F3042 006A  
                                         tosl 0FFD                                           wreg 0FE8  
                 __end_of_lcd_8bit_set_cursor 297E                                  ___flmul@aexp 002C  
                                ___flmul@bexp 002D                                  ___flmul@sign 0027  
                                ___flmul@temp 0032                                  ___flmul@prod 002E  
                   ?_convert_uint16_to_string 00EF                     _ADC_get_conversion_result 242A  
                             __end_of_RB4_ISR 328E                               __end_of_RB5_ISR 3274  
                             __end_of_RB6_ISR 325A                               __end_of_RB7_ISR 3240  
__end_of_adc_input_channel_port_configuration 25DC        ??_adc_input_channel_port_configuration 000D  
       ?_adc_input_channel_port_configuration 0001          _adc_input_channel_port_configuration 2504  
                                ___fltol@exp1 003D                  __end_of_lcd_8bit_send_string 2BCA  
                                        ?_abs 0013                                          l1222 28D4  
                                        l1209 2768                                          l1601 135E  
                                        l1602 134C                                          l1275 2428  
                                        l4100 1F5A                                          l1700 1BE6  
                                        l4102 1F9C                                          l4110 3120  
                                        l1711 1CE4                                          l5000 23C8  
                                        l1640 1A8A                                          l4112 3120  
                                        l4200 2B1C                                          l1609 1416  
                                        l1633 19F2                                          l5010 23F8  
                                        l4114 3134                                          l4202 2B1E  
                                        l1731 306A                                          l5012 2408  
                                        l1476 2D2C                                          l5020 2CC2  
                                        l1636 1B4E                                          l4116 313A  
                                        l4204 2B2E                                          l1724 2EC6  
                                        l4300 2A52                                          l1469 2D24  
                                        l1653 1E5A                                          l5014 2418  
                                        l5006 23DC                                          l5030 2CF8  
                                        l5022 2CD4                                          l4206 2B3C  
                                        l1718 20CA                                          l4302 2A8C  
                                        l1647 1AE6                                          l1743 26A4  
                                        l1751 302A                                          l1592 10F0  
                                        l5008 23E8                                          l5032 2D0E  
                                        l5024 2CDC                                          l5040 199E  
                                        l4320 30A6                                          l4312 306C  
                                        l4240 20CC                                          l1728 3062  
                                        l4304 2A8E                                          l4330 2516  
                                        l5034 2D16                                          l5026 2CE4  
                                        l5018 2CBA                                          l5042 19AE  
                                        l4090 1E72                                          l4170 2E0C  
                                        l4314 3070                                          l4242 20D0  
                                        l1754 32B0                                          l1666 2F12  
                                        l4306 2A9E                                          l4340 2534  
                                        l4332 251C                                          l4324 2506  
                                        l1596 1454                                          l5036 2D18  
                                        l5028 2CF2                                          l5060 1A74  
                                        l5052 1A2C                                          l5044 19BC  
                                        l4092 1E94                                          l4180 2E74  
                                        l4172 2E0C                                          l4316 3082  
                                        l4260 213C                                          l4244 20E2  
                                        l6100 282A                                          l1692 2C42  
                                        l4308 2AAC                                          l4350 2552  
                                        l4342 253A                                          l4334 2522  
                                        l4326 250A                                          l5038 2D1E  
                                        l5070 1AF4                                          l5062 1A80  
                                        l5054 1A34                                          l5046 1A02  
                                        l4094 1E9C                                          l4086 1E5C  
                                        l4174 2E1E                                          l4318 308A  
                                        l4190 2ACE                                          l4270 2192  
                                        l4262 214C                                          l4254 210E  
                                        l4246 20EA                                          l6110 285A  
                                        l6102 2838                                          l1599 12E6  
                                        l4344 2540                                          l4336 2528  
                                        l4328 2510                                          l4352 2558  
                                        l5080 1B3C                                          l5072 1AF6  
                                        l5064 1ABC                                          l5056 1A40  
                                        l5048 1A18                                          l4360 2D2E  
                                        l4096 1EFE                                          l4088 1E60  
                                        l4176 2E40                                          l4192 2ADE  
                                        l4184 2AB0                                          l4280 21E2  
                                        l4272 21A2                                          l4264 215C  
                                        l4256 212A                                          l4248 210A  
                                        l6120 28A0                                          l6112 286C  
                                        l6104 2840                                          l6040 2628  
                                        l6032 25DC                                          l1688 2BEC  
                                        l1697 1B98                                          l4346 2546  
                                        l4338 252E                                          l4354 25DA  
                                        l5082 1B3E                                          l5074 1AFA  
                                        l5066 1AC8                                          l5058 1A72  
                                        l4362 2D2E                                          l4178 2E48  
                                        l4186 2AB4                                          l4274 21B2  
                                        l4266 217C                                          l4258 212C  
                                        l4282 21F4                                          l6130 28CC  
                                        l6122 28A8                                          l6114 2874  
                                        l6106 2844                                          l6042 265E  
                                        l6034 25EE                                          l6050 3006  
                                        l6210 1FE6                                          l6202 1FA0  
                                        l4290 2A36                                          l1699 1BA0  
                                        l4348 254C                                          l5076 1B1E  
                                        l5068 1AD6                                          l4364 2D40  
                                        l4380 2C72                                          l4188 2AC6  
                                        l4276 21C2                                          l4268 2182  
                                        l4540 31E6                                          l6060 26C0  
                                        l6124 28AE                                          l6116 287C  
                                        l6108 2852                                          l6036 2600  
                                        l6052 300A                                          l6140 2BF8  
                                        l6212 1FF6                                          l6204 1FC6  
                                        l6300 27C6                                          l4700 2F9E  
                                        l4292 2A3E                                          l4460 28E0  
                                        l4710 3100                                          l5078 1B2E  
                                        l4366 2D56                                          l4382 2CB8  
                                        l4374 2C44                                          l4550 2990  
                                        l4198 2AE2                                          l4278 21D2  
                                        l4542 31F2                                          l6070 26E6  
                                        l6062 26C4                                          l6054 26A6  
                                        l6118 288A                                          l6126 28B4  
                                        l6150 3046                                          l6038 260A  
                                        l6046 2FE8                                          l6142 2C0C  
                                        l6134 2BCA                                          l6222 208E  
                                        l6214 2014                                          l6206 1FD4  
                                        l6302 27E6                                          l4294 2A4E  
                                        l4286 2A20                                          l4462 28F8  
                                        l4470 297A                                          ?_pad 001D  
                                        l4712 311C                                          l4704 30E6  
                                        l4368 2D9C                                          l4376 2C44  
                                        l4560 29EA                                          l4552 299A  
                                        l4544 31FE                                          l6080 271C  
                                        l6072 26F8                                          l6064 26D2  
                                        l6056 26AA                                          l6128 28C4  
                                        l6048 2FF4                                          l6144 2C10  
                                        l6136 2BD8                                          l6160 1B8C  
                                        l6152 1B50                                          l6216 2032  
                                        l6208 1FE2                                          l6232 2E78  
                                        l6304 2802                                          l4288 2A24  
                                        l4480 2B44                                          l4464 2910  
                                        l4456 28D6                                          l4640 2F14  
                                        l4706 30EA                                          l4378 2C56  
                                        l4570 2A16                                          l4562 29EC  
                                        l4554 29D4                                          l4546 297E  
                                        l4538 31E6                                          l6242 1CE6  
                                        l6082 2732                                          l6074 2700  
                                        l6090 2748                                          l6066 26DA  
                                        l6058 26B8                                          l6146 2C2E  
                                        l6138 2BE4                                          l6170 1BDA  
                                        l6162 1BA8                                          l6154 1B64  
                                        l6218 2076                                          l6226 20A0  
                                        l6234 2E84                                          l6306 2804  
                                        l4490 2BC6                                          l4482 2B56  
                                        l4466 2928                                          l4458 28DA  
                                        l4650 2F58                                          l4642 2F14  
                                        l4580 3186                                          l4708 30FC  
                                        l4900 119A                                          l4572 2A18  
                                        l4564 29EE                                          l4556 29E6  
                                        l4548 297E                                          l6260 1DE4  
                                        l6252 1D46                                          l6092 2758  
                                        l6084 273A                                          l6076 2708  
                                        l6068 26DE                                          l6148 302C  
                                        l6180 1C30                                          l6172 1BE2  
                                        l6164 1BB8                                          l6156 1B74  
                                        l6236 2EA0                                          l6308 2822  
                                        l4484 2B5E                                          l4468 2940  
                                        l4644 2F26                                          l6340 1740  
                                        l4582 3198                                          l4910 11EC  
                                        l4902 11A6                                          l4566 29FE  
                                        l4558 29E8                                          l4574 2A1C  
                                        l6270 1E44                                          l6254 1D9E  
                                        l6246 1D04                                          l6094 2760  
                                        l6086 273C                                          l6078 2716  
                                        l6190 1C84                                          l6182 1C36  
                                        l6174 1BEE                                          l6166 1BBE  
                                        l6158 1B7C                                          l6238 2EBE  
                                        l4486 2B90                                          l4478 2B40  
                                        l4646 2F2E                                          l6350 17BE  
                                        l6342 1756                                          l4584 319C  
                                        l4592 320C                                          l4920 126A  
                                        l4912 11FC                                          l4904 11B6  
                                        l4568 2A0A                                          l4840 328E  
                                        l6272 1E48                                          l6264 1DFE  
                                        l6248 1D10                                          l6088 2742  
                                        l6192 1C9E                                          l6184 1C3C  
                                        l6176 1BF8                                          l6168 1BCE  
                                        l6280 2EE8                                          l4680 2FA2  
                                        l4488 2B94                                          l6520 2954  
                                        l4648 2F42                                          l6360 18AE  
                                        l6352 17D2                                          l6344 176A  
                                        l6336 171C                                          l6530 256C  
                                        l4586 31AE                                          l4578 3186  
                                        l4594 320C                                          l4930 12E4  
                                        l4922 12A0                                          l4914 1218  
                                        l4906 11C2                                          l4850 1048  
                                        l6522 230A                                          l3970 2230  
                                        l4842 329A                                          l6266 1E32  
                                        l6258 1DB8                                          l6098 2826  
                                        l6194 1CAE                                          l6178 1BFE  
                                        l6186 1C58                                          l6282 2F04  
                                        l6274 2EC8                                          l6290 277C  
                                        l4682 2FA6                                          l6370 1936  
                                        l6362 18C8                                          l6354 1824  
                                        l6346 178A                                          l6338 1720  
                                        l4588 31B4                                          l4596 321E  
                                        l4940 1344                                          l4932 12F6  
                                        l4924 12AE                                          l4916 1224  
                                        l4908 11D2                                          l4860 108E  
                                        l4852 1058                                          l4844 102C  
                                        l6524 1F86                                          l3972 2238  
                                        l3980 2320                                          l3964 21F8  
                                        l6268 1E3E                                          l6196 1CB4  
                                        l6188 1C72                                          l6276 2ED8  
                                        l6292 2780                                          l4684 2FB8  
                                        l4692 2F5C                                          l6372 194A  
                                        l6364 18E0                                          l6356 1876  
                                        l6348 17AA                                          l4598 3224  
                                        l4950 13B2                                          l4934 1304  
                                        l4926 12CC                                          l4918 1240  
                                        l4870 10BA                                          l4862 1094  
                                        l4854 1068                                          l4846 1038  
                                        l6526 2CA2                                          l3974 229A  
                                        l3966 21FC                                          l4838 328E  
                                        l6198 1CC4                                          l6278 2EE0  
                                        l6294 2792                                          l6286 276A  
                                        l4686 2FC0                                          l4694 2F60  
                                        l6374 195A                                          l6366 1900  
                                        l6358 1892                                          l4960 141A  
                                        l4944 136E                                          l4952 13B6  
                                        l4936 1308                                          l4928 12D6  
                                        l4880 1110                                          l4872 10CA  
                                        l4864 109A                                          l4856 1078  
                                        l4848 1046                                          l6528 2D86  
                                        l3968 220E                                          l6296 279A  
                                        l6288 2770                                          l4688 2FE4  
                                        l4696 2F72                                          l6376 1970  
                                        l6368 1920                                          l4970 1444  
                                        l4962 142A                                          l4954 13D0  
                                        l4946 137A                                          l4938 1316  
                                        l4890 1150                                          l4874 10DA  
                                        l4866 10A8                                          l4858 107E  
                                        l3978 22F6                                          l6298 27B6  
                                        l4698 2F7A                                          l6378 1984  
                                        l4964 1438                                          l4956 13E4  
                                        l4948 1388                                          l4892 115C  
                                        l4884 1124                                          l4876 10E0  
                                        l4868 10AA                                          l4980 234E  
                                        l4966 143A                                          l4958 13FE  
                                        l4894 1174                                          l4886 1130  
                                        l4878 1100                                          l4990 239C  
                                        l4982 2378                                          l4974 2324  
                                        l4968 1440                                          l4896 1180  
                                        l4888 113A                                          l4984 237A  
                                        l4976 233A                                          l4898 118C  
                                        l4986 238A                                          l4996 23B4  
                                        l4988 238E                                          l4998 23BE  
                                        STR_1 1028                                          STR_2 1028  
                                        STR_4 1011                                          STR_5 101A  
                                        STR_6 1021                                          u3000 1E94  
          lcd_8bit_send_command@l_pin_counter 0022                                          u3001 1E90  
                                        _LATA 0F89                                          u3030 1F72  
                                        u3014 1EBC                                          _LATB 0F8A  
                                        u3031 1F6C                                          u3015 1EB8  
                                        _LATC 0F8B                                          u4000 2CF2  
                                        u3040 1F74                                          u3024 1F1E  
                                        _LATD 0F8C                                          u4001 2CEE  
                                        u3025 1F1A                                          _LATE 0F8D  
                                        u4010 2D0E                                          u4011 2D0A  
                                        u4100 1B2E                                          u4020 19AE  
                                        u3300 2D72                                          u4101 1B2A  
                                        u4021 19AA                                          u3301 2D6C  
                                        u4110 1B3C                                          u4030 19BC  
                                        u3310 2D74                                          u3150 2E1E  
                                        u3230 20E2                                          u4111 1B38  
                                        u4031 19B8                                          u3151 2E1A  
                                        u3231 20DE                                          u4040 1A18  
                                        u3320 2C56                                          u3160 2E40  
                                        u3240 213C                                          u4041 1A14  
                                        u3321 2C52                                          u3161 2E3C  
                                        u3241 2138                                          u4050 1A6E  
                                        u3330 2C8E                                          u3170 2AC6  
                                        u3250 2A36                                          u4051 1A6A  
                                        u3331 2C88                                          u3171 2AC2  
                                        u3251 2A32                                          u4060 1AB8  
                                        u3340 2C90                                          u3420 2B56  
                                        u4061 1AB4                                          u3421 2B52  
                                        u4070 1AD6                                          u3510 2990  
                                        u3190 2B2E                                          u3270 2A9E  
                                        u3430 2B88                                          u4071 1AD2  
                                        u3511 298C                                          u3191 2B2A  
                                        u3271 2A9A                                          u3520 3198  
                                        u4080 1AE6                                          u2800 220E  
                                        u3280 3082                                          u3184 2B0C  
                                        u3264 2A7C                                          u3440 2BB6  
                                        u3521 3194                                          u4081 1AE2  
                                        u2801 220A                                          u3281 307E  
                                        u3185 2B08                                          u3265 2A78  
                                        u3530 321E                                          u4090 1AF4  
                                        u3290 2D40                                          u2810 2230  
                                        u3610 2FB8                                          u3450 2BC6  
                                        u3531 321A                                          u4091 1AF0  
                                        u3291 2D3C                                          u2811 222C  
                                        u3611 2FB4                                          u3451 2BC2  
                                        u5300 2600                                          u3620 2F72  
                                        u5301 25FC                                          u3621 2F6E  
                                        u3437 2B7E                                          u3630 30FC  
                                        u5310 2628                                          u3631 30F8  
                                        u5311 2624                                          u3447 2BAC  
                                        u3800 1110                                          u2824 2258  
                                        u5400 2838                                          u5320 265E  
                                        u3801 110C                                          u2825 2254  
                                        u5401 2834                                          u5321 265A  
                                        u3810 128A                                          u3730 1046  
                                        u2834 22BA                                          u5410 2852  
                                        u5330 302A                                          u3570 2F26  
                                        u3731 1042                                          u2835 22B6  
                                        u5411 284E                                          u5331 3026  
                                        u3571 2F22                                          u3900 13FE  
                                        u3820 12E4                                          u3740 1058  
                                        u5340 26B8                                          u5420 286C  
                                        u5500 1B62                                          u3901 13FA  
                                        u3821 12E0                                          u3741 1054  
                                        u5341 26B4                                          u5421 2868  
                                        u3910 1438                                          u3830 1304  
                                        u3750 1068                                          u5350 26D2  
                                        u5430 288A                                          u5510 1B74  
                                        u3911 1434                                          u3831 1300  
                                        u3815 1280                                          u3751 1064  
                                        u5351 26CE                                          u5431 2886  
                                        u5511 1B70                                          u3840 1316  
                                        u3760 10A8                                          u3920 233A  
                                        u5360 26F8                                          u5440 28A0  
                                        u5520 1B8C                                          u5600 2014  
                                        u3841 1312                                          u3761 10A4  
                                        u3921 2336                                          u5361 26F4  
                                        u5441 289C                                          u5521 1B88  
                                        u5601 2010                                          u3850 1344  
                                        u3770 10BA                                          u3930 236E  
                                        u5370 2716                                          u5450 28C4  
                                        u5290 25EE                                          u5530 1BB8  
                                        u5610 2032                                          u3851 1340  
                                        u3771 10B6                                          u5371 2712  
                                        u5451 28C0                                          u5291 25EA  
                                        u5531 1BB4                                          u5611 202E  
                                        u3860 135A                                          u3780 10CA  
                                        u3940 239C                                          u5380 2732  
                                        u5460 2BD8                                          u5540 1BCE  
                                        u5620 2EBE                                          u5700 2822  
                                        u3861 1356                                          u3781 10C6  
                                        u3941 2398                                          u5381 272E  
                                        u5461 2BD4                                          u5541 1BCA  
                                        u5621 2EBA                                          u5701 281E  
                                        u3870 136E                                          u3790 1100  
                                        u3950 23B0                                          u2990 1E72  
                                        u5630 1D00                                          u5390 2758  
                                        u5470 2C2E                                          u5550 1C72  
                                        u3871 136A                                          u3791 10FC  
                                        u3951 23AC                                          u3935 2364  
                                        u2991 1E6E                                          u5631 1CFC  
                                        u5391 2754                                          u5471 2C2A  
                                        u5551 1C6E                                          u3880 1388  
                                        u3960 23D8                                          u5640 1D42  
                                        u5480 3046                                          u5560 1C84  
                                        u3881 1384                                          u3961 23D4  
                                        u5641 1D3E                                          u5481 3042  
                                        u5561 1C80                                          u3890 13D0  
                                        u3970 23F8                                          u5650 1DB4  
                                        u5570 1C9E                                          u5490 1B60  
                                        u5730 1936                                          u3891 13CC  
                                        u3971 23F4                                          u5651 1DB0  
                                        u5571 1C9A                                          u5491 1B5A  
                                        u5731 1932                                          u3980 2408  
                                        u5660 1DFA                                          u5580 1CAE  
                                        u5740 1970                                          u3981 2404  
                                        u5661 1DF6                                          u5581 1CAA  
                                        u5741 196C                                          u3990 2CD4  
                                        u5670 1E5A                                          u5590 1FC6  
                                        u3991 2CD0                                          u5671 1E56  
                                        u5591 1FC2                                          u5681 2776  
                                        u5690 2792                                          u5691 278E  
                                        u5757 174A                                          u5767 2142  
                                        u5777 2162                                          u5787 217E  
                     ??_application_intialize 0029                                          _adc1 00B0  
                    _RB4_InterruptHandler_LOW 00D1                                          abs@a 0013  
                                        _dbuf 0100                              __end_of_ADC_INIT 2A20  
                                        _main 171C                                          _dtoa 1B50  
                                        _prec 00C3                      _RB7_InterruptHandler_LOW 00C5  
                                        pad@i 0024                                          pad@p 0021  
                                        fsr0h 0FEA                                          fsr1h 0FE2  
                                        indf0 0FEF                                          fsr2h 0FDA  
                                        fsr0l 0FE9                                          indf1 0FE7  
                                        indf2 0FDF                                          fsr1l 0FE1  
                                        pad@w 0026                                          fsr2l 0FD9  
                                        btemp 0073                                          prodh 0FF4  
                                        prodl 0FF3                                          start 000E  
               __end_of_lcd_8bit_send_command 2B40                                  ___param_bank 0000  
                      dc_motor_initialize@ret 001D                                         ??_abs 0015  
                        _gpio_pin_write_logic 21F8                                         ??_pad 0023  
                            __end_of_INT0_ISR 32B0                              __end_of_INT1_ISR 32AC  
                            __end_of_INT2_ISR 32A8                                _lm35_res_cel_1 0065  
                              _lm35_res_cel_2 0063                                 ___fltol@sign1 003C  
                                       ?_main 0001                                         ?_dtoa 0028  
                             __end_of___awdiv 276A                                         _EEADR 0FA9  
                             __end_of___awmod 28D6                               __end_of___flmul 1456  
                             __end_of___fltol 242A                ??_ADC_get_conversion_interrupt 0017  
                             ___awdiv@divisor 000F                               __end_of___lwdiv 2D2E  
                                       i2l422 2500                                         i2l428 2502  
                                       i2l703 328C                                         i2l714 3272  
                                       i2l492 31E4                                         i2l900 163C  
                                       i2l725 3258                                         i2l902 1680  
                                       i2l736 323E                                         i2l904 16C4  
                                       i2l682 32AE                                         i2l907 1708  
                                       i2l692 32A6                                         i2l687 32AA  
                                       i2l960 3184                                         i2l890 14E8  
                                       i2l892 152C                               ___awdiv@counter 0011  
                                       i2l885 1488                                         i2l894 1570  
                                       i2l887 14A8                                         i2l896 15B4  
                                       i2l898 15F8                           relay_turn_off@F3052 0068  
                                vfpfcnvrt@fmt 0037                                         _PORTA 0F80  
                                       _PORTB 0F81                                         _PORTC 0F82  
                                       _PORTD 0F83                                         _PORTE 0F84  
                                       _TRISA 0F92                                         _TRISB 0F93  
                                       _TRISC 0F94                                         _TRISD 0F95  
                                       _TRISE 0F96                                         _flags 00DD  
                                       _fputc 25DC                                         _fputs 2FE8  
                    ?_lcd_8bit_send_char_data 001A                                         pad@fp 001D  
                                       _width 00C1                                         _putch 32B0  
                                       dtoa@d 002A                                         dtoa@i 0033  
                                       dtoa@p 002E                                         dtoa@s 0032  
                                       dtoa@w 0030                                         pclath 0FFA  
                                       pclatu 0FFB                                         tablat 0FF5  
                                       ttemp5 0074                                         ttemp6 0077  
                                       ttemp7 007B                                         status 0FD8  
                                       wtemp8 0074                               __end_of_sprintf 2F14  
                          _ADC_SELECT_CHANNEL 3186                               __initialization 2D9E  
                                __end_of_main 199C                                  __end_of_dtoa 1CE6  
                       ?_gpio_pin_write_logic 000D                                     ??_ADC_ISR 0009  
                         ?_ADC_SELECT_CHANNEL 0010                        lcd_8bit_set_cursor@lcd 0023  
                      lcd_8bit_set_cursor@ret 0029                        lcd_8bit_set_cursor@row 0025  
                               _lat_registers 008A                   __end_of_dc_motor_initialize 30AA  
                                      ??_main 0061                                        ??_dtoa 002C  
                               __activetblptr 0003                              led_turn_on@F3053 006D  
                                   ??_RB4_ISR 0001                                     ??_RB5_ISR 0001  
                                   ??_RB6_ISR 0001                                     ??_RB7_ISR 0001  
                                      ?_fputc 000D                                        ?_fputs 0016  
                                      _ADRESH 0FC4                                        _EEADRH 0FAA  
                                      _ADRESL 0FC3                                        _EEDATA 0FA8  
                                      _EECON2 0FA7                              ___awdiv@dividend 000D  
                                      ?_putch 0001                          ??_ADC_SELECT_CHANNEL 0013  
                                      i2l4402 24B6                                        i2l4404 24FC  
                                      i2l4602 3154                                        i2l4390 242A  
                                      i2l4392 243C                                        i2l4720 31CC  
                                      i2l4394 244E                                        i2l4722 32AC  
                                      i2l4396 2456                                        i2l4388 242A  
                                      i2l4716 31B6                                        i2l4740 3276  
                                      i2l4398 247E                                        i2l4718 31B8  
                                      i2l4734 32A4                                        i2l4742 3278  
                                      i2l4728 32A8                                        i2l5800 15D0  
                                      i2l4762 3272                                        i2l4754 325C  
                                      i2l4770 3244                                        i2l5810 1614  
                                      i2l5802 15DE                                        i2l6532 24E6  
                                      i2l4748 328C                                        i2l4756 325E  
                                      i2l5820 1658                                        i2l5812 1622  
                                      i2l5804 15EE                                        i2l4790 323E  
                                      i2l4782 3228                                        i2l5830 169C  
                                      i2l5822 1666                                        i2l5814 1632  
                                      i2l5806 15F2                                        i2l5750 1476  
                                      i2l4776 3258                                        i2l4768 3242  
                                      i2l4784 322A                                        i2l5840 16E0  
                                      i2l5832 16AA                                        i2l5824 1676  
                                      i2l5816 1636                                        i2l5808 1606  
                                      i2l5760 14C4                                        i2l5752 1484  
                                      i2l5842 16EE                                        i2l5834 16BA  
                                      i2l5826 167A                                        i2l5818 164A  
                                      i2l5770 1504                                        i2l5762 14C8  
                                      i2l5754 1496                                        i2l5844 16FE  
                                      i2l5836 16BE                                        i2l5828 168E  
                                      i2l5780 1548                                        i2l5772 1512  
                                      i2l5764 14D6                                        i2l5756 14A4  
                                      i2l5748 1468                                        i2l5846 1702  
                                      i2l5838 16D2                                        i2l5790 158C  
                                      i2l5782 1556                                        i2l5774 1522  
                                      i2l5766 14E4                                        i2l5758 14B6  
                                      i2l5792 159A                                        i2l5784 1566  
                                      i2l5776 1526                                        i2l5768 14F6  
                                      i2l5794 15AA                                        i2l5786 156A  
                                      i2l5778 153A                                        i2l5796 15AE  
                                      i2l5788 157E                                        i2l5798 15C2  
                        adc_select_format@adc 000D           convert_uint16_to_string@Temp_String 00F3  
                            __end_of___xxtofl 1B50                   __end_of_dc_motor_move_right 2FE8  
                                vfprintf@cfmt 0049                                     ??___awdiv 0011  
                                   ??___awmod 0011                                     ??___flmul 0023  
                                   ??___fltol 0038                                     ??___lwdiv 0011  
                        _lcd_8bit_send_string 2B40                                        _memset 1CE6  
                                      clear_0 2DE4                                        clear_1 2DF0  
                                      clear_2 2DFC                              ___awdiv@quotient 0013  
                             ___awmod@divisor 000F                                        isa$std 0001  
                             ___awmod@counter 0011                                        pad@buf 001F  
                                      dtoa@fp 0028                   lcd_8bit_send_string_pos@lcd 002A  
                 lcd_8bit_send_string_pos@ret 0030                   lcd_8bit_send_string_pos@row 002C  
                 lcd_8bit_send_string_pos@str 002E       gpio_pin_direction_intialize@_pin_config 000D  
                                      fputc@c 000D                                     ?_ADC_INIT 0011  
                                      fputs@c 001A                                        fputs@i 001B  
                                __pdataCOMRAM 006F                                        fputs@s 0016  
                       ADC_SELECT_CHANNEL@adc 0010                                  __mediumconst 0000  
                                      tblptrh 0FF7                                        tblptrl 0FF6  
                                      tblptru 0FF8                                        putch@c 0001  
                            __end_of_vfprintf 2EC8                                     ??_sprintf 0053  
                                ___xxtofl@arg 0017                                  ___xxtofl@exp 0016  
                                ___xxtofl@val 000D                                    __accesstop 0080  
                     __end_of__initialization 2E02                                     ?_INT0_ISR 0001  
                                   ?_INT1_ISR 0001                                     ?_INT2_ISR 0001  
                               _adc_rss_txt_1 00E5                                 _adc_rss_txt_2 00DF  
                               ___rparam_used 0001               ADC_get_conversion_interrupt@adc 0014  
                                  ___fltol@f1 0034                             RB5_ISR@RB5_Source 0001  
                      ??_gpio_pin_write_logic 0010                                __pcstackCOMRAM 0001  
                                __pidataBANK0 30AA                                 __end_of_fputc 26A6  
                               __end_of_fputs 302C                         ?_lcd_8bit_send_string 0023  
                               __end_of_putch 32B2                            _lcd_8bit_intialize 20CC  
                   ADC_SELECT_CHANNEL@channel 0012                                    ??_ADC_INIT 0013  
                         ?_lcd_8bit_intialize 0023                                       ??_fputc 0011  
                                  _dc_motor_1 00B9                                    _dc_motor_2 00B7  
                                     ??_fputs 001A                                       ??_putch 000D  
                                  __pbssBANK0 00BB                                    __pbssBANK1 0100  
                       _INT0_InterruptHandler 00D9                                    ??_INT0_ISR 0001  
                                  ??_INT1_ISR 0001                                    ??_INT2_ISR 0001  
               __end_of_application_intialize 32A0                          ??_lcd_8bit_intialize 0025  
                           led_turn_off@F3058 006C                   convert_uint16_to_string@ret 00F9  
                                     _ADC_ISR 31B6                   convert_uint16_to_string@str 00F1  
                                     ?_memset 000D                             RB7_ISR@RB7_Source 0001  
  ADC_get_conversion_result@conversion_result 0003                                       _RB4_ISR 3274  
                                     _RB5_ISR 325A                                       _RB6_ISR 3240  
                                     _RB7_ISR 3226                                     ?___xxtofl 000D  
                   _RB6_InterruptHandler_HIGH 00CB                          led_turn_toggle@F3063 006B  
         __end_of_lcd_8bit_send_enable_signal 3154                   _lcd_8bit_send_enable_signal 3120  
                                  _btn_values 1001                lcd_8bit_send_enable_signal@lcd 0017  
              lcd_8bit_send_enable_signal@ret 0019                                _tris_registers 0094  
                    _RB6_InterruptHandler_LOW 00C9                 ??_lcd_8bit_send_enable_signal 0019  
                        _ADC_InterruptHandler 00DB                                       __Hparam 0000  
                                     __Lparam 0000                           _ecu_layer_intialize 31E6  
 adc_input_channel_port_configuration@channel 000F                        ??_lcd_8bit_send_string 0027  
                       _lcd_8bit_send_command 2AB0                                       ___awdiv 26A6  
                                     ___awmod 2826                                       ___flmul 102C  
                                     ___fltol 2324                                       _adc_req 00DE  
                                     ___lwdiv 2CBA                                     ?_vfprintf 0043  
                                __psmallconst 1000                  __end_of_ADC_START_CONVERSION 3226  
                  __end_of_gpio_pin_intialize 2E78                                       __pcinit 2D9E  
                                     __ramtop 1000                      _lcd_8bit_send_string_pos 2F14  
                                     __ptext0 171C                                       __ptext1 2F14  
                                     __ptext2 28D6                                       __ptext3 2B40  
                                     __ptext4 2A20                                       __ptext5 2F5C  
                                     __ptext6 2FA2                                       __ptext7 276A  
                                     __ptext8 2EC8                                       __ptext9 2E78  
                                  _keypad_obj 009E                      _convert_uint16_to_string 276A  
                                  ??___xxtofl 0011                              ___awmod@dividend 000D  
                        ?_ecu_layer_intialize 0001                                       _sprintf 2EC8  
       lcd_8bit_intialize@l_data_pins_counter 0027                                __pintcode_body 1456  
                        end_of_initialization 2E02                                       fputc@fp 000F  
                                     memset@c 000F                                       memset@k 0015  
                                     memset@n 0011                                       memset@s 0017  
                                     int_func 1456                                       fputs@fp 0018  
        __end_of_ADC_get_conversion_interrupt 3120                  _ADC_get_conversion_interrupt 30E6  
                       gpio_pin_intialize@ret 001A                                 _dc_motor_stop 2F5C  
                           __end_of_vfpfcnvrt 20CC                                       postdec1 0FE5  
                                     postdec2 0FDD                                       postinc0 0FEE  
                                     postinc1 0FE6                                       postinc2 0FDE  
                            vfpfcnvrt@convarg 003D                                    ??_vfprintf 0049  
                       _INT1_InterruptHandler 00D7                                     _PORTBbits 0F81  
                            _InterruptManager 0008                 gpio_pin_intialize@_pin_config 0017  
                       ??_ecu_layer_intialize 0029          __end_of_gpio_pin_direction_intialize 1FA0  
                _gpio_pin_direction_intialize 1E5C                                 ___xxtofl@sign 0015  
         ADC_get_conversion_interrupt@channel 0016                                   ___flmul@grs 0028  
                              ?_dc_motor_stop 0017                 ?_ADC_get_conversion_interrupt 0014  
                          relay_turn_on@F3047 0069                        ?_lcd_8bit_send_command 001A  
                           _adc_select_format 2D2E                lcd_8bit_send_string_pos@column 002D  
               convert_uint16_to_string@F3198 00BB                                   vfpfcnvrt@ap 0039  
                                 vfpfcnvrt@cp 0041                                   vfpfcnvrt@fp 0035  
                          ?_adc_select_format 000D                                 __pidataCOMRAM 32A0  
                              __end_of_memset 1E5C                           ??_adc_select_format 000F  
                         start_initialization 2D9E                 convert_uint16_to_string@value 00EF  
                                 __end_of_abs 306C                                   __end_of_pad 2C44  
               ?_gpio_pin_direction_intialize 000D                          _ADC_START_CONVERSION 320C  
                      dc_motor_stop@_dc_motor 0017                     __end_of_adc_select_format 2D9E  
                     _lcd_8bit_send_char_data 2A20                                   vfprintf@fmt 0045  
                                 __pdataBANK0 0080                                      ?_ADC_ISR 0001  
                                    ??_memset 0013                           _lcd_8bit_set_cursor 28D6  
                ?_adc_defaultinterrupthandler 0001                                    memset@dest 000D  
                    lcd_8bit_send_command@lcd 001A                      lcd_8bit_send_command@ret 0021  
                            dc_motor_stop@ret 0019                                      ?_RB4_ISR 0001  
                                    ?_RB5_ISR 0001                                      ?_RB6_ISR 0001  
                                    ?_RB7_ISR 0001       __end_of_configure_the_voltage_reference 2CBA  
           ??_configure_the_voltage_reference 000F              ?_configure_the_voltage_reference 000D  
             _configure_the_voltage_reference 2C44                                     ___flmul@a 001F  
                                   ___flmul@b 001B                                   __pbssCOMRAM 0063  
                               __pcstackBANK0 00EF                                     _adc_res_1 00ED  
                                   _adc_res_2 00EB                                   ADC_INIT@adc 0011  
                                 ADC_INIT@ret 0014                         ?_ADC_START_CONVERSION 000D  
                        ?_lcd_8bit_set_cursor 0023                         _INT2_InterruptHandler 00D5  
             gpio_pin_direction_intialize@ret 0015                               ??_dc_motor_stop 0019  
                                   __pnvBANK0 00FB  ADC_get_conversion_interrupt@coversion_status 0017  
                  ??_lcd_8bit_send_string_pos 0030                              ___lwdiv@dividend 000D  
                       _application_intialize 328E                                     _dtoa$2546 002C  
                                   __pintcode 0008           __end_of_adc_defaultinterrupthandler 3186  
                 _adc_defaultinterrupthandler 3154                   lcd_8bit_send_char_data@data 001C  
                  ??_convert_uint16_to_string 0061                    ?_ADC_get_conversion_result 0001  
             gpio_pin_write_logic@_pin_config 000D                                      ?___awdiv 000D  
                                    ?___awmod 000D                                      ?___flmul 001B  
                                    ?___fltol 0034                                      ?___lwdiv 000D  
                   gpio_pin_write_logic@logic 000F                 ??_adc_defaultinterrupthandler 0009  
                                 __smallconst 1000                     _RB4_InterruptHandler_HIGH 00D3  
                                    _ADC_INIT 297E                     _RB7_InterruptHandler_HIGH 00C7  
                            ___lwdiv@quotient 0011                                      ?_sprintf 004B  
                          _gpio_pin_intialize 2E0C                         ??_lcd_8bit_set_cursor 0027  
              ??_gpio_pin_direction_intialize 000F                      _RB5_InterruptHandler_LOW 00CD  
                                    _INT0_ISR 32AC                                      _INT1_ISR 32A8  
                                    _INT2_ISR 32A4                                      _RB4_Flag 0072  
                   ??_lcd_8bit_send_char_data 001D                                      _RB5_Flag 0071  
                                    _RB6_Flag 0070                                      _RB7_Flag 006F  
                           RB4_ISR@RB4_Source 0001                           ?_gpio_pin_intialize 0017  
                    __end_of_InterruptManager 171C                                      _PIE1bits 0F9D  
                                    i2u500_40 1548                                      i2u500_41 1544  
                                    i2u501_40 1556                                      i2u501_41 1552  
                                    i2u510_40 15EE                                      i2u502_40 1566  
                                    i2u510_41 15EA                                      i2u502_41 1562  
                                    i2u335_40 243C                                      i2u511_40 1606  
                                    i2u503_40 157E                                      i2u335_41 2438  
                                    i2u511_41 1602                                      i2u503_41 157A  
                                    i2u336_40 244E                                      i2u520_40 169C  
                                    i2u512_40 1614                                      i2u504_40 158C  
                                    i2u336_41 244A                                      i2u520_41 1698  
                                    i2u512_41 1610                                      i2u504_41 1588  
                                    i2u521_40 16AA                                      i2u513_40 1622  
                                    i2u505_40 159A                                      i2u521_41 16A6  
                                    i2u513_41 161E                                      i2u505_41 1596  
                                    _PIR1bits 0F9E                                      i2u337_45 2496  
                                    i2u338_40 24D2                                      i2u522_40 16BA  
                                    i2u514_40 1632                                      i2u506_40 15AA  
                                    i2u338_41 24CC                                      i2u522_41 16B6  
                                    i2u514_41 162E                                      i2u506_41 15A6  
                                    i2u339_40 24D4                                      i2u523_40 16D2  
                                    i2u515_40 164A                                      i2u507_40 15C2  
                                    i2u523_41 16CE                                      i2u515_41 1646  
                                    i2u507_41 15BE                                      i2u364_40 31CC  
                                    i2u524_40 16E0                                      i2u516_40 1658  
                                    i2u508_40 15D0                                      i2u364_41 31C8  
                                    i2u524_41 16DC                                      i2u516_41 1654  
                                    i2u508_41 15CC                                      i2u525_40 16EE  
                                    i2u517_40 1666                                      i2u509_40 15DE  
                                    i2u525_41 16EA                                      i2u517_41 1662  
                                    i2u509_41 15DA                                      i2u365_48 31D2  
                                    i2u366_40 3288                                      i2u526_40 16FE  
                                    i2u518_40 1676                                      i2u365_49 31E4  
                                    i2u366_41 3284                                      i2u526_41 16FA  
                                    i2u518_41 1672                                      i2u367_40 326E  
                                    i2u519_40 168E                                      i2u367_41 326A  
                                    i2u519_41 168A                                      i2u368_40 3254  
                                    i2u368_41 3250                                      i2u369_40 323A  
                                    i2u369_41 3236                                      i2u490_40 14A4  
                                    i2u490_41 14A0                                      i2u491_40 14B6  
                                    i2u491_41 14B2                                      i2u492_40 14C4  
                                    i2u492_41 14C0                                      i2u493_40 14D6  
                                    i2u493_41 14D2                                      i2u494_40 14E4  
                                    i2u494_41 14E0                                      i2u495_40 14F6  
                                    i2u487_40 1476                                      i2u495_41 14F2  
                                    i2u487_41 1472                                      i2u496_40 1504  
                                    i2u488_40 1484                                      i2u496_41 1500  
                                    i2u488_41 1480                                      i2u497_40 1512  
                                    i2u489_40 1496                                      i2u497_41 150E  
                                    i2u489_41 1492                                      i2u498_40 1522  
                                    i2u498_41 151E                                      i2u499_40 153A  
                                    i2u499_41 1536                           _dc_motor_initialize 306C  
                dc_motor_initialize@_dc_motor 001B             __end_of_ADC_get_conversion_result 2504  
        lcd_8bit_send_char_data@l_pin_counter 0022                         lcd_8bit_intialize@lcd 0023  
                       lcd_8bit_intialize@ret 0028                                     _vfpfcnvrt 1FA0  
                                  _ADCON0bits 0FC2                                    _ADCON1bits 0FC1  
                                  _ADCON2bits 0FC0                          ??_gpio_pin_intialize 0019  
          configure_the_voltage_reference@adc 000D                     lcd_8bit_set_cursor@coulmn 0026  
                        ?_dc_motor_initialize 001B                       gpio_pin_write_logic@ret 0016  
                                 _INTCON2bits 0FF1                                   _INTCON3bits 0FF0  
                                   copy_data0 2DB2                                     copy_data1 2DD2  
                      ??_ADC_START_CONVERSION 000F                           _dc_motor_move_right 2FA2  
                     ??_lcd_8bit_send_command 001D                                    _EECON1bits 0FA6  
                      ?_application_intialize 0001                                      __Hrparam 0000  
                                  vfprintf@ap 0047                                      __Lrparam 0000  
                                  vfprintf@fp 0043                             RB6_ISR@RB6_Source 0001  
                 __end_of_ecu_layer_intialize 320C                                    ?_vfpfcnvrt 0035  
                        ?_dc_motor_move_right 0017                                      _adc_flag 0067  
             __end_of_lcd_8bit_send_char_data 2AB0                            __end_of_btn_values 1011  
                                  sprintf@fmt 004D                                      ___xxtofl 199C  
                       ??_dc_motor_initialize 001D                               ___lwdiv@divisor 000F  
                  lcd_8bit_send_char_data@lcd 001A                               ___lwdiv@counter 0013  
                  lcd_8bit_send_char_data@ret 0021                                      __ptext10 1FA0  
                                    __ptext11 1B50                                      __ptext20 328E  
                                    __ptext12 2BCA                                      __ptext21 31E6  
                                    __ptext13 2FE8                                      __ptext30 2C44  
                                    __ptext22 20CC                                      __ptext14 25DC  
                                    __ptext31 2D2E                                      __ptext23 2AB0  
                                    __ptext15 32B0                                      __ptext32 199C  
                                    __ptext24 3120                                      __ptext16 302C  
                                    __ptext41 3226                                      __ptext33 2CBA  
                                    __ptext25 306C                                      __ptext17 2826  
                                    __ptext50 242A                                      __ptext42 3240  
                                    __ptext34 2324                                      __ptext26 2E0C  
                                    __ptext18 26A6                                      __ptext51 0000  
                                    __ptext43 325A                                      __ptext35 102C  
                                    __ptext27 21F8                                      __ptext19 1CE6  
                                    __ptext44 3274                                      __ptext36 30E6  
                                    __ptext28 1E5C                                      __ptext45 32A4  
                                    __ptext37 320C                                      __ptext29 297E  
                                    __ptext46 32A8                                      __ptext38 3186  
                                    __ptext47 32AC                                      __ptext39 2504  
                                    __ptext48 31B6                                      __ptext49 3154  
                  __end_of_ADC_SELECT_CHANNEL 31B6                        dc_motor_move_right@ret 0019  
            __end_of_lcd_8bit_send_string_pos 2F5C           convert_uint16_to_string@DataCounter 00FA  
            __end_of_convert_uint16_to_string 2826                                      isa$xinst 0000  
                                    int$flags 0073                                      _vfprintf 2E78  
                       ??_dc_motor_move_right 0019                  ADC_get_conversion_result@adc 0001  
                ADC_get_conversion_result@ret 0008                                    _INTCONbits 0FF2  
                __end_of_gpio_pin_write_logic 2324                  ?_lcd_8bit_send_enable_signal 0017  
                     ADC_START_CONVERSION@adc 000D                fp__adc_defaultinterrupthandler 0000  
                                    intlevel2 0000                                     sprintf@ap 0053  
                 ??_ADC_get_conversion_result 0005                  dc_motor_move_right@_dc_motor 0017  
                                 ??_vfpfcnvrt 003B                                      sprintf@f 0055  
                                    sprintf@s 004B                                _port_registers 0080  
                     lcd_8bit_send_string@lcd 0023                       lcd_8bit_send_string@ret 0027  
                     lcd_8bit_send_string@str 0025                  lcd_8bit_send_command@command 001C  
                           ?_InterruptManager 0001                    __end_of_lcd_8bit_intialize 21F8  
                       __end_of_dc_motor_stop 2FA2  
